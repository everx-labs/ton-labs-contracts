.version sol 0.66.0

.pragma selector-func-solidity

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc Elector.Update.tsol, 96
PUSHINT 0
SETGLOB 2
.loc Elector.Update.tsol, 98
PUSHINT 0
GETGLOB 10
NEWDICT
PUSHINT 0
BLKPUSH 3, 0
NEWDICT
PUSHINT 0
BLKPUSH 2, 0
TUPLE 8
PUSHINT 0
BLKPUSH 2, 0
TUPLE 5
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STDICT
	SWAP
	UNTUPLE 8
	REVERSE 9, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 32
	STU 256
	STU 64
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	get_current_vset_f0cade92_internal
.type	get_current_vset_f0cade92_internal, @function
CALL $get_current_vset_f0cade92_internal_macro$

.macro get_current_vset_f0cade92_internal_macro
.loc Elector.Update.tsol, 117
CALLREF {
	CALL $Common_no_obj_getValidatorSetsByChain_d29f0692_macro$
}
.loc Elector.Update.tsol, 119
PUSHINT 0
BLKPUSH 4, 0
NEWDICT
TUPLE 6
.loc Elector.Update.tsol, 120
OVER
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 121
	PUSH2 S1, S1
	ISNULL
	THROWIF 63
	.loc Elector.Update.tsol, 122
	DUP
	THIRD
	ISNULL
	PUSHCONT {
		.loc Elector.Update.tsol, 123
		DUP
		THIRD
		DUP
		ISNULL
		THROWIF 63
		POP S2
		.loc Elector.Update.tsol, 0
	}
	IFNOT
	.loc Elector.Update.tsol, 125
	DUP
	SECOND
	ISNULL
	PUSHCONT {
		.loc Elector.Update.tsol, 126
		DUP
		SECOND
		DUP
		ISNULL
		THROWIF 63
		POP S2
		.loc Elector.Update.tsol, 0
	}
	IFNOT
	.loc Elector.Update.tsol, 0
	DROP
}
IFNOT
.loc Elector.Update.tsol, 129
NIP
.loc Elector.Update.tsol, 0

.globl	send_message_back_30631536_internal
.type	send_message_back_30631536_internal, @function
CALL $send_message_back_30631536_internal_macro$

.macro send_message_back_30631536_internal_macro
.loc Elector.Update.tsol, 144
NEWC
.loc Elector.Update.tsol, 145
STSLICECONST x62_
.loc Elector.Update.tsol, 146
ROLL 6
STSLICER
.loc Elector.Update.tsol, 147
ROT
STGRAMS
.loc Elector.Update.tsol, 148
PUSHINT 107
STZEROES
.loc Elector.Update.tsol, 149
ROLL 4
STUR 32
.loc Elector.Update.tsol, 150
ROLL 3
STUR 64
.loc Elector.Update.tsol, 151
ROT
STUR 32
.loc Elector.Update.tsol, 152
ENDC
SWAP
SENDRAWMSG
.loc Elector.Update.tsol, 0

.globl	return_stake_fe624e47_internal
.type	return_stake_fe624e47_internal, @function
CALL $return_stake_fe624e47_internal_macro$

.macro return_stake_fe624e47_internal_macro
.loc Elector.Update.tsol, 156
SWAP
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 4000269644
STUR 143
STU 64
STU 32
ENDC
PUSHINT 64
SENDRAWMSG
.loc Elector.Update.tsol, 0

.globl	send_confirmation_1aa717cd_internal
.type	send_confirmation_1aa717cd_internal, @function
CALL $send_confirmation_1aa717cd_internal_macro$

.macro send_confirmation_1aa717cd_internal_macro
.loc Elector.Update.tsol, 160
SWAP
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 12669519700468838679097577345632051794083291476543564
STUR 175
STU 64
STU 32
ENDC
PUSHINT 2
SENDRAWMSG
.loc Elector.Update.tsol, 0

.macro process_new_stake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 178
OVER
PUSHCONT {
	LDU 64
	LDU 256
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 64
	LDU 256
}
IFELSE
LDU 32
LDU 32
LDU 256
LDREF
LDI 32
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $process_new_stake_6aecb98a_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	process_new_stake_6aecb98a_internal
.type	process_new_stake_6aecb98a_internal, @function
CALL $process_new_stake_6aecb98a_internal_macro$

.macro process_new_stake_6aecb98a_internal_macro
.loc Elector.Update.tsol, 178
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.Update.tsol, 187
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.Update.tsol, 188
	PUSH S2
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	SECOND
	INDEX 7
	NOT
	ROT
	NEQINT -1
	OR
	PUSHCONT {
		.loc Elector.Update.tsol, 191
		ROLL 7
		PUSHINT 0
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 194
	PUSH3 S3, S0, S4
	PUSH S8
	NEWC
	STSLICECONST x654c5074
	STU 32
	STU 32
	STU 256
	STU 256
	.loc Elector.Update.tsol, 195
	ENDC
	CTOS
	ROLL 3
	CTOS
	PUSH S7
	CHKSIGNS
	PUSHCONT {
		.loc Elector.Update.tsol, 197
		ROLL 6
		PUSHINT 1
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.Update.tsol, 0
	}
	IFNOTJMP
	.loc Elector.Update.tsol, 199
	PUSH S3
	PUSHPOW2 16
	LESS
	PUSHCONT {
		.loc Elector.Update.tsol, 201
		ROLL 6
		PUSHINT 6
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 203
	OVER
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	INDEX2 1, 3
	.loc Elector.Update.tsol, 205
	DEPTH
	ADDCONST -2
	PICK
	PUSHINT 1000000000
	SUB
	.loc Elector.Update.tsol, 206
	DUP
	LSHIFT 12
	PUSH S2
	LESS
	PUSHCONT {
		.loc Elector.Update.tsol, 208
		ROLL 8
		PUSHINT 2
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 8
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 211
	DUP
	UFITS 128
	PUSH S2
	ADD
	POP S2
	.loc Elector.Update.tsol, 212
	ROLL 6
	PUSH S4
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	INDEX2 1, 0
	NEQ
	PUSHCONT {
		.loc Elector.Update.tsol, 214
		ROLL 7
		PUSHINT 3
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 216
	PUSH S3
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	SECOND
	INDEX 6
	PUSHCONT {
		.loc Elector.Update.tsol, 218
		ROLL 7
		PUSHINT 0
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 220
	PUSH2 S6, S3
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	SECOND
	INDEX 4
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDVARUINT16
		LDU 32
		LDU 32
		LDU 256
		LDU 256
		ENDS
		TUPLE 5
	}
	.loc Elector.Update.tsol, 221
	FALSE
	.loc Elector.Update.tsol, 222
	OVER
	ISNULL
	PUSHCONT {
		.loc Elector.Update.tsol, 224
		PUSH2 S1, S1
		ISNULL
		THROWIF 63
		.loc Elector.Update.tsol, 226
		DUP
		FIRST
		PUSH S4
		ADD
		POP S4
		.loc Elector.Update.tsol, 227
		PUXC S5, S-1
		INDEX 3
		NEQ
		NIP
		.loc Elector.Update.tsol, 0
	}
	IFNOT
	.loc Elector.Update.tsol, 229
	PUSHCONT {
		.loc Elector.Update.tsol, 231
		ROLL 8
		PUSHINT 4
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 8
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 233
	DROP
	PUSH2 S0, S3
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	INDEX2 1, 2
	LESS
	PUSHCONT {
		.loc Elector.Update.tsol, 235
		ROLL 7
		PUSHINT 5
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 237
	PUSHINT 17
	CONFIGPARAM
	PUSHCONT {
		CTOS
		LDGRAMS
		LDGRAMS
		LDGRAMS
		LDU 32
		ENDS
		TRUE
	}
	PUSHCONT {
		PUSHINT 0
		BLKPUSH 4, 0
	}
	IFELSE
	BLKDROP 3
	NIP
	.loc Elector.Update.tsol, 238
	PUXC S1, S-1
	GREATER
	PUSHCONT {
		.loc Elector.Update.tsol, 240
		ROLL 7
		PUSHINT 7
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 242
	DUP
	THROWIFNOT 44
	.loc Elector.Update.tsol, 243
	ACCEPT
	.loc Elector.Update.tsol, 245
	UFITS 120
	NOW
	ROLL 6
	ROLL 4
	ROLL 6
	TUPLE 5
	PUSH S2
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	DUP
	SECOND
	DUP
	INDEX 4
	ROLL 8
	SWAP
	ROLL 6
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		SWAP
		STVARUINT16
		STU 32
		STU 32
		STU 256
		STU 256
	}
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETINDEX 4
	SETINDEX 1
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		STDICT
		SWAP
		UNTUPLE 8
		REVERSE 9, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 32
		STU 256
		STU 64
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	DUP
	SETGLOB 10
	.loc Elector.Update.tsol, 247
	PUXC S2, S-1
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	DUP
	SECOND
	FALSE
	SETINDEX 5
	SETINDEX 1
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		STDICT
		SWAP
		UNTUPLE 8
		REVERSE 9, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 32
		STU 256
		STU 64
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	DUP
	SETGLOB 10
	.loc Elector.Update.tsol, 248
	PUXC S2, S-1
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	DUP
	SECOND
	FALSE
	SETINDEX 6
	SETINDEX 1
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		STDICT
		SWAP
		UNTUPLE 8
		REVERSE 9, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 32
		STU 256
		STU 64
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	SETGLOB 10
	.loc Elector.Update.tsol, 249
	UFITS 120
	SWAP
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	DUP
	SECOND
	ROLL 4
	SETINDEX 3
	SETINDEX 1
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		STDICT
		SWAP
		UNTUPLE 8
		REVERSE 9, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 32
		STU 256
		STU 64
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	SETGLOB 10
	.loc Elector.Update.tsol, 251
	DUP
	PUSHCONT {
		.loc Elector.Update.tsol, 252
		PUSHINT 0
		CALLREF {
			CALL $send_confirmation_1aa717cd_internal_macro$
		}
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 0
	DROP
	.loc Elector.Update.tsol, 178
}
CALLX
.loc Elector.Update.tsol, 0

.globl	unfreeze_without_bonuses_a32f4563_internal
.type	unfreeze_without_bonuses_a32f4563_internal, @function
CALL $unfreeze_without_bonuses_a32f4563_internal_macro$

.macro unfreeze_without_bonuses_a32f4563_internal_macro
.loc Elector.Update.tsol, 259
PUSHINT 0
PUSH2 S0, S2
.loc Elector.Update.tsol, 261
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 256
	LDU 64
	LDVARUINT16
	LDI 1
	ENDS
	TUPLE 4
	PAIR
}
.loc Elector.Update.tsol, 262
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 263
	DUP
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 264
	DUP
	INDEX 3
	PUSHCONT {
		.loc Elector.Update.tsol, 265
		DUP
		THIRD
		PUSH S3
		ADD
		POP S3
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 267
		DUP
		FIRST
		OVER
		THIRD
		.loc Elector.Update.tsol, 174
		UFITS 120
		SWAP
		GETGLOB 11
		DUP2
		PUSHPOW2 8
		DICTUGET
		ZEROSWAPIFNOT
		PUSHCONT {
			LDVARUINT16
			DROP
		}
		IF
		ROLL 3
		ADD
		NEWC
		SWAP
		STVARUINT16
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 11
		.loc Elector.Update.tsol, 268
		DUP
		THIRD
		PUSH S4
		ADD
		POP S4
	}
	IFELSE
	.loc Elector.Update.tsol, 270
	DROP
	PUSH S4
	PUSHPOW2 8
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
		PAIR
	}
	.loc Elector.Update.tsol, 0
}
WHILE
.loc Elector.Update.tsol, 272
DROP
XCHG S2
EQUAL
THROWIFNOT 59
.loc Elector.Update.tsol, 273
NIP
.loc Elector.Update.tsol, 0

.globl	unfreeze_with_bonuses_a6255a42_internal
.type	unfreeze_with_bonuses_a6255a42_internal, @function
CALL $unfreeze_with_bonuses_a6255a42_internal_macro$

.macro unfreeze_with_bonuses_a6255a42_internal_macro
.loc Elector.Update.tsol, 281
PUSHINT 0
BLKPUSH 2, 0
.loc Elector.Update.tsol, 285
PUSH S5
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 256
	LDU 64
	LDVARUINT16
	LDI 1
	ENDS
	TUPLE 4
	PAIR
}
.loc Elector.Update.tsol, 286
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 289
	DUP
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 291
	DUP
	INDEX 3
	PUSHCONT {
		.loc Elector.Update.tsol, 292
		DUP
		THIRD
		PUSH S4
		ADD
		POP S4
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 294
		PUSH2 S5, S0
		THIRD
		PUSH S8
		MULDIVMOD
		DROP
		.loc Elector.Update.tsol, 295
		PUSH2 S3, S0
		ADD
		POP S4
		.loc Elector.Update.tsol, 296
		OVER
		FIRST
		PUSH S2
		THIRD
		ROT
		ADD
		.loc Elector.Update.tsol, 174
		UFITS 120
		SWAP
		GETGLOB 11
		DUP2
		PUSHPOW2 8
		DICTUGET
		ZEROSWAPIFNOT
		PUSHCONT {
			LDVARUINT16
			DROP
		}
		IF
		ROLL 3
		ADD
		NEWC
		SWAP
		STVARUINT16
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 11
		.loc Elector.Update.tsol, 297
		DUP
		THIRD
		PUSH S5
		ADD
		POP S5
	}
	IFELSE
	.loc Elector.Update.tsol, 299
	DROP
	PUSH S6
	PUSHPOW2 8
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
		PAIR
	}
	.loc Elector.Update.tsol, 0
}
WHILE
.loc Elector.Update.tsol, 301
DROP
ROT
ROLL 4
EQUAL
PUSH2 S1, S3
LEQ
AND
THROWIFNOT 59
.loc Elector.Update.tsol, 302
XCHG S2
ADD
SUBR
NIP
.loc Elector.Update.tsol, 0

.globl	stakes_sum_8b3419f4_internal
.type	stakes_sum_8b3419f4_internal, @function
CALL $stakes_sum_8b3419f4_internal_macro$

.macro stakes_sum_8b3419f4_internal_macro
.loc Elector.Update.tsol, 306
PUSHINT 0
.loc Elector.Update.tsol, 307
OVER
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 256
	LDU 64
	LDVARUINT16
	LDI 1
	ENDS
	TUPLE 4
	PAIR
}
.loc Elector.Update.tsol, 308
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 309
	DUP
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 310
	THIRD
	PUSH S2
	ADD
	POP S2
	.loc Elector.Update.tsol, 311
	PUSH S2
	PUSHPOW2 8
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
		PAIR
	}
	.loc Elector.Update.tsol, 0
}
WHILE
.loc Elector.Update.tsol, 313
DROP
NIP
.loc Elector.Update.tsol, 0

.globl	unfreeze_all_4c140ed0_internal
.type	unfreeze_all_4c140ed0_internal, @function
CALL $unfreeze_all_4c140ed0_internal_macro$

.macro unfreeze_all_4c140ed0_internal_macro
.loc Elector.Update.tsol, 318
DUP2
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
FIRST
PUSHINT 32
DICTUGET
NULLSWAPIFNOT
IFREF {
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
}
.loc Elector.Update.tsol, 319
DUP
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 320
	BLKDROP 3
	PUSHINT 0
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 322
SWAP
GETGLOB 10
DUP2
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
DUP
FIRST
ROLL 5
SWAP
PUSHINT 32
DICTUDEL
DROP
SETINDEX 0
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STDICT
	SWAP
	UNTUPLE 8
	REVERSE 9, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 32
	STU 256
	STU 64
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.Update.tsol, 323
DUP
ISNULL
THROWIF 63
.loc Elector.Update.tsol, 324
DUP
INDEX 4
.loc Elector.Update.tsol, 326
OVER
INDEX 5
GTINT 0
PUSHCONT {
	.loc Elector.Update.tsol, 327
	OVER
	INDEX 3
	XCHG S2
	INDEX 5
	CALLREF {
		CALL $unfreeze_with_bonuses_a6255a42_internal_macro$
	}
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 329
SWAP
INDEX 3
SWAP
CALLREF {
	CALL $unfreeze_without_bonuses_a32f4563_internal_macro$
}
.loc Elector.Update.tsol, 0

.globl	config_set_confirmed_724b1541_internal
.type	config_set_confirmed_724b1541_internal, @function
CALL $config_set_confirmed_724b1541_internal_macro$

.macro config_set_confirmed_724b1541_internal_macro
.loc Elector.Update.tsol, 333
GETGLOB 9
REWRITESTDADDR
.loc Elector.Update.tsol, 334
PUSHINT 0
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.Update.tsol, 335
CTOS
PLDU 256
.loc Elector.Update.tsol, 337
PUSH S3
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
SECOND
.loc Elector.Update.tsol, 339
ROLL 3
NEQINT -1
SWAP2
NEQ
PUSH S2
INDEX 7
NOT
OR
OR
PUSHCONT {
	.loc Elector.Update.tsol, 342
	BLKDROP 4
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 344
DUP
FIRST
ROLL 4
NEQ
SWAP
INDEX 6
NOT
OR
PUSHCONT {
	.loc Elector.Update.tsol, 346
	DROP2
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 348
ACCEPT
.loc Elector.Update.tsol, 349
SWAP
PUSHCONT {
	.loc Elector.Update.tsol, 351
	DUP
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	INDEX2 1, 0
	OVER
	CALLREF {
		CALL $unfreeze_all_4c140ed0_internal_macro$
	}
	UFITS 120
	GETGLOB 12
	ADD
	SETGLOB 12
	.loc Elector.Update.tsol, 352
	DUP
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	DUP
	SECOND
	FALSE
	SETINDEX 7
	SETINDEX 1
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		STDICT
		SWAP
		UNTUPLE 8
		REVERSE 9, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 32
		STU 256
		STU 64
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	SETGLOB 10
	.loc Elector.Update.tsol, 0
}
IFNOT
.loc Elector.Update.tsol, 0
DROP

.macro config_set_confirmed_ok
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 357
LDU 64
LDI 32
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $config_set_confirmed_ok_1de27b15_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_set_confirmed_ok_1de27b15_internal
.type	config_set_confirmed_ok_1de27b15_internal, @function
CALL $config_set_confirmed_ok_1de27b15_internal_macro$

.macro config_set_confirmed_ok_1de27b15_internal_macro
.loc Elector.Update.tsol, 357
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 359
TRUE
SWAP
CALLREF {
	CALL $config_set_confirmed_724b1541_internal_macro$
}
.loc Elector.Update.tsol, 0

.macro config_set_confirmed_err
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 362
LDU 64
LDI 32
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $config_set_confirmed_err_19f44931_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_set_confirmed_err_19f44931_internal
.type	config_set_confirmed_err_19f44931_internal, @function
CALL $config_set_confirmed_err_19f44931_internal_macro$

.macro config_set_confirmed_err_19f44931_internal_macro
.loc Elector.Update.tsol, 362
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 364
FALSE
SWAP
CALLREF {
	CALL $config_set_confirmed_724b1541_internal_macro$
}
.loc Elector.Update.tsol, 0

.macro config_slash_confirmed_ok
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 367
LDU 64
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $config_slash_confirmed_ok_19ef6a25_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_slash_confirmed_ok_19ef6a25_internal
.type	config_slash_confirmed_ok_19ef6a25_internal, @function
CALL $config_slash_confirmed_ok_19ef6a25_internal_macro$

.macro config_slash_confirmed_ok_19ef6a25_internal_macro
.loc Elector.Update.tsol, 367
DROP
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 0

.macro config_slash_confirmed_err
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 371
LDU 64
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $config_slash_confirmed_err_3407cd03_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_slash_confirmed_err_3407cd03_internal
.type	config_slash_confirmed_err_3407cd03_internal, @function
CALL $config_slash_confirmed_err_3407cd03_internal_macro$

.macro config_slash_confirmed_err_3407cd03_internal_macro
.loc Elector.Update.tsol, 371
DROP
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 0

.macro grant
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 375
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $grant_30c3eaa8_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	grant_30c3eaa8_internal
.type	grant_30c3eaa8_internal, @function
CALL $grant_30c3eaa8_internal_macro$

.macro grant_30c3eaa8_internal_macro
.loc Elector.Update.tsol, 375
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 376
DEPTH
ADDCONST -2
PICK
UFITS 120
GETGLOB 12
ADD
SETGLOB 12
.loc Elector.Update.tsol, 0

.macro take_change
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 379
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $take_change_670f0dd2_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	take_change_670f0dd2_internal
.type	take_change_670f0dd2_internal, @function
CALL $take_change_670f0dd2_internal_macro$

.macro take_change_670f0dd2_internal_macro
.loc Elector.Update.tsol, 379
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 0

.macro receiveBonuses
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 383
LDI 32
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $receiveBonuses_f12d5bc9_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro receiveBonuses_f12d5bc9_internal_macro
.loc Elector.Update.tsol, 383
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 384
DUP
GETGLOB 10
PUSHINT 32
DICTIGET
NULLSWAPIFNOT
NIP
PUSHCONT {
	.loc Elector.Update.tsol, 385
	DUP
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	UNTUPLE 5
	DROP2
	NIP
	.loc Elector.Update.tsol, 387
	DUP
	ROT
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	NIP
	PUSHCONT {
		.loc Elector.Update.tsol, 388
		DEPTH
		ADDCONST -2
		PICK
		UFITS 120
		PUSH S2
		GETGLOB 10
		DUP2
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			ROLLREV 8
			TUPLE 8
			SWAP
			LDU 32
			LDU 256
			LDU 64
			ENDS
			TUPLE 5
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 8
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 5
}
		DUP
		FIRST
		PUXC S5, S-1
		DUP2
		PUSHINT 32
		DICTUGET
IFREFELSEREF
{
			LDU 32
			LDU 32
			LDU 256
			LDDICT
			LDVARUINT16
			LDVARUINT16
			LDDICT
			ENDS
			TUPLE 7
}
{
			PUSHINT 0
			BLKPUSH 2, 0
			NEWDICT
			PUSHINT 0
			DUP
			NEWDICT
			TUPLE 7
}
		DUP
		INDEX 5
		ROLL 7
		ADD
		SETINDEX 5
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETINDEX 0
		CALLREF {
			UNTUPLE 5
			REVERSE 5, 0
			NEWC
			STDICT
			SWAP
			UNTUPLE 8
			REVERSE 9, 0
			STU 32
			STU 32
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
			STI 1
			STI 1
			STI 1
			STU 32
			STU 256
			STU 64
		}
		ROTREV
		PUSHINT 32
		DICTISETB
		SETGLOB 10
		.loc Elector.Update.tsol, 0
	}
	IF
	.loc Elector.Update.tsol, 0
	DROP
}
IF
.loc Elector.Update.tsol, 0
DROP

.globl	process_simple_transfer_c2745595_internal
.type	process_simple_transfer_c2745595_internal, @function
CALL $process_simple_transfer_c2745595_internal_macro$

.macro process_simple_transfer_c2745595_internal_macro
.loc Elector.Update.tsol, 394
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHINT 64
SENDRAWMSG
.loc Elector.Update.tsol, 0

.macro recover_stake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 418
LDU 64
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $recover_stake_c7b13017_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	recover_stake_c7b13017_internal
.type	recover_stake_c7b13017_internal, @function
CALL $recover_stake_c7b13017_internal_macro$

.macro recover_stake_c7b13017_internal_macro
.loc Elector.Update.tsol, 418
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.Update.tsol, 424
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.Update.tsol, 425
	SWAP
	NEQINT -1
	PUSHCONT {
		.loc Elector.Update.tsol, 427
		GETGLOB 9
		PUSHINT 4294967294
		ROLL 3
		PUSHINT 1197831204
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.Update.tsol, 428
		DROP
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 431
	DUP
	GETGLOB 11
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		LDVARUINT16
		DROP
	}
	IF
	.loc Elector.Update.tsol, 432
	DUP
	ISNULL
	PUSHCONT {
		.loc Elector.Update.tsol, 435
		GETGLOB 9
		PUSHINT 4294967294
		ROLL 4
		PUSHINT 1197831204
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.Update.tsol, 436
		DROP2
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 438
	SWAP
	GETGLOB 11
	PUSHPOW2 8
	DICTUDEL
	DROP
	SETGLOB 11
	.loc Elector.Update.tsol, 440
	DUP
	ISNULL
	THROWIF 63
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 4184830756
	STUR 139
	STU 64
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.Update.tsol, 418
}
CALLX
.loc Elector.Update.tsol, 0

.macro recover_stake_gracefully
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 443
LDU 64
LDU 32
LDI 32
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $recover_stake_gracefully_fa654196_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	recover_stake_gracefully_fa654196_internal
.type	recover_stake_gracefully_fa654196_internal, @function
CALL $recover_stake_gracefully_fa654196_internal_macro$

.macro recover_stake_gracefully_fa654196_internal_macro
.loc Elector.Update.tsol, 443
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.Update.tsol, 453
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.Update.tsol, 454
	SWAP
	NEQINT -1
	PUSHCONT {
		.loc Elector.Update.tsol, 456
		GETGLOB 9
		PUSHINT 4294967294
		ROLL 5
		PUSHINT 1197831205
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.Update.tsol, 457
		BLKDROP 3
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 459
	DUP
	GETGLOB 11
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		LDVARUINT16
		DROP
	}
	IF
	.loc Elector.Update.tsol, 460
	FALSE ; decl return flag
	OVER
	ISNULL
	PUSHCONT {
		.loc Elector.Update.tsol, 461
		PUSH S3
		GETGLOB 10
		PUSHINT 32
		DICTIGET
		NULLSWAPIFNOT
		IFREF {
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			ROLLREV 8
			TUPLE 8
			SWAP
			LDU 32
			LDU 256
			LDU 64
			ENDS
			TUPLE 5
		}
		.loc Elector.Update.tsol, 463
		DUP
		ISNULL
		PUSHCONT {
			.loc Elector.Update.tsol, 464
			ROLL 5
			XCPU S1, S0
			ISNULL
			THROWIF 63
			FIRST
			PUSHINT 32
			DICTUGET
			NULLSWAPIFNOT
			IFREF {
				LDU 32
				LDU 32
				LDU 256
				LDDICT
				LDVARUINT16
				LDVARUINT16
				LDDICT
				ENDS
				TUPLE 7
			}
			.loc Elector.Update.tsol, 465
			DUP
			ISNULL
			PUSHCONT {
				.loc Elector.Update.tsol, 466
				GETGLOB 9
				PUSHINT 4294967294
				ROLL 7
				PUSHINT 1197831205
				PUSHINT 0
				PUSHINT 64
				CALLREF {
					CALL $send_message_back_30631536_internal_macro$
				}
				.loc Elector.Update.tsol, 467
				BLKDROP 5
				PUSHINT 4
				.loc Elector.Update.tsol, 0
			}
			IFJMP
			.loc Elector.Update.tsol, 469
			DUP
			ISNULL
			THROWIF 63
			.loc Elector.Update.tsol, 470
			GETGLOB 9
			PUSHINT 4294967293
			ROLL 7
			ROLL 3
			FIRST
			PUSHINT 0
			PUSHINT 64
			CALLREF {
				CALL $send_message_back_30631536_internal_macro$
			}
			.loc Elector.Update.tsol, 471
			BLKDROP 4
			PUSHINT 4
			.loc Elector.Update.tsol, 0
		}
		IFNOTJMP
		.loc Elector.Update.tsol, 0
		DROP
	}
	IF
	.loc Elector.Update.tsol, 0
	IFRET
	.loc Elector.Update.tsol, 475
	SWAP
	GETGLOB 11
	PUSHPOW2 8
	DICTUDEL
	DROP
	SETGLOB 11
	.loc Elector.Update.tsol, 477
	ROLL 3
	XCPU S1, S0
	ISNULL
	THROWIF 63
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 4184830756
	STUR 139
	STU 64
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.Update.tsol, 0
	DROP2
	.loc Elector.Update.tsol, 443
}
CALLX
.loc Elector.Update.tsol, 0

.macro get_elect_at
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 480
LDU 64
LDI 32
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $get_elect_at_dece8bab_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	get_elect_at_dece8bab_internal
.type	get_elect_at_dece8bab_internal, @function
CALL $get_elect_at_dece8bab_internal_macro$

.macro get_elect_at_dece8bab_internal_macro
.loc Elector.Update.tsol, 480
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.Update.tsol, 482
	GETGLOB 9
	REWRITESTDADDR
	DROP
	.loc Elector.Update.tsol, 483
	NEQINT -1
	PUSHCONT {
		.loc Elector.Update.tsol, 485
		GETGLOB 9
		PUSHINT 4294967292
		ROLL 3
		PUSHINT 1197831206
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.Update.tsol, 486
		DROP
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 488
	DUP
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	INDEX2 1, 0
	SWAP
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	SECOND
	INDEX 7
	ROT
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 4163016210
	STUR 143
	STU 64
	STI 1
	STU 32
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.Update.tsol, 480
}
CALLX
.loc Elector.Update.tsol, 0

.globl	conduct_elections_ec3c98f3_internal
.type	conduct_elections_ec3c98f3_internal, @function
CALL $conduct_elections_ec3c98f3_internal_macro$

.macro conduct_elections_ec3c98f3_internal_macro
.loc Elector.Update.tsol, 685
PUSHINT 0
.loc Elector.Update.tsol, 686
OVER
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
SECOND
.loc Elector.Update.tsol, 687
NOW
OVER
SECOND
LESS
PUSHCONT {
	.loc Elector.Update.tsol, 689
	BLKDROP 3
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 691
PUSHINT 0
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
NIP
.loc Elector.Update.tsol, 692
DUP
PUSHCONT {
	.loc Elector.Update.tsol, 694
	PUSHINT 1
	.loc Elector.Update.tsol, 495
	HEXDUMP
	BLKDROP 5
	.loc Elector.Update.tsol, 496
	FALSE
	.loc Elector.Update.tsol, 0
}
IFNOTJMP
.loc Elector.Update.tsol, 696
PUSHINT 17
CONFIGPARAM
PUSHCONT {
	CTOS
	LDGRAMS
	LDGRAMS
	LDGRAMS
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
DROP
.loc Elector.Update.tsol, 698
PUSH S5
INDEX 3
PUSH S2
LESS
PUSHCONT {
	.loc Elector.Update.tsol, 700
	PUSHINT 2
	.loc Elector.Update.tsol, 495
	HEXDUMP
	BLKDROP 9
	.loc Elector.Update.tsol, 496
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 702
PUSH S5
INDEX 5
PUSHCONT {
	.loc Elector.Update.tsol, 704
	PUSHINT 3
	.loc Elector.Update.tsol, 495
	HEXDUMP
	BLKDROP 9
	.loc Elector.Update.tsol, 496
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 706
PUSH S5
INDEX 6
PUSHCONT {
	.loc Elector.Update.tsol, 708
	BLKDROP 8
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 710
BLKPUSH 4, 3
PUSH S11
PUSHCONT {
	NEWDICT
	PUSHINT 0
	NEWDICT
	PUSHINT 0
	DUP
	.loc Elector.Update.tsol, 550
	PUSHINT 16
	CONFIGPARAM
	DUP
	PUSHCONT {
		PUSHREF {
		}
		SWAP
	}
	IFNOT
	DROP
	.loc Elector.Update.tsol, 551
	DUP
	CTOS
	LDU 16
	LDU 16
	PLDU 16
	NIP
	.loc Elector.Update.tsol, 552
	PUSHINT 1
	MAX
	.loc Elector.Update.tsol, 553
	PUSHINT 0
	.loc Elector.Update.tsol, 554
	NEWDICT
	.loc Elector.Update.tsol, 555
	PUSH S10
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	SECOND
	INDEX 4
	.loc Elector.Update.tsol, 556
	BLKPUSH 2, 0
	PUSHPOW2 8
	DICTUMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		ROT
		LDVARUINT16
		LDU 32
		LDU 32
		LDU 256
		LDU 256
		ENDS
		TUPLE 5
}
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 557
		UNTUPLE 5
		.loc Elector.Update.tsol, 558
		ROT
		PUSH S20
		MIN
		ROTREV
		TRIPLE
		PUSH S7
		SWAP2
		FITS 32
		NEGATE
		ROLL 4
		TRIPLE
		CALLREF {
			UNTRIPLE
			XCHG S2
			NEWC
			STU 128
			STI 32
			STU 256
		}
		ENDC
		CTOS
		XCHG S2
		CALLREF {
			UNTRIPLE
			XCHG S2
			NEWC
			STU 32
			STU 256
			STU 256
		}
		ROTREV
		PUSHINT 416
		DICTSETB
		POP S4
		.loc Elector.Update.tsol, 560
		PUSH S4
		INC
		POP S5
		.loc Elector.Update.tsol, 0
		PUSH2 S0, S1
		PUSHPOW2 8
		DICTUGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			ROT
			LDVARUINT16
			LDU 32
			LDU 32
			LDU 256
			LDU 256
			ENDS
			TUPLE 5
}
		BLKDROP2 1, 3
	}
	WHILE
	BLKDROP 4
	.loc Elector.Update.tsol, 562
	PUSH2 S2, S4
	MIN
	POP S3
	.loc Elector.Update.tsol, 563
	PUSH2 S2, S3
	LESS
	PUSHCONT {
		.loc Elector.Update.tsol, 566
		NEWDICT
		PUSHINT 0
		NEWDICT
		PUSHINT 0
		DUP
		PUSHINT 16
		PUSHINT 5
		BLKSWX
		PUSHINT 16
		DROPX
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 568
	NULL
	.loc Elector.Update.tsol, 569
	PUSH2 S2, S2
	PUSHINT 416
	DICTMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		LDU 128
		LDI 32
		LDU 256
		ENDS
		TRIPLE
		ROT
		LDU 32
		LDU 256
		LDU 256
		ENDS
		TRIPLE
}
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 570
		OVER
		FIRST
		PUSH S20
		MIN
		.loc Elector.Update.tsol, 571
		OVER
		FIRST
		ROLL 3
		THIRD
		ROLL 3
		THIRD
		PUSH S6
		TUPLE 5
		POP S3
		.loc Elector.Update.tsol, 0
		PUSH2 S0, S1
		PUSHINT 416
		DICTGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			LDU 128
			LDI 32
			LDU 256
			ENDS
			TRIPLE
			ROT
			LDU 32
			LDU 256
			LDU 256
			ENDS
			TRIPLE
}
		BLKDROP2 1, 3
	}
	WHILE
	BLKDROP 4
	.loc Elector.Update.tsol, 581
	PUSHINT 0
	BLKPUSH 2, 0
	.loc Elector.Update.tsol, 584
	PUSH S3
	.loc Elector.Update.tsol, 586
	PUSHINT 0
	.loc Elector.Update.tsol, 587
	NEWDICT
	.loc Elector.Update.tsol, 588
	PUSHINT 0
	.loc Elector.Update.tsol, 590
	PUSHINT 1
	PUSHCONT {
		PUSH2 S0, S11
		LEQ
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 591
		PUSH2 S4, S4
		ISNULL
		THROWIF 63
		.loc Elector.Update.tsol, 592
		DUP
		FIRST
		.loc Elector.Update.tsol, 593
		DUP
		PUSH S27
		LESS
		PUSHCONT {
			.loc Elector.Update.tsol, 594
			DROP2
			RETALT
			.loc Elector.Update.tsol, 0
		}
		IFJMP
		.loc Elector.Update.tsol, 596
		OVER
		SECOND
		.loc Elector.Update.tsol, 597
		PUSH S2
		INDEX 4
		POP S8
		.loc Elector.Update.tsol, 599
		PUSH2 S6, S1
		ADD
		POP S7
		.loc Elector.Update.tsol, 600
		OVER
		PUSHPOW2 16
		MUL
		PUSHINT 1000000000000000000
		MUL
		OVER
		DIV
		.loc Elector.Update.tsol, 601
		BLKPUSH 2, 2
		PAIR
		PUSH3 S7, S1, S5
		PAIR
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STU 256
			STU 16
		}
		ENDC
		CTOS
		XCHG S2
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STU 128
			STU 32
		}
		ROTREV
		PUSHINT 272
		DICTSETB
		POP S7
		.loc Elector.Update.tsol, 603
		PUSHCONT {
			PUSH S6
			DICTEMPTY
			NOT
		}
		PUSHCONT {
			.loc Elector.Update.tsol, 604
			PUSH S6
			PUSHINT 272
			DICTMAX
			NULLSWAPIFNOT
			IFREF {
				LDU 256
				LDU 16
				ENDS
				PAIR
				SWAP
				LDU 128
				LDU 32
				ENDS
				PAIR
				PAIR
			}
			DUP
			ISNULL
			THROWIF 63
			UNPAIR
			.loc Elector.Update.tsol, 605
			SWAP
			FIRST
			PUSH S4
			PUSHINT 1000000000000000000
			MUL
			LESS
			PUSHCONT {
				.loc Elector.Update.tsol, 606
				DROP
				RETALT
				.loc Elector.Update.tsol, 0
			}
			IFJMP
			.loc Elector.Update.tsol, 608
			DUP
			FIRST
			PUSH S9
			SUBR
			POP S9
			.loc Elector.Update.tsol, 609
			PUSH S7
			PUSHINT 272
			DICTREMMAX
			NULLSWAPIFNOT
			IFREF {
				LDU 256
				LDU 16
				ENDS
				PAIR
				SWAP
				LDU 128
				LDU 32
				ENDS
				PAIR
				PAIR
			}
			DROP
			POP S8
			.loc Elector.Update.tsol, 610
			SECOND
			PUSH S6
			ADD
			POP S6
			.loc Elector.Update.tsol, 0
		}
		WHILEBRK
		.loc Elector.Update.tsol, 613
		DROP2
		PUSH3 S5, S0, S3
		MUL
		RSHIFT 16
		UFITS 128
		ADD
		.loc Elector.Update.tsol, 614
		PUSH2 S3, S15
		EQUAL
		PUSH2 S1, S10
		GREATER
		OR
		PUSHCONT {
			.loc Elector.Update.tsol, 615
			DUP
			POP S10
			.loc Elector.Update.tsol, 616
			PUSH S3
			POP S9
			.loc Elector.Update.tsol, 617
			OVER
			POP S11
			.loc Elector.Update.tsol, 0
		}
		IF
		.loc Elector.Update.tsol, 0
		BLKDROP 3
		.loc Elector.Update.tsol, 590
		INC
		.loc Elector.Update.tsol, 0
	}
	WHILEBRK
	BLKDROP 4
	.loc Elector.Update.tsol, 621
	OVER
	EQINT 0
	PUSH S3
	PUSHINT 20
	ROLLX
	LESS
	OR
	PUSHCONT {
		.loc Elector.Update.tsol, 624
		NEWDICT
		PUSHINT 0
		NEWDICT
		PUSHINT 0
		DUP
		PUSHINT 20
		PUSHINT 5
		BLKSWX
		PUSHINT 20
		DROPX
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 630
	PUSH S2
	.loc Elector.Update.tsol, 631
	PUSHINT 0
	POP S4
	.loc Elector.Update.tsol, 632
	PUSH S5
	POP S2
	.loc Elector.Update.tsol, 633
	PUSH S2
	PUSHCONT {
		.loc Elector.Update.tsol, 634
		PUSH2 S1, S1
		ISNULL
		THROWIF 63
		.loc Elector.Update.tsol, 635
		DUP
		FIRST
		PUSH2 S6, S1
		SECOND
		MUL
		RSHIFT 16
		MIN
		PUSH S5
		ADD
		POP S5
		.loc Elector.Update.tsol, 636
		INDEX 4
		POP S2
		.loc Elector.Update.tsol, 0
	}
	REPEAT
	.loc Elector.Update.tsol, 638
	PUSH S3
	SUB
	ABS
	PUSHINT 1000000000
	LEQ
	THROWIFNOT 666
	.loc Elector.Update.tsol, 642
	DROP
	PUSHINT 0
	BLKPUSH 2, 0
	.loc Elector.Update.tsol, 645
	NEWDICT
	DUP
	.loc Elector.Update.tsol, 647
	GETGLOB 11
	.loc Elector.Update.tsol, 648
	PUSHCONT {
		.loc Elector.Update.tsol, 649
		PUSH2 S9, S9
		ISNULL
		THROWIF 63
		UNTUPLE 5
		.loc Elector.Update.tsol, 650
		POP S14
		.loc Elector.Update.tsol, 652
		PUSH2 S1, S14
		PUSHPOW2 8
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDVARUINT16
			LDU 32
			LDU 32
			LDU 256
			LDU 256
			ENDS
			TUPLE 5
		}
		.loc Elector.Update.tsol, 653
		DUP
		ISNULL
		THROWIF 61
		.loc Elector.Update.tsol, 654
		DUP
		ISNULL
		THROWIF 63
		INDEX 3
		.loc Elector.Update.tsol, 655
		PUSH2 S10, S11
		LESS
		PUSHCONT {
			.loc Elector.Update.tsol, 657
			BLKPUSH 2, 4
			PUSH S15
			MUL
			RSHIFT 16
			MIN
			.loc Elector.Update.tsol, 658
			PUSH2 S5, S0
			SUB
			POP S6
			.loc Elector.Update.tsol, 659
			DUP
			LSHIFT 60
			PUSH S14
			DIV
			.loc Elector.Update.tsol, 660
			PUSH2 S11, S1
			ADD
			POP S12
			.loc Elector.Update.tsol, 661
			PUSH2 S10, S0
			ADD
			POP S11
			.loc Elector.Update.tsol, 662
			NEWC
			.loc Elector.Update.tsol, 663
			PUSH S4
			GTINT 0
			PUSHCONT {
				.loc Elector.Update.tsol, 664
				PUSHINT 115
				PUSHINT 2390828938
				PUSH2 S7, S3
				UFITS 64
				PUSH S8
				REVERSE 6, 0
				STU 8
				STU 32
				STU 256
				STU 64
				STU 256
			}
			PUSHCONT {
				.loc Elector.Update.tsol, 667
				PUSHINT 83
				PUSHINT 2390828938
				PUSH2 S7, S3
				UFITS 64
				REVERSE 5, 0
				STU 8
				STU 32
				STU 256
				STU 64
			}
			IFELSE
			.loc Elector.Update.tsol, 670
			ENDC
			CTOS
			PUSH2 S13, S10
			PUSHINT 16
			DICTUSET
			POP S10
			.loc Elector.Update.tsol, 671
			PUXC S2, S-1
			UFITS 64
			ROT
			UFITS 120
			FALSE
			TUPLE 4
			PUSH2 S3, S7
			ROT
			CALLREF {
				UNTUPLE 4
				REVERSE 4, 0
				NEWC
				STU 256
				STU 64
				SWAP
				STVARUINT16
				STI 1
			}
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			POP S7
			.loc Elector.Update.tsol, 0
		}
		IF
		.loc Elector.Update.tsol, 673
		PUSH S4
		GTINT 0
		PUSHCONT {
			.loc Elector.Update.tsol, 676
			PUSH S4
			UFITS 120
			PUSH3 S1, S6, S1
			OVER
			PUSHPOW2 8
			DICTUGET
			ZEROSWAPIFNOT
			PUSHCONT {
				LDVARUINT16
				DROP
			}
			IF
			ROLL 3
			ADD
			NEWC
			SWAP
			STVARUINT16
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			POP S6
			.loc Elector.Update.tsol, 0
		}
		IF
		.loc Elector.Update.tsol, 678
		BLKDROP 5
		PUSH S5
		INC
		POP S6
		.loc Elector.Update.tsol, 0
		PUSH S9
		ISNULL
	}
	UNTIL
	.loc Elector.Update.tsol, 680
	SETGLOB 11
	.loc Elector.Update.tsol, 681
	PUSH S3
	ROLL 7
	EQUAL
	THROWIFNOT 49
	.loc Elector.Update.tsol, 682
	XCHG S2
	UFITS 64
	SWAP
	ROLL 4
	REVERSE 6, 0
	PUSHINT 18
	PUSHINT 5
	BLKSWX
	PUSHINT 18
	DROPX
	.loc Elector.Update.tsol, 542
}
CALLX
.loc Elector.Update.tsol, 720
DUP
EQINT 0
PUXC S11, S-1
SETINDEX 5
POP S11
.loc Elector.Update.tsol, 721
PUSH S10
INDEX 5
NOT
PUXC S11, S-1
SETINDEX 6
POP S11
.loc Elector.Update.tsol, 722
PUSH2 S10, S12
GETGLOB 10
DUP2
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
ROLL 3
SETINDEX 1
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STDICT
	SWAP
	UNTUPLE 8
	REVERSE 9, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 32
	STU 256
	STU 64
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.Update.tsol, 723
DUP
PUSHCONT {
	.loc Elector.Update.tsol, 725
	PUSHINT 4
	.loc Elector.Update.tsol, 495
	HEXDUMP
	BLKDROP 14
	.loc Elector.Update.tsol, 496
	FALSE
	.loc Elector.Update.tsol, 0
}
IFNOTJMP
.loc Elector.Update.tsol, 727
ROLL 10
FIRST
.loc Elector.Update.tsol, 102
PUSHINT 15
CONFIGPARAM
PUSHCONT {
	CTOS
	LDU 32
	LDU 32
	LDU 32
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
DROP
.loc Elector.Update.tsol, 0
BLKDROP2 1, 2
.loc Elector.Update.tsol, 732
NOW
ROT
ADD
ADDCONST -60
PUSH S3
MAX
.loc Elector.Update.tsol, 735
PUSHINT 18
PUSH3 S1, S1, S3
ADD
ROLL 7
ROLL 10
PUSH S11
TUPLE 6
.loc Elector.Update.tsol, 745
NEWC
SWAP
UNTUPLE 6
REVERSE 7, 0
STU 8
STU 32
STU 32
STU 16
STU 64
STDICT
.loc Elector.Update.tsol, 746
ENDC
.loc Elector.Update.tsol, 748
PUSHINT 0
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.Update.tsol, 749
CTOS
PLDU 256
.loc Elector.Update.tsol, 750
PUSH3 S1, S5, S15
.loc Elector.Update.tsol, 169
ROLL 3
PUSHINT -1
NEWC
STSLICECONST x9_
STI 8
STU 256
ENDC
CTOS
.loc Elector.Update.tsol, 170
SWAP
ROLLREV 3
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 12720910251328179000044872783962527403085238168343380
STUR 175
STU 64
STREF
STI 32
ENDC
PUSHINT 1
SENDRAWMSG
.loc Elector.Update.tsol, 753
SWAP
ROLL 3
ADD
PUSH S2
ADD
PUSHINT 0
BLKPUSH 2, 0
NEWDICT
PUSHINT 0
DUP
NEWDICT
TUPLE 7
SWAP
SETINDEX 0
.loc Elector.Update.tsol, 754
ROT
SETINDEX 1
.loc Elector.Update.tsol, 755
SWAP
HASHCU
SETINDEX 2
.loc Elector.Update.tsol, 756
ROLL 3
SETINDEX 3
.loc Elector.Update.tsol, 757
ROT
UFITS 120
SETINDEX 4
.loc Elector.Update.tsol, 758
PUSH S9
GETGLOB 10
DUP2
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
DUP
FIRST
BLKSWAP 2, 4
XCHG S1, S2
CALLREF {
	UNTUPLE 7
	REVERSE 7, 0
	NEWC
	STU 32
	STU 32
	STU 256
	STDICT
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
}
ROTREV
PUSHINT 32
DICTUSETB
SETINDEX 0
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STDICT
	SWAP
	UNTUPLE 8
	REVERSE 9, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 32
	STU 256
	STU 64
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.Update.tsol, 760
NEWDICT
.loc Elector.Update.tsol, 761
SETGLOB 13
.loc Elector.Update.tsol, 762
NEWDICT
.loc Elector.Update.tsol, 763
SETGLOB 14
.loc Elector.Update.tsol, 765
PUSHINT 0
.loc Elector.Update.tsol, 766
XCPU S1, S0
PUSHINT 16
DICTUMIN
PUSHCONT {
	DUP
	ROT
}
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 767
	BLKPUSH 2, 0
	.loc Elector.Update.tsol, 1025
	LDU 8
	POP S2
	.loc Elector.Update.tsol, 1026
	DUP
	EQINT 83
	SWAP
	EQINT 115
	OR
	THROWIFNOT 131
	.loc Elector.Update.tsol, 1027
	LDU 32
	LDU 256
	PLDU 64
	.loc Elector.Update.tsol, 1028
	ROT
	PUSHINT 2390828938
	EQUAL
	THROWIFNOT 131
	.loc Elector.Update.tsol, 1029
	NIP
	.loc Elector.Update.tsol, 768
	PUSH S5
	ADD
	POP S5
	.loc Elector.Update.tsol, 0
	PUSH2 S2, S3
	PUSHINT 16
	DICTUGETNEXT
	PUSHCONT {
		DUP
		ROT
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILE
BLKDROP 4
.loc Elector.Update.tsol, 770
GETGLOB 10
ROLL 8
TUCK
OVER
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
ROLL 3
SETINDEX 4
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STDICT
	SWAP
	UNTUPLE 8
	REVERSE 9, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 32
	STU 256
	STU 64
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.Update.tsol, 772
BLKDROP 6
TRUE
.loc Elector.Update.tsol, 0

.globl	update_active_vset_id_f30acacd_internal
.type	update_active_vset_id_f30acacd_internal, @function
CALL $update_active_vset_id_f30acacd_internal_macro$

.macro update_active_vset_id_f30acacd_internal_macro
.loc Elector.Update.tsol, 775
PUSHINT 0
.loc Elector.Update.tsol, 777
OVER
CALLREF {
	CALL $Common_no_obj_getValidatorSetsByChain_d29f0692_macro$
}
.loc Elector.Update.tsol, 779
DUP
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 781
	BLKDROP 3
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 783
BLKPUSH 2, 0
ISNULL
THROWIF 63
SECOND
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 784
	BLKDROP 3
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 787
BLKPUSH 2, 0
ISNULL
THROWIF 63
SECOND
DUP
ISNULL
THROWIF 63
.loc Elector.Update.tsol, 790
NEWC
OVER
UNTUPLE 6
REVERSE 7, 0
STU 8
STU 32
STU 32
STU 16
STU 64
STDICT
.loc Elector.Update.tsol, 791
PUSH S4
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
SECOND
.loc Elector.Update.tsol, 793
OVER
ENDC
HASHCU
.loc Elector.Update.tsol, 794
PUSH2 S0, S6
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
INDEX 3
EQUAL
PUSHCONT {
	.loc Elector.Update.tsol, 796
	BLKDROP 7
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 799
PUSH S6
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
THIRD
.loc Elector.Update.tsol, 800
DUP
PUSHCONT {
	.loc Elector.Update.tsol, 803
	PUSH2 S0, S7
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	FIRST
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
	}
	.loc Elector.Update.tsol, 804
	DUP
	ISNULL
	PUSHCONT {
		.loc Elector.Update.tsol, 805
		BLKPUSH 2, 0
		ISNULL
		THROWIF 63
		.loc Elector.Update.tsol, 807
		DUP
		THIRD
		PUSH S10
		GETGLOB 10
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			ROLLREV 8
			TUPLE 8
			SWAP
			LDU 32
			LDU 256
			LDU 64
			ENDS
			TUPLE 5
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 8
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 5
}
		INDEX 3
		EQUAL
		THROWIFNOT 57
		.loc Elector.Update.tsol, 808
		NOW
		OVER
		SECOND
		ADD
		SETINDEX 0
		.loc Elector.Update.tsol, 810
		PUSH S9
		GETGLOB 10
		DUP2
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			ROLLREV 8
			TUPLE 8
			SWAP
			LDU 32
			LDU 256
			LDU 64
			ENDS
			TUPLE 5
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 8
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 5
}
		DUP
		FIRST
		PUXC S6, S-1
		ROLL 5
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETINDEX 0
		CALLREF {
			UNTUPLE 5
			REVERSE 5, 0
			NEWC
			STDICT
			SWAP
			UNTUPLE 8
			REVERSE 9, 0
			STU 32
			STU 32
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
			STI 1
			STI 1
			STI 1
			STU 32
			STU 256
			STU 64
		}
		ROTREV
		PUSHINT 32
		DICTISETB
		SETGLOB 10
		.loc Elector.Update.tsol, 0
	}
	IFNOT
	.loc Elector.Update.tsol, 0
	DROP
}
IF
.loc Elector.Update.tsol, 815
PUSH S7
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
FIRST
PUSHINT 32
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
	PAIR
}
.loc Elector.Update.tsol, 816
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 817
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 818
	DUP
	THIRD
	PUSH S5
	EQUAL
	PUSHCONT {
		.loc Elector.Update.tsol, 820
		GETGLOB 12
		RSHIFT 3
		.loc Elector.Update.tsol, 821
		DUP
		UFITS 120
		GETGLOB 12
		SUBR
		SETGLOB 12
		.loc Elector.Update.tsol, 822
		UFITS 120
		XCPU S1, S0
		INDEX 5
		ROT
		ADD
		SETINDEX 5
		.loc Elector.Update.tsol, 824
		PUSH S10
		GETGLOB 10
		DUP2
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			ROLLREV 8
			TUPLE 8
			SWAP
			LDU 32
			LDU 256
			LDU 64
			ENDS
			TUPLE 5
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 8
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 5
}
		DUP
		FIRST
		BLKSWAP 2, 4
		XCHG S1, S2
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETINDEX 0
		CALLREF {
			UNTUPLE 5
			REVERSE 5, 0
			NEWC
			STDICT
			SWAP
			UNTUPLE 8
			REVERSE 9, 0
			STU 32
			STU 32
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
			STI 1
			STI 1
			STI 1
			STU 32
			STU 256
			STU 64
		}
		ROTREV
		PUSHINT 32
		DICTISETB
		SETGLOB 10
		.loc Elector.Update.tsol, 826
		RETALT
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 829
	DROP
	PUSH S9
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	FIRST
	PUSHINT 32
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
		PAIR
	}
	NIP
	.loc Elector.Update.tsol, 0
}
WHILEBRK
.loc Elector.Update.tsol, 832
DUP
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 836
	PUSH S8
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	PUSHINT 0
}
PUSHCONT {
	.loc Elector.Update.tsol, 833
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	UNPAIR
	DROP
	.loc Elector.Update.tsol, 834
	PUSH S9
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	ROLL 3
}
IFELSE
SETINDEX 2
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STDICT
	SWAP
	UNTUPLE 8
	REVERSE 9, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 32
	STU 256
	STU 64
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.Update.tsol, 838
DROP2
GETGLOB 10
ROLL 7
TUCK
OVER
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
ROLL 3
SETINDEX 3
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STDICT
	SWAP
	UNTUPLE 8
	REVERSE 9, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 32
	STU 256
	STU 64
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.Update.tsol, 839
BLKDROP 5
TRUE
.loc Elector.Update.tsol, 0

.globl	validator_set_installed_5127c547_internal
.type	validator_set_installed_5127c547_internal, @function
CALL $validator_set_installed_5127c547_internal_macro$

.macro validator_set_installed_5127c547_internal_macro
.loc Elector.Update.tsol, 843
DUP
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
SECOND
INDEX 6
PUSHCONT {
	.loc Elector.Update.tsol, 845
	DROP
	FALSE
	.loc Elector.Update.tsol, 0
}
IFNOTJMP
.loc Elector.Update.tsol, 848
DUP
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
INDEX2 1, 0
OVER
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
FIRST
PUSHINT 32
DICTUGET
NULLSWAPIFNOT
IFREF {
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
}
.loc Elector.Update.tsol, 849
DUP
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 851
	DROP2
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 853
DUP
ISNULL
THROWIF 63
.loc Elector.Update.tsol, 855
OVER
CALLREF {
	CALL $Common_no_obj_getValidatorSetsByChain_d29f0692_macro$
}
.loc Elector.Update.tsol, 856
DUP
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 858
	BLKDROP 3
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 860
DUP
ISNULL
THROWIF 63
.loc Elector.Update.tsol, 862
NEWC
.loc Elector.Update.tsol, 863
OVER
SECOND
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 864
	OVER
	SECOND
	DUP
	ISNULL
	THROWIF 63
	UNTUPLE 6
	REVERSE 7, 0
	STU 8
	STU 32
	STU 32
	STU 16
	STU 64
	STDICT
	.loc Elector.Update.tsol, 0
}
IFNOT
.loc Elector.Update.tsol, 867
NEWC
.loc Elector.Update.tsol, 868
PUSH S2
INDEX 3
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 869
	PUSH S2
	INDEX 3
	DUP
	ISNULL
	THROWIF 63
	UNTUPLE 6
	REVERSE 7, 0
	STU 8
	STU 32
	STU 32
	STU 16
	STU 64
	STDICT
	.loc Elector.Update.tsol, 0
}
IFNOT
.loc Elector.Update.tsol, 873
PUSH S2
SECOND
ISNULL
NOT
DUP
PUSHCONT {
	DROP
	OVER
	ENDC
	HASHCU
	PUSH S4
	THIRD
	EQUAL
}
IF
DUP
PUSHCONT {
	DROP
	PUSH S2
	INDEX 3
	ISNULL
	NOT
	DUP
	PUSHCONT {
		DROP
		DUP
		ENDC
		HASHCU
		PUSH S4
		THIRD
		EQUAL
	}
	IF
}
IFNOT
PUSHCONT {
	.loc Elector.Update.tsol, 876
	PUSH S4
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	DUP
	SECOND
	FALSE
	SETINDEX 7
	SETINDEX 1
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		STDICT
		SWAP
		UNTUPLE 8
		REVERSE 9, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 32
		STU 256
		STU 64
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	DUP
	SETGLOB 10
	.loc Elector.Update.tsol, 878
	PUXC S5, S-1
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	SETINDEX 1
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		STDICT
		SWAP
		UNTUPLE 8
		REVERSE 9, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 32
		STU 256
		STU 64
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	SETGLOB 10
	.loc Elector.Update.tsol, 879
	ROLL 4
	CALLREF {
		CALL $update_active_vset_id_f30acacd_internal_macro$
	}
	BLKDROP 5
	.loc Elector.Update.tsol, 880
	TRUE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 882
BLKDROP 5
FALSE
.loc Elector.Update.tsol, 0

.globl	check_unfreeze_f3540bfa_internal
.type	check_unfreeze_f3540bfa_internal, @function
CALL $check_unfreeze_f3540bfa_internal_macro$

.macro check_unfreeze_f3540bfa_internal_macro
.loc Elector.Update.tsol, 887
DUP
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
FIRST
PUSHINT 32
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
	PAIR
}
.loc Elector.Update.tsol, 888
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 889
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 891
	FIRST
	NOW
	LEQ
	DUP
	PUSHCONT {
		DROP
		PUSH2 S0, S2
		GETGLOB 10
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			ROLLREV 8
			TUPLE 8
			SWAP
			LDU 32
			LDU 256
			LDU 64
			ENDS
			TUPLE 5
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 8
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 5
}
		THIRD
		NEQ
	}
	IF
	PUSHCONT {
		.loc Elector.Update.tsol, 893
		PUSH S2
		CALLREF {
			CALL $unfreeze_all_4c140ed0_internal_macro$
		}
		UFITS 120
		GETGLOB 12
		ADD
		SETGLOB 12
		.loc Elector.Update.tsol, 895
		RETALT
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 897
	PUSH S2
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	FIRST
	PUSHINT 32
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
		PAIR
	}
	NIP
	.loc Elector.Update.tsol, 0
}
WHILEBRK
DROP2
.loc Elector.Update.tsol, 0

.globl	announce_new_elections_78458639_internal
.type	announce_new_elections_78458639_internal, @function
CALL $announce_new_elections_78458639_internal_macro$

.macro announce_new_elections_78458639_internal_macro
.loc Elector.Update.tsol, 903
DUP
CALLREF {
	CALL $Common_no_obj_getValidatorSetsByChain_d29f0692_macro$
}
.loc Elector.Update.tsol, 905
DUP
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 906
	DROP2
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 908
DUP
ISNULL
THROWIF 63
.loc Elector.Update.tsol, 909
DUP
INDEX 3
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 911
	DROP2
	FALSE
	.loc Elector.Update.tsol, 0
}
IFNOTJMP
.loc Elector.Update.tsol, 913
PUSHINT 1
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.Update.tsol, 914
CTOS
PLDU 256
.loc Elector.Update.tsol, 915
MYADDR
REWRITESTDADDR
.loc Elector.Update.tsol, 916
SWAP
NEQINT -1
XCHG S2
NEQ
OR
PUSHCONT {
	.loc Elector.Update.tsol, 918
	DROP2
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 920
SECOND
.loc Elector.Update.tsol, 922
DUP
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 923
	DROP2
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 102
PUSHINT 15
CONFIGPARAM
PUSHCONT {
	CTOS
	LDU 32
	LDU 32
	LDU 32
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
DROP2
.loc Elector.Update.tsol, 104
BLKDROP2 1, 2
.loc Elector.Update.tsol, 927
ROT
DUP
ISNULL
THROWIF 63
THIRD
.loc Elector.Update.tsol, 929
NOW
.loc Elector.Update.tsol, 930
XCPU S1, S3
SUB
.loc Elector.Update.tsol, 931
DUP2
LESS
PUSHCONT {
	.loc Elector.Update.tsol, 933
	BLKDROP 5
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 936
DUP2
SUB
LESSINT 60
PUSHCONT {
	.loc Elector.Update.tsol, 938
	DUP
	POP S2
	.loc Elector.Update.tsol, 0
}
IF
.loc Elector.Update.tsol, 941
DROP
PUSHINT 17
CONFIGPARAM
PUSHCONT {
	CTOS
	LDGRAMS
	LDGRAMS
	LDGRAMS
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
BLKDROP 4
.loc Elector.Update.tsol, 943
SWAP
ROLL 3
ADD
.loc Elector.Update.tsol, 945
DUP
ROLL 3
SUB
.loc Elector.Update.tsol, 948
ROT
UFITS 120
PUSHINT 0
NEWDICT
FALSE
DUP
TRUE
TUPLE 8
.loc Elector.Update.tsol, 958
SWAP
GETGLOB 10
DUP2
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
ROLL 3
SETINDEX 1
CALLREF {
	UNTUPLE 5
	REVERSE 5, 0
	NEWC
	STDICT
	SWAP
	UNTUPLE 8
	REVERSE 9, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 32
	STU 256
	STU 64
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.Update.tsol, 959
TRUE
.loc Elector.Update.tsol, 0

.internal-alias :onTickTock, -2
.internal :onTickTock
PUSHINT -2
PUSH S2
CALLREF {
	CALL $c4_to_c7$
}
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
PUSHCONT {
	.loc Elector.Update.tsol, 963
	DROP
	GETGLOB 10
	DUP
	PUSHINT 32
	DICTIMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		ROT
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
	FALSE ; decl return flag
	PUSHCONT {
		PUSH S3
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 965
		OVER
		SECOND
		INDEX 7
		PUSHCONT {
			.loc Elector.Update.tsol, 967
			PUSH S2
			CALLREF {
				CALL $conduct_elections_ec3c98f3_internal_macro$
			}
			PUSHCONT {
				.loc Elector.Update.tsol, 970
				BLKDROP 5
				PUSHINT 4
				RETALT
				.loc Elector.Update.tsol, 0
			}
			IFJMP
			.loc Elector.Update.tsol, 972
			PUSH S2
			CALLREF {
				CALL $validator_set_installed_5127c547_internal_macro$
			}
			PUSHCONT {
				.loc Elector.Update.tsol, 974
				BLKDROP 5
				PUSHINT 4
				RETALT
				.loc Elector.Update.tsol, 0
			}
			IFJMP
			.loc Elector.Update.tsol, 0
		}
		PUSHCONT {
			.loc Elector.Update.tsol, 977
			PUSH S2
			CALLREF {
				CALL $announce_new_elections_78458639_internal_macro$
			}
			PUSHCONT {
				.loc Elector.Update.tsol, 979
				BLKDROP 5
				PUSHINT 4
				RETALT
				.loc Elector.Update.tsol, 0
			}
			IFJMP
			.loc Elector.Update.tsol, 0
		}
		IFELSE
		.loc Elector.Update.tsol, 982
		PUSH S2
		CALLREF {
			CALL $update_active_vset_id_f30acacd_internal_macro$
		}
		PUSHCONT {
			.loc Elector.Update.tsol, 984
			BLKDROP 5
			PUSHINT 4
			RETALT
			.loc Elector.Update.tsol, 0
		}
		IFJMP
		.loc Elector.Update.tsol, 986
		PUSH S2
		CALLREF {
			CALL $check_unfreeze_f3540bfa_internal_macro$
		}
		.loc Elector.Update.tsol, 0
		PUSH2 S3, S4
		PUSHINT 32
		DICTIGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			ROT
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			ROLLREV 8
			TUPLE 8
			SWAP
			LDU 32
			LDU 256
			LDU 64
			ENDS
			TUPLE 5
}
		POP S4
		POP S4
		POP S4
	}
	WHILEBRK
	IFRET
	BLKDROP 4
	.loc Elector.Update.tsol, 962
}
CALLX
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro report
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1032
OVER
PUSHCONT {
	LDU 256
	LDREF
	ENDS
	CTOS
	LDU 256
	LDU 256
}
PUSHCONT {
	LDU 256
	LDU 256
	LDU 256
	LDREF
	ENDS
	CTOS
}
IFELSE
LDU 256
LDU 8
LDI 32
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $report_fdf16703_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	report_fdf16703_internal
.type	report_fdf16703_internal, @function
CALL $report_fdf16703_internal_macro$

.macro report_fdf16703_internal_macro
.loc Elector.Update.tsol, 1032
DEPTH
ADDCONST -5
PICK
EQINT -1
THROWIFNOT 71
.loc Elector.Update.tsol, 1040
DUP
CALLREF {
	CALL $get_current_vset_f0cade92_internal_macro$
}
.loc Elector.Update.tsol, 1041
DUP
FIRST
EQINT 18
THROWIFNOT 131
.loc Elector.Update.tsol, 1044
DUP
SECOND
NOW
LESS
NOW
PUSH S2
THIRD
LESS
AND
THROWIFNOT 139
.loc Elector.Update.tsol, 1047
PUSH2 S5, S6
NEWC
STU 256
STU 256
.loc Elector.Update.tsol, 1049
PUSH3 S3, S4, S5
NEWC
STU 256
STU 256
STU 8
.loc Elector.Update.tsol, 1052
ACCEPT
.loc Elector.Update.tsol, 1053
DUP
ENDC
CTOS
PUSH S2
ENDC
CTOS
PUSH S8
CHKSIGNS
THROWIFNOT 34
.loc Elector.Update.tsol, 1056
PUSH S6
GETGLOB 13
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
NIP
NOT
PUSHINT 137
.loc Elector.Update.tsol, 1018
SWAP
PUSHCONT {
	.loc Elector.Update.tsol, 1019
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.Update.tsol, 1020
	DUP
	PUSHINT 2
	MAX
	THROWANY
	.loc Elector.Update.tsol, 0
}
IFNOT
.loc Elector.Update.tsol, 0
DROP
.loc Elector.Update.tsol, 1059
PUSH S5
GETGLOB 13
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
NIP
NOT
PUSHINT 138
.loc Elector.Update.tsol, 1018
SWAP
PUSHCONT {
	.loc Elector.Update.tsol, 1019
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.Update.tsol, 1020
	DUP
	PUSHINT 2
	MAX
	THROWANY
	.loc Elector.Update.tsol, 0
}
IFNOT
.loc Elector.Update.tsol, 0
DROP
.loc Elector.Update.tsol, 1062
PUSHINT 0
PUSH2 S0, S3
.loc Elector.Update.tsol, 1064
INDEX 5
DUP
PUSHINT 16
DICTUMIN
PUSHCONT {
	DUP
	ROT
}
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 1065
	BLKPUSH 2, 0
	.loc Elector.Update.tsol, 1025
	LDU 8
	POP S2
	.loc Elector.Update.tsol, 1026
	DUP
	EQINT 83
	SWAP
	EQINT 115
	OR
	THROWIFNOT 131
	.loc Elector.Update.tsol, 1027
	LDU 32
	LDU 256
	PLDU 64
	.loc Elector.Update.tsol, 1028
	ROT
	PUSHINT 2390828938
	EQUAL
	THROWIFNOT 131
	.loc Elector.Update.tsol, 1066
	XCPU S1, S14
	EQUAL
	PUSHCONT {
		.loc Elector.Update.tsol, 1067
		POP S6
		.loc Elector.Update.tsol, 1068
		RETALT
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 1070
	DROP
	PUSH S4
	INC
	POP S5
	.loc Elector.Update.tsol, 0
	PUSH2 S2, S3
	PUSHINT 16
	DICTUGETNEXT
	PUSHCONT {
		DUP
		ROT
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILEBRK
BLKDROP 4
.loc Elector.Update.tsol, 1072
OVER
GTINT 0
THROWIFNOT 135
.loc Elector.Update.tsol, 1075
PUSHINT 0
PUSH2 S0, S5
.loc Elector.Update.tsol, 1077
INDEX 5
DUP
PUSHINT 16
DICTUMIN
PUSHCONT {
	DUP
	ROT
}
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 1078
	BLKPUSH 2, 0
	.loc Elector.Update.tsol, 1025
	LDU 8
	POP S2
	.loc Elector.Update.tsol, 1026
	DUP
	EQINT 83
	OVER
	EQINT 115
	OR
	THROWIFNOT 131
	.loc Elector.Update.tsol, 1027
	SWAP
	LDU 32
	LDU 256
	PLDU 64
	.loc Elector.Update.tsol, 1028
	DROP
	SWAP
	PUSHINT 2390828938
	EQUAL
	THROWIFNOT 131
	.loc Elector.Update.tsol, 1029
	NIP
	.loc Elector.Update.tsol, 1079
	PUSH S14
	EQUAL
	PUSHCONT {
		.loc Elector.Update.tsol, 1080
		TRUE
		POP S5
		.loc Elector.Update.tsol, 1081
		RETALT
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 1083
	PUSH S5
	INC
	POP S6
	.loc Elector.Update.tsol, 0
	PUSH2 S2, S3
	PUSHINT 16
	DICTUGETNEXT
	PUSHCONT {
		DUP
		ROT
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILEBRK
BLKDROP 4
.loc Elector.Update.tsol, 1085
DUP
THROWIFNOT 133
.loc Elector.Update.tsol, 1087
PUSHINT 16
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.Update.tsol, 1088
DUP
CTOS
LDU 16
LDU 16
PLDU 16
BLKDROP2 2, 1
.loc Elector.Update.tsol, 1091
PUSH2 S10, S11
GETGLOB 14
PUSHPOW2 8
DICTUGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
PUSHINT 8
DICTUGET
IFREFELSEREF
{
	LDU 64
	LDDICT
	ENDS
	PAIR
}
{
	PUSHINT 0
	NEWDICT
	PAIR
}
.loc Elector.Update.tsol, 1092
PUSH2 S13, S0
SECOND
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
PUSHCONT {
	PLDU 64
}
IF
.loc Elector.Update.tsol, 1094
DUP
ISNULL
PUSHINT 140
.loc Elector.Update.tsol, 1018
SWAP
PUSHCONT {
	.loc Elector.Update.tsol, 1019
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.Update.tsol, 1020
	DUP
	PUSHINT 2
	MAX
	THROWANY
	.loc Elector.Update.tsol, 0
}
IFNOT
.loc Elector.Update.tsol, 0
DROP
.loc Elector.Update.tsol, 1096
PUSH3 S7, S1, S1
FIRST
ROT
ADD
SETINDEX 0
POP S2
.loc Elector.Update.tsol, 1097
PUSH3 S7, S1, S1
SECOND
PUSH S17
SWAP
ROLL 3
NEWC
STU 64
ROTREV
PUSHPOW2 8
DICTUSETB
SETINDEX 1
POP S2
.loc Elector.Update.tsol, 1098
PUSH2 S1, S13
GETGLOB 14
DUP2
PUSHPOW2 8
DICTUGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
PUSH S16
SWAP
ROLL 4
CALLREF {
	UNPAIR
	SWAP
	NEWC
	STU 64
	STDICT
}
ROTREV
PUSHINT 8
DICTUSETB
NEWC
STDICT
ROTREV
PUSHPOW2 8
DICTUSETB
SETGLOB 14
.loc Elector.Update.tsol, 1099
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
.loc Elector.Update.tsol, 1103
OVER
FIRST
PUSH S12
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
INDEX 4
PUSHINT 2
PUSHINT 3
MULDIV
GEQ
PUSHCONT {
	.loc Elector.Update.tsol, 1107
	PUSH S13
	GETGLOB 13
	NEWC
	STONE
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETGLOB 13
	.loc Elector.Update.tsol, 1108
	PUSH3 S13, S5, S11
	.loc Elector.Update.tsol, 1137
	DUP
	CALLREF {
		CALL $get_current_vset_f0cade92_internal_macro$
	}
	.loc Elector.Update.tsol, 1138
	DUP
	INDEX 5
	.loc Elector.Update.tsol, 1139
	PUSHINT 0
	.loc Elector.Update.tsol, 1141
	PUSHINT 16
	CONFIGPARAM
	DUP
	PUSHCONT {
		PUSHREF {
		}
		SWAP
	}
	IFNOT
	DROP
	.loc Elector.Update.tsol, 1142
	DUP
	CTOS
	LDU 16
	LDU 16
	PLDU 16
	BLKDROP2 2, 1
	.loc Elector.Update.tsol, 1143
	PUSH S4
	INDEX 3
	OVER
	GREATER
	THROWIFNOT 141
	.loc Elector.Update.tsol, 1145
	FALSE
	DUP
	.loc Elector.Update.tsol, 1147
	PUSHCONT {
		.loc Elector.Update.tsol, 1149
		PUSH2 S8, S2
		LESS
		PUSHCONT {
			.loc Elector.Update.tsol, 1150
			PUSH S2
			DEC
			POP S3
			.loc Elector.Update.tsol, 1151
		}
		IF
		PUSH S9
		GETGLOB 14
		CALLREF {
			CALL $update_reports_014af5da_internal_macro$
		}
		SETGLOB 14
		.loc Elector.Update.tsol, 1156
		NEWDICT
		.loc Elector.Update.tsol, 1158
		PUSHINT 0
		POP S6
		.loc Elector.Update.tsol, 1160
		PUSH2 S6, S6
		PUSHINT 16
		DICTUMIN
		PUSHCONT {
			DUP
			ROT
		}
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
		IFELSE
		PUSHCONT {
			PUSH S2
			ISNULL
			NOT
		}
		PUSHCONT {
			.loc Elector.Update.tsol, 1161
			BLKPUSH 2, 0
			.loc Elector.Update.tsol, 1025
			LDU 8
			POP S2
			.loc Elector.Update.tsol, 1026
			DUP
			EQINT 83
			SWAP
			EQINT 115
			OR
			THROWIFNOT 131
			.loc Elector.Update.tsol, 1027
			LDU 32
			LDU 256
			PLDU 64
			.loc Elector.Update.tsol, 1028
			ROT
			PUSHINT 2390828938
			EQUAL
			THROWIFNOT 131
			.loc Elector.Update.tsol, 1163
			SWAP
			GETGLOB 13
			PUSHPOW2 8
			DICTUGET
			NULLSWAPIFNOT
			NIP
			PUSHCONT {
				.loc Elector.Update.tsol, 1164
				PUSH3 S1, S6, S5
				PUSHINT 16
				DICTUSET
				POP S6
				.loc Elector.Update.tsol, 1165
				PUSH2 S10, S0
				ADD
				POP S11
				.loc Elector.Update.tsol, 1166
				PUSH S6
				INC
				POP S7
				.loc Elector.Update.tsol, 0
			}
			IFNOT
			.loc Elector.Update.tsol, 0
			DROP
			PUSH2 S2, S3
			PUSHINT 16
			DICTUGETNEXT
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			BLKDROP2 3, 3
		}
		WHILE
		BLKDROP 4
		.loc Elector.Update.tsol, 1169
		PUSH2 S1, S3
		GEQ
		THROWIFNOT 141
		.loc Elector.Update.tsol, 1172
		PUSH2 S5, S8
		GETGLOB 10
		DUP2
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			ROLLREV 8
			TUPLE 8
			SWAP
			LDU 32
			LDU 256
			LDU 64
			ENDS
			TUPLE 5
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 8
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 5
}
		ROLL 3
		SETINDEX 4
		CALLREF {
			UNTUPLE 5
			REVERSE 5, 0
			NEWC
			STDICT
			SWAP
			UNTUPLE 8
			REVERSE 9, 0
			STU 32
			STU 32
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
			STI 1
			STI 1
			STI 1
			STU 32
			STU 256
			STU 64
		}
		ROTREV
		PUSHINT 32
		DICTISETB
		SETGLOB 10
		.loc Elector.Update.tsol, 1173
		PUSHINT 0
		POP S2
		.loc Elector.Update.tsol, 1176
		GETGLOB 14
		.loc Elector.Update.tsol, 1177
		PUSH S9
		GETGLOB 10
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			ROLLREV 8
			TUPLE 8
			SWAP
			LDU 32
			LDU 256
			LDU 64
			ENDS
			TUPLE 5
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 8
			PUSHINT 0
			BLKPUSH 2, 0
			TUPLE 5
}
		INDEX 4
		PUSHINT 2
		PUSHINT 3
		MULDIV
		.loc Elector.Update.tsol, 1178
		PUSH2 S2, S2
		PUSHINT 16
		DICTUMIN
		PUSHCONT {
			DUP
			ROT
		}
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
		IFELSE
		PUSHCONT {
			PUSH S2
			ISNULL
			NOT
		}
		PUSHCONT {
			PUSHCONT {
				.loc Elector.Update.tsol, 1179
				LDU 8
				LDU 32
				LDU 256
				LDU 64
				LDU 256
				ROLLREV 5
				TUPLE 5
				.loc Elector.Update.tsol, 1180
				DUP
				FIRST
				NEQINT 83
				THROWIFNOT 131
				.loc Elector.Update.tsol, 1181
				DUP
				THIRD
				PUSH S7
				PUSHPOW2 8
				DICTUGET
				PUSHCONT {
					PLDDICT
				}
				PUSHCONT {
					NEWDICT
				}
				IFELSE
				SINGLE
				.loc Elector.Update.tsol, 1182
				DUP
				ISNULL
				PUSHCONT {
					.loc Elector.Update.tsol, 1183
					BLKPUSH 2, 0
					ISNULL
					THROWIF 63
					UNSINGLE
					DUP
					PUSHINT 8
					DICTUMIN
					PUSHCONT {
						NULL
						BLKPUSH 2, 0
					}
IFREFELSE {
						DUP
						ROT
						LDU 64
						LDDICT
						ENDS
						PAIR
}
					PUSHCONT {
						PUSH S2
						ISNULL
						NOT
					}
					PUSHCONT {
						.loc Elector.Update.tsol, 1185
						DUP
						FIRST
						PUSH S11
						GEQ
						PUSHCONT {
							.loc Elector.Update.tsol, 1186
							GETGLOB 13
							PUSH S6
							THIRD
							SWAP
							NEWC
							STONE
							ROTREV
							PUSHPOW2 8
							DICTUSETB
							SETGLOB 13
							.loc Elector.Update.tsol, 1187
							TRUE
							POP S15
							.loc Elector.Update.tsol, 1188
							PUSH S5
							THIRD
							POP S23
							.loc Elector.Update.tsol, 1189
							PUSH S13
							POP S22
							.loc Elector.Update.tsol, 1190
							PUSH S12
							POP S19
							.loc Elector.Update.tsol, 1191
							RETALT
							.loc Elector.Update.tsol, 0
						}
						IFJMP
						.loc Elector.Update.tsol, 0
						PUSH2 S2, S3
						PUSHINT 8
						DICTUGETNEXT
						PUSHCONT {
							NULL
							BLKPUSH 2, 0
						}
IFREFELSE {
							DUP
							ROT
							LDU 64
							LDDICT
							ENDS
							PAIR
}
						BLKDROP2 3, 3
					}
					WHILEBRK
					BLKDROP 4
					.loc Elector.Update.tsol, 0
				}
				IFNOT
				.loc Elector.Update.tsol, 1195
				DROP2
				PUSH S8
				IFRET
				.loc Elector.Update.tsol, 1198
				PUSH S7
				INC
				POP S8
				.loc Elector.Update.tsol, 0
			}
			CALLX
			PUSH2 S2, S3
			PUSHINT 16
			DICTUGETNEXT
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			BLKDROP2 3, 3
		}
		WHILE
		BLKDROP 6
		.loc Elector.Update.tsol, 1200
		POP S6
		.loc Elector.Update.tsol, 0
		OVER
		NOT
	}
	UNTIL
	.loc Elector.Update.tsol, 1203
	PUSHINT 0
	BLKPUSH 4, 0
	NEWDICT
	TUPLE 6
	.loc Elector.Update.tsol, 1204
	PUSHINT 18
	SETINDEX 0
	.loc Elector.Update.tsol, 1205
	NOW
	ADDCONST 60
	SETINDEX 1
	.loc Elector.Update.tsol, 1206
	ROLL 7
	THIRD
	SETINDEX 2
	.loc Elector.Update.tsol, 1207
	ROLL 5
	SETINDEX 4
	.loc Elector.Update.tsol, 1208
	SWAP
	SETINDEX 3
	.loc Elector.Update.tsol, 1209
	ROLL 4
	SETINDEX 5
	.loc Elector.Update.tsol, 1212
	NEWC
	SWAP
	UNTUPLE 6
	REVERSE 7, 0
	STU 8
	STU 32
	STU 32
	STU 16
	STU 64
	STDICT
	.loc Elector.Update.tsol, 1213
	ENDC
	.loc Elector.Update.tsol, 1215
	PUSH S4
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	THIRD
	.loc Elector.Update.tsol, 1216
	PUSH2 S0, S5
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	FIRST
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
	}
	.loc Elector.Update.tsol, 1217
	DUP
	ISNULL
	THROWIF 136
	.loc Elector.Update.tsol, 1218
	DUP
	ISNULL
	THROWIF 63
	.loc Elector.Update.tsol, 1220
	PUSH S2
	HASHCU
	.loc Elector.Update.tsol, 1221
	PUSH2 S0, S7
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	ROLL 3
	SETINDEX 3
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		STDICT
		SWAP
		UNTUPLE 8
		REVERSE 9, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 32
		STU 256
		STU 64
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	SETGLOB 10
	.loc Elector.Update.tsol, 1222
	SETINDEX 2
	.loc Elector.Update.tsol, 1223
	PUSH2 S8, S0
	INDEX 3
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
	}
	.loc Elector.Update.tsol, 1224
	DUP
	ISNULL
	PUSHCONT {
		.loc Elector.Update.tsol, 1225
		BLKPUSH 2, 0
		ISNULL
		THROWIF 63
		.loc Elector.Update.tsol, 1226
		TRUE
		SETINDEX 3
		.loc Elector.Update.tsol, 1227
		PUSH3 S0, S2, S2
		INDEX 3
		PUXC S13, S-1
		ROLL 3
		CALLREF {
			UNTUPLE 4
			REVERSE 4, 0
			NEWC
			STU 256
			STU 64
			SWAP
			STVARUINT16
			STI 1
		}
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETINDEX 3
		POP S3
		.loc Elector.Update.tsol, 1228
		DUP
		THIRD
		PUSH2 S3, S3
		INDEX 5
		ROT
		ADD
		SETINDEX 5
		POP S3
		.loc Elector.Update.tsol, 1229
		THIRD
		PUSH2 S2, S2
		INDEX 4
		ROT
		SUB
		SETINDEX 4
		POP S2
		.loc Elector.Update.tsol, 0
	}
	IFNOT
	.loc Elector.Update.tsol, 1233
	DROP
	PUSH S6
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	DUP
	FIRST
	PUXC S5, S-1
	ROLL 5
	CALLREF {
		UNTUPLE 7
		REVERSE 7, 0
		NEWC
		STU 32
		STU 32
		STU 256
		STDICT
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
	}
	ROTREV
	PUSHINT 32
	DICTUSETB
	SETINDEX 0
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		STDICT
		SWAP
		UNTUPLE 8
		REVERSE 9, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 32
		STU 256
		STU 64
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	SETGLOB 10
	.loc Elector.Update.tsol, 1234
	PUSHINT 0
	CONFIGPARAM
	DUP
	PUSHCONT {
		PUSHREF {
		}
		SWAP
	}
	IFNOT
	DROP
	.loc Elector.Update.tsol, 1235
	CTOS
	PLDU 256
	PUSHINT -1
	NEWC
	STSLICECONST x9_
	STI 8
	STU 256
	ENDC
	CTOS
	.loc Elector.Update.tsol, 1236
	ROLL 6
	ROLLREV 3
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 12720910251328179000044872783962527403085238168343381
	STUR 175
	STU 64
	STREF
	STI 32
	ENDC
	PUSHINT 1
	SENDRAWMSG
	.loc Elector.Update.tsol, 0
	BLKDROP 5
}
IF
.loc Elector.Update.tsol, 0
PUSHINT 17
DROPX

.globl	update_reports_014af5da_internal
.type	update_reports_014af5da_internal, @function
CALL $update_reports_014af5da_internal_macro$

.macro update_reports_014af5da_internal_macro
.loc Elector.Update.tsol, 1114
PUSH3 S0, S0, S0
.loc Elector.Update.tsol, 1115
PUSHPOW2 8
DICTUMIN
PUSHCONT {
	DUP
	ROT
	PLDDICT
}
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 1116
	BLKPUSH 2, 0
	PUSHINT 8
	DICTUMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		ROT
		LDU 64
		LDDICT
		ENDS
		PAIR
}
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 1117
		DUP
		SECOND
		DUP
		PUSHPOW2 8
		DICTUMIN
		PUSHCONT {
			DUP
			ROT
			PLDU 64
		}
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
		IFELSE
		PUSHCONT {
			PUSH S2
			ISNULL
			NOT
		}
		PUSHCONT {
			.loc Elector.Update.tsol, 1118
			PUSH2 S14, S1
			EQUAL
			PUSHCONT {
				.loc Elector.Update.tsol, 1119
				PUSH3 S0, S4, S4
				FIRST
				ROT
				SUB
				SETINDEX 0
				POP S5
				.loc Elector.Update.tsol, 1120
				PUSH2 S4, S4
				SECOND
				PUSH S16
				SWAP
				PUSHPOW2 8
				DICTUDEL
				DROP
				SETINDEX 1
				POP S5
				.loc Elector.Update.tsol, 1121
				PUSH3 S5, S8, S4
				.loc Elector.Update.tsol, 1122
				CALLREF {
					UNPAIR
					SWAP
					NEWC
					STU 64
					STDICT
				}
				ROTREV
				PUSHINT 8
				DICTUSETB
				.loc Elector.Update.tsol, 1123
				PUSH2 S10, S13
				ROT
				NEWC
				STDICT
				ROTREV
				PUSHPOW2 8
				DICTUSETB
				POP S13
				.loc Elector.Update.tsol, 1124
				RETALT
				.loc Elector.Update.tsol, 0
			}
			IFJMP
			.loc Elector.Update.tsol, 0
			PUSH2 S2, S3
			PUSHPOW2 8
			DICTUGETNEXT
			PUSHCONT {
				DUP
				ROT
				PLDU 64
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			BLKDROP2 3, 3
		}
		WHILEBRK
		BLKDROP 4
		.loc Elector.Update.tsol, 0
		PUSH2 S2, S3
		PUSHINT 8
		DICTUGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			ROT
			LDU 64
			LDDICT
			ENDS
			PAIR
}
		BLKDROP2 3, 3
	}
	WHILE
	BLKDROP 4
	.loc Elector.Update.tsol, 0
	PUSH2 S2, S3
	PUSHPOW2 8
	DICTUGETNEXT
	PUSHCONT {
		DUP
		ROT
		PLDDICT
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILE
BLKDROP 4
.loc Elector.Update.tsol, 1129
BLKDROP2 2, 1
.loc Elector.Update.tsol, 0

.macro get
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1243
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $get_6d4ce63c_internal_macro$
}
PUSH S2
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 98
	STZEROES
	REVERSE 2, 1
	STSLICECONST xe143f180
	STDICT
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP2
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_6d4ce63c_internal
.type	get_6d4ce63c_internal, @function
CALL $get_6d4ce63c_internal_macro$

.macro get_6d4ce63c_internal_macro
.loc Elector.Update.tsol, 1249
GETGLOB 10
.loc Elector.Update.tsol, 1250
GETGLOB 12
.loc Elector.Update.tsol, 0

.macro get_banned
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1253
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $get_banned_46830d60_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2209532425
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_banned_46830d60_internal
.type	get_banned_46830d60_internal, @function
CALL $get_banned_46830d60_internal_macro$

.macro get_banned_46830d60_internal_macro
.loc Elector.Update.tsol, 1254
GETGLOB 13
.loc Elector.Update.tsol, 0

.macro get_buckets
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1257
LDU 256
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $get_buckets_2f917ad4_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3222122547
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_buckets_2f917ad4_internal
.type	get_buckets_2f917ad4_internal, @function
CALL $get_buckets_2f917ad4_internal_macro$

.macro get_buckets_2f917ad4_internal_macro
.loc Elector.Update.tsol, 1258
GETGLOB 14
PUSHPOW2 8
DICTUGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
.loc Elector.Update.tsol, 0

.macro active_election_id
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1266
LDI 32
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $active_election_id_d1003ae7_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2444844155
	STUR 130
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	active_election_id_d1003ae7_internal
.type	active_election_id_d1003ae7_internal, @function
CALL $active_election_id_d1003ae7_internal_macro$

.macro active_election_id_d1003ae7_internal_macro
.loc Elector.Update.tsol, 1267
DUP
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	ROLLREV 8
	TUPLE 8
	SWAP
	LDU 32
	LDU 256
	LDU 64
	ENDS
	TUPLE 5
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 8
	PUSHINT 0
	BLKPUSH 2, 0
	TUPLE 5
}
SECOND
INDEX 7
ZEROSWAPIFNOT
PUSHCONT {
	DUP
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		ROLLREV 8
		TUPLE 8
		SWAP
		LDU 32
		LDU 256
		LDU 64
		ENDS
		TUPLE 5
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 8
		PUSHINT 0
		BLKPUSH 2, 0
		TUPLE 5
}
	INDEX2 1, 0
}
IF
NIP
.loc Elector.Update.tsol, 0

.macro get_version
DROP
GETGLOB 6
THROWIFNOT 76
.loc Elector.Update.tsol, 1271
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $get_version_90179465_internal_macro$
}
PUSH S2
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 98
	STZEROES
	REVERSE 2, 1
	STSLICECONST xabc534f5
	STU 32
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP2
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_version_90179465_internal
.type	get_version_90179465_internal, @function
CALL $get_version_90179465_internal_macro$

.macro get_version_90179465_internal_macro
.loc Elector.Update.tsol, 1272
PUSHINT 0
PUSHINT 1
.loc Elector.Update.tsol, 0

.macro compute_returned_stake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1276
LDU 256
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $compute_returned_stake_a73d54da_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3757192781
	STUR 130
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	compute_returned_stake_a73d54da_internal
.type	compute_returned_stake_a73d54da_internal, @function
CALL $compute_returned_stake_a73d54da_internal_macro$

.macro compute_returned_stake_a73d54da_internal_macro
.loc Elector.Update.tsol, 1277
GETGLOB 11
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
PUSHCONT {
	LDVARUINT16
	DROP
}
IF
.loc Elector.Update.tsol, 1278
DUP
ISNULL
ZEROSWAPIF
PUSHCONT {
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
}
IFNOT
NIP
.loc Elector.Update.tsol, 0

.macro on_bounce_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1282
PLDU 32
.loc Elector.Update.tsol, 1283
PUSHINT 4184830756
EQUAL
PUSHCONT {
	.loc Elector.Update.tsol, 1284
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.Update.tsol, 1285
	SWAP
	EQINT -1
	THROWIFNOT 223
	.loc Elector.Update.tsol, 1286
	DEPTH
	ADDCONST -2
	PICK
	UFITS 120
	GETGLOB 11
	NEWC
	ROT
	STVARUINT16
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETGLOB 11
	.loc Elector.Update.tsol, 0
}
IF
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro receive_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1293
CALLREF {
	CALL $process_simple_transfer_c2745595_internal_macro$
}
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro fallback_macro
GETGLOB 6
THROWIFNOT 76
.loc Elector.Update.tsol, 1297
DEPTH
ADDCONST -4
PICK
.loc Elector.Update.tsol, 1298
DUP
LDU 32
POP S2
.loc Elector.Update.tsol, 1299
SWAP
PLDU 64
.loc Elector.Update.tsol, 1300
GETGLOB 9
PUSHPOW2DEC 32
SWAP2
SWAP
PUSHINT 0
PUSHINT 64
CALLREF {
	CALL $send_message_back_30631536_internal_macro$
}
.loc Elector.Update.tsol, 0
DUP
IFREF {
	CALL $upd_only_time_in_c4$
}

.internal-alias onCodeUpgrade_e5436b53_internal, 2
.internal onCodeUpgrade_e5436b53_internal
.loc Elector.Update.tsol, 1304
PUSH S2
PUSHINT 3460525924
PUSH S2
PUSHINT 1313042276
PUSHINT 0
PUSHINT 64
CALLREF {
	CALL $send_message_back_30631536_internal_macro$
}
.loc Elector.Update.tsol, 1305
GETGLOB 2
ISNULL
IFNOTREF {
	CALL $c7_to_c4$
}
THROW 0
.loc Elector.Update.tsol, 0

.globl	_upgrade_code_5dac022d_internal
.type	_upgrade_code_5dac022d_internal, @function
CALL $_upgrade_code_5dac022d_internal_macro$

.macro _upgrade_code_5dac022d_internal_macro
.loc Elector.Update.tsol, 1308
PUSHINT 0
DUP
.loc Elector.Update.tsol, 1309
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.Update.tsol, 1310
PUSHCONT {
	.loc Elector.Update.tsol, 1312
	BLKDROP 5
	FALSE
	.loc Elector.Update.tsol, 0
}
IFNOTJMP
.loc Elector.Update.tsol, 1314
GETGLOB 9
.loc Elector.Update.tsol, 1315
SWAP
CTOS
PLDU 256
.loc Elector.Update.tsol, 1316
GETGLOB 9
REWRITESTDADDR
.loc Elector.Update.tsol, 1317
SWAP
NEQINT -1
XCHG S2
NEQ
OR
PUSHCONT {
	.loc Elector.Update.tsol, 1319
	BLKDROP 5
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 1321
ACCEPT
.loc Elector.Update.tsol, 1322
PUSH S3
SETCODE
.loc Elector.Update.tsol, 1323
ROLL 3
CTOS
DUP
PUSHSLICE x8adb35
SDEQ
PUSHCONT {
	PLDREFIDX 1
	CTOS
}
IF
PLDREF
CTOS
BLESS
POP C3
.loc Elector.Update.tsol, 1324
ROT
CTOS
ROLL 3
PUSHINT $onCodeUpgrade_e5436b53_internal$
PUSH C3
EXECUTE
.loc Elector.Update.tsol, 0

.macro upgrade_code
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1327
LDU 64
LDREF
LDREF
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $upgrade_code_c518c75b_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	upgrade_code_c518c75b_internal
.type	upgrade_code_c518c75b_internal, @function
CALL $upgrade_code_c518c75b_internal_macro$

.macro upgrade_code_c518c75b_internal_macro
.loc Elector.Update.tsol, 1327
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 1329
PUSH S2
ROTREV
CALLREF {
	CALL $_upgrade_code_5dac022d_internal_macro$
}
.loc Elector.Update.tsol, 1330
GETGLOB 9
SWAP
PUSHINT 3460525924
PUSHPOW2DEC 32
CONDSEL
ROT
PUSHINT 1313042276
PUSHINT 0
PUSHINT 64
CALLREF {
	CALL $send_message_back_30631536_internal_macro$
}
.loc Elector.Update.tsol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDDICT
LDDICT
LDVARUINT16
LDDICT
LDDICT
ENDS
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	NEWDICT
	DUP
	PUSHINT 0
	NEWDICT
	DUP
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STDICT
STDICT
SWAP
STVARUINT16
STDICT
STDICT
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFJMPREF {
	OVER
	LDSLICE 32
	NIP
	CALL $on_bounce_macro$
}
OVER
SEMPTY ; isEmpty
DUP
PUSHCONT {
	DROP
	OVER
	LDUQ 32  ; [funcId] body' ok
	PUSHCONT {
		DROP
		CALLREF {
			CALL $fallback_macro$
		}
		THROW 0
	}
	IFNOT
	OVER
	EQINT 0 ; funcId body' isZero
	DUP
	PUSHCONT {
		BLKDROP2 2, 1
	}
	IF
}
IFNOT
IFJMPREF {
	CALL $receive_macro$
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
DROP2
CALLREF {
	CALL $fallback_macro$
}

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX
	DUP
	MYADDR
	NEWC
	STSLICE
	STSLICE
	ENDC
	HASHCU
	ROT
	GETGLOB 2
	CHKSIGNU
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
DROP2
CALLREF {
	CALL $fallback_macro$
}

.globl	Common_no_obj_getValidatorSets_5e5a3cb6
.type	Common_no_obj_getValidatorSets_5e5a3cb6, @function
CALL $Common_no_obj_getValidatorSets_5e5a3cb6_macro$

.macro Common_no_obj_getValidatorSets_5e5a3cb6_macro
.loc Common.tsol, 51
PUSHINT 100
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Common.tsol, 52
DROP
CTOS
PUSHCONT {
	LDDICTQ
	PUSHCONT {
		NULL
		SWAP
	}
	IFNOTJMP
	SWAP
	SINGLE
	SWAP
}
CALLX
DROP
.loc Common.tsol, 0

.globl	Common_with_obj_validatorSetsToCell_693c71e3
.type	Common_with_obj_validatorSetsToCell_693c71e3, @function
CALL $Common_with_obj_validatorSetsToCell_693c71e3_macro$

.macro Common_with_obj_validatorSetsToCell_693c71e3_macro
.loc Common.tsol, 58
DUP
NEWC
STDICT
.loc Common.tsol, 59
ENDC
.loc Common.tsol, 0

.globl	Common_no_obj_validatorSetsToCell_693c71e3
.type	Common_no_obj_validatorSetsToCell_693c71e3, @function
CALL $Common_no_obj_validatorSetsToCell_693c71e3_macro$

.macro Common_no_obj_validatorSetsToCell_693c71e3_macro
.loc Common.tsol, 58
NEWC
STDICT
.loc Common.tsol, 59
ENDC
.loc Common.tsol, 0

.globl	Common_with_obj_validatorSetFromCell_c8aed10a
.type	Common_with_obj_validatorSetFromCell_c8aed10a, @function
CALL $Common_with_obj_validatorSetFromCell_c8aed10a_macro$

.macro Common_with_obj_validatorSetFromCell_c8aed10a_macro
.loc Common.tsol, 63
DUP
CTOS
LDU 8
LDU 32
LDU 32
LDU 16
LDU 64
PLDDICT
TUPLE 6
.loc Common.tsol, 0

.globl	Common_no_obj_validatorSetFromCell_c8aed10a
.type	Common_no_obj_validatorSetFromCell_c8aed10a, @function
CALL $Common_no_obj_validatorSetFromCell_c8aed10a_macro$

.macro Common_no_obj_validatorSetFromCell_c8aed10a_macro
.loc Common.tsol, 63
CTOS
LDU 8
LDU 32
LDU 32
LDU 16
LDU 64
PLDDICT
TUPLE 6
.loc Common.tsol, 0

.globl	Common_with_obj_validatorSetToCell_51ab8d5a
.type	Common_with_obj_validatorSetToCell_51ab8d5a, @function
CALL $Common_with_obj_validatorSetToCell_51ab8d5a_macro$

.macro Common_with_obj_validatorSetToCell_51ab8d5a_macro
.loc Common.tsol, 68
NEWC
OVER
UNTUPLE 6
REVERSE 7, 0
STU 8
STU 32
STU 32
STU 16
STU 64
STDICT
.loc Common.tsol, 69
ENDC
.loc Common.tsol, 0

.globl	Common_no_obj_validatorSetToCell_51ab8d5a
.type	Common_no_obj_validatorSetToCell_51ab8d5a, @function
CALL $Common_no_obj_validatorSetToCell_51ab8d5a_macro$

.macro Common_no_obj_validatorSetToCell_51ab8d5a_macro
.loc Common.tsol, 68
NEWC
SWAP
UNTUPLE 6
REVERSE 7, 0
STU 8
STU 32
STU 32
STU 16
STU 64
STDICT
.loc Common.tsol, 69
ENDC
.loc Common.tsol, 0

.globl	Common_with_obj_getValidatorSetsByChain_d29f0692
.type	Common_with_obj_getValidatorSetsByChain_d29f0692, @function
CALL $Common_with_obj_getValidatorSetsByChain_d29f0692_macro$

.macro Common_with_obj_getValidatorSetsByChain_d29f0692_macro
.loc Common.tsol, 73
CALLREF {
	CALL $Common_no_obj_getValidatorSets_5e5a3cb6_macro$
}
.loc Common.tsol, 74
DUP
ISNULL
NOT
DUP
PUSHCONT {
	DROP
	DUP2
	UNSINGLE
	PUSHINT 32
	DICTIGET
	NULLSWAPIFNOT
	NIP
}
IF
PUSHCONT {
	.loc Common.tsol, 75
	PUXC S1, S-1
	UNSINGLE
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDI 1
		SWAP
		NULLSWAPIFNOT
		PUSHCONT {
			LDU 8
			LDU 32
			LDU 32
			LDU 16
			LDU 64
			LDDICT
			ROLLREV 6
			TUPLE 6
		}
		IF
		SWAP
		LDI 1
		SWAP
		NULLSWAPIFNOT
		PUSHCONT {
			LDU 8
			LDU 32
			LDU 32
			LDU 16
			LDU 64
			LDDICT
			ROLLREV 6
			TUPLE 6
		}
		IF
		SWAP
		LDI 1
		SWAP
		NULLSWAPIFNOT
		PUSHCONT {
			LDU 8
			LDU 32
			LDU 32
			LDU 16
			LDU 64
			LDDICT
			ROLLREV 6
			TUPLE 6
		}
		IF
		SWAP
		LDI 1
		SWAP
		NULLSWAPIFNOT
		PUSHCONT {
			LDU 8
			LDU 32
			LDU 32
			LDU 16
			LDU 64
			LDDICT
			ROLLREV 6
			TUPLE 6
		}
		IF
		SWAP
		ENDS
		TUPLE 4
}
{
		NULL
		BLKPUSH 3, 0
		TUPLE 4
}
	.loc Common.tsol, 0
}
IFJMP
.loc Common.tsol, 77
DROP
NULL
.loc Common.tsol, 0

.globl	Common_no_obj_getValidatorSetsByChain_d29f0692
.type	Common_no_obj_getValidatorSetsByChain_d29f0692, @function
CALL $Common_no_obj_getValidatorSetsByChain_d29f0692_macro$

.macro Common_no_obj_getValidatorSetsByChain_d29f0692_macro
.loc Common.tsol, 73
CALLREF {
	CALL $Common_no_obj_getValidatorSets_5e5a3cb6_macro$
}
.loc Common.tsol, 74
DUP
ISNULL
NOT
DUP
PUSHCONT {
	DROP
	DUP2
	UNSINGLE
	PUSHINT 32
	DICTIGET
	NULLSWAPIFNOT
	NIP
}
IF
PUSHCONT {
	.loc Common.tsol, 75
	UNSINGLE
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDI 1
		SWAP
		NULLSWAPIFNOT
		PUSHCONT {
			LDU 8
			LDU 32
			LDU 32
			LDU 16
			LDU 64
			LDDICT
			ROLLREV 6
			TUPLE 6
		}
		IF
		SWAP
		LDI 1
		SWAP
		NULLSWAPIFNOT
		PUSHCONT {
			LDU 8
			LDU 32
			LDU 32
			LDU 16
			LDU 64
			LDDICT
			ROLLREV 6
			TUPLE 6
		}
		IF
		SWAP
		LDI 1
		SWAP
		NULLSWAPIFNOT
		PUSHCONT {
			LDU 8
			LDU 32
			LDU 32
			LDU 16
			LDU 64
			LDDICT
			ROLLREV 6
			TUPLE 6
		}
		IF
		SWAP
		LDI 1
		SWAP
		NULLSWAPIFNOT
		PUSHCONT {
			LDU 8
			LDU 32
			LDU 32
			LDU 16
			LDU 64
			LDDICT
			ROLLREV 6
			TUPLE 6
		}
		IF
		SWAP
		ENDS
		TUPLE 4
}
{
		NULL
		BLKPUSH 3, 0
		TUPLE 4
}
	.loc Common.tsol, 0
}
IFJMP
.loc Common.tsol, 77
DROP2
NULL
.loc Common.tsol, 0

.macro public_function_selector
DUP
PUSHINT 2046001087
LEQ
IFJMPREF {
	DUP
	PUSHINT 369714999
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 62048777
		EQUAL
		IFJMPREF {
			CALL $get_banned$
		}
		DUP
		PUSHINT 295954618
		EQUAL
		IFJMPREF {
			CALL $receiveBonuses$
		}
		DUP
		PUSHINT 297360507
		EQUAL
		IFJMPREF {
			CALL $active_election_id$
		}
		DUP
		PUSHINT 369714999
		EQUAL
		IFJMPREF {
			CALL $take_change$
		}
	}
	DUP
	PUSHINT 1197831205
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 734344437
		EQUAL
		IFJMPREF {
			CALL $get_version$
		}
		DUP
		PUSHINT 1074638899
		EQUAL
		IFJMPREF {
			CALL $get_buckets$
		}
		DUP
		PUSHINT 1197831204
		EQUAL
		IFJMPREF {
			CALL $recover_stake$
		}
		DUP
		PUSHINT 1197831205
		EQUAL
		IFJMPREF {
			CALL $recover_stake_gracefully$
		}
	}
	DUP
	PUSHINT 1316189259
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1197831206
		EQUAL
		IFJMPREF {
			CALL $get_elect_at$
		}
		DUP
		PUSHINT 1198678382
		EQUAL
		IFJMPREF {
			CALL $grant$
		}
		DUP
		PUSHINT 1313042276
		EQUAL
		IFJMPREF {
			CALL $upgrade_code$
		}
		DUP
		PUSHINT 1316189259
		EQUAL
		IFJMPREF {
			CALL $process_new_stake$
		}
	}
	DUP
	PUSHINT 2046001087
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1609709133
		EQUAL
		IFJMPREF {
			CALL $compute_returned_stake$
		}
		DUP
		PUSHINT 1631842688
		EQUAL
		IFJMPREF {
			CALL $get$
		}
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
		DUP
		PUSHINT 2046001087
		EQUAL
		IFJMPREF {
			CALL $report$
		}
	}
}
DUP
PUSHINT 4000730992
LEQ
IFJMPREF {
	DUP
	PUSHINT 4000730955
	EQUAL
	IFJMPREF {
		CALL $config_set_confirmed_ok$
	}
	DUP
	PUSHINT 4000730956
	EQUAL
	IFJMPREF {
		CALL $config_slash_confirmed_ok$
	}
	DUP
	PUSHINT 4000730991
	EQUAL
	IFJMPREF {
		CALL $config_set_confirmed_err$
	}
	DUP
	PUSHINT 4000730992
	EQUAL
	IFJMPREF {
		CALL $config_slash_confirmed_err$
	}
}


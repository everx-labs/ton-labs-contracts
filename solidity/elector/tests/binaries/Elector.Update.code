.version sol 0.66.0

.pragma selector-func-solidity

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc Elector.Update.tsol, 89
PUSHINT 0
SETGLOB 2
.loc Elector.Update.tsol, 90
FALSE
SETGLOB 10
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	get_current_vset_cb181528_internal
.type	get_current_vset_cb181528_internal, @function
CALL $get_current_vset_cb181528_internal_macro$

.macro get_current_vset_cb181528_internal_macro
.loc Elector.Update.tsol, 102
PUSHINT 35
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.Update.tsol, 103
PUSHCONT {
	.loc Elector.Update.tsol, 104
	PUSHINT 34
	CONFIGPARAM
	DUP
	PUSHCONT {
		PUSHREF {
		}
		SWAP
	}
	IFNOT
	DROP
	NIP
	.loc Elector.Update.tsol, 0
}
IFNOT
.loc Elector.Update.tsol, 106
DUP
CTOS
LDU 8
LDU 32
LDU 32
LDU 16
LDU 16
LDU 64
PLDDICT
TUPLE 7
.loc Elector.Update.tsol, 107
DUP
FIRST
EQINT 18
THROWIFNOT 40
.loc Elector.Update.tsol, 108
TUCK
INDEX 5
ROT
INDEX 6
.loc Elector.Update.tsol, 0

.globl	send_message_back_30631536_internal
.type	send_message_back_30631536_internal, @function
CALL $send_message_back_30631536_internal_macro$

.macro send_message_back_30631536_internal_macro
.loc Elector.Update.tsol, 113
NEWC
.loc Elector.Update.tsol, 114
STSLICECONST x62_
.loc Elector.Update.tsol, 115
ROLL 6
STSLICER
.loc Elector.Update.tsol, 116
ROT
STGRAMS
.loc Elector.Update.tsol, 117
PUSHINT 107
STZEROES
.loc Elector.Update.tsol, 118
ROLL 4
STUR 32
.loc Elector.Update.tsol, 119
ROLL 3
STUR 64
.loc Elector.Update.tsol, 120
ROT
STUR 32
.loc Elector.Update.tsol, 121
ENDC
SWAP
SENDRAWMSG
.loc Elector.Update.tsol, 0

.globl	return_stake_fe624e47_internal
.type	return_stake_fe624e47_internal, @function
CALL $return_stake_fe624e47_internal_macro$

.macro return_stake_fe624e47_internal_macro
.loc Elector.Update.tsol, 125
SWAP
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 4000269644
STUR 143
STU 64
STU 32
ENDC
PUSHINT 64
SENDRAWMSG
.loc Elector.Update.tsol, 0

.globl	send_confirmation_1aa717cd_internal
.type	send_confirmation_1aa717cd_internal, @function
CALL $send_confirmation_1aa717cd_internal_macro$

.macro send_confirmation_1aa717cd_internal_macro
.loc Elector.Update.tsol, 129
SWAP
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 12669519700468838679097577345632051794083291476543564
STUR 175
STU 64
STU 32
ENDC
PUSHINT 2
SENDRAWMSG
.loc Elector.Update.tsol, 0

.macro process_new_stake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 143
OVER
PUSHCONT {
	LDU 64
	LDU 256
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 64
	LDU 256
}
IFELSE
LDU 32
LDU 32
LDU 256
LDREF
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $process_new_stake_eb5fd500_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	process_new_stake_eb5fd500_internal
.type	process_new_stake_eb5fd500_internal, @function
CALL $process_new_stake_eb5fd500_internal_macro$

.macro process_new_stake_eb5fd500_internal_macro
.loc Elector.Update.tsol, 143
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.Update.tsol, 147
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.Update.tsol, 148
	GETGLOB 10
	NOT
	ROT
	NEQINT -1
	OR
	PUSHCONT {
		.loc Elector.Update.tsol, 151
		ROLL 6
		PUSHINT 0
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 154
	PUSH3 S2, S0, S3
	PUSH S7
	NEWC
	STSLICECONST x654c5074
	STU 32
	STU 32
	STU 256
	STU 256
	.loc Elector.Update.tsol, 155
	ENDC
	CTOS
	ROT
	CTOS
	PUSH S6
	CHKSIGNS
	PUSHCONT {
		.loc Elector.Update.tsol, 157
		ROLL 5
		PUSHINT 1
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 5
		.loc Elector.Update.tsol, 0
	}
	IFNOTJMP
	.loc Elector.Update.tsol, 159
	PUSH S2
	PUSHPOW2 16
	LESS
	PUSHCONT {
		.loc Elector.Update.tsol, 161
		ROLL 5
		PUSHINT 6
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 5
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 163
	GETGLOB 11
	INDEX 3
	.loc Elector.Update.tsol, 165
	DEPTH
	ADDCONST -2
	PICK
	PUSHINT 1000000000
	SUB
	.loc Elector.Update.tsol, 166
	DUP
	LSHIFT 12
	PUSH S2
	LESS
	PUSHCONT {
		.loc Elector.Update.tsol, 168
		ROLL 7
		PUSHINT 2
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 171
	DUP
	UFITS 128
	PUSH S2
	ADD
	POP S2
	.loc Elector.Update.tsol, 172
	ROLL 5
	GETGLOB 11
	FIRST
	NEQ
	PUSHCONT {
		.loc Elector.Update.tsol, 174
		ROLL 6
		PUSHINT 3
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 176
	GETGLOB 11
	INDEX 6
	PUSHCONT {
		.loc Elector.Update.tsol, 178
		ROLL 6
		PUSHINT 0
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 180
	PUSH S5
	GETGLOB 11
	INDEX 4
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDVARUINT16
		LDU 32
		LDU 32
		LDU 256
		LDU 256
		ENDS
		TUPLE 5
	}
	.loc Elector.Update.tsol, 181
	FALSE
	.loc Elector.Update.tsol, 182
	OVER
	ISNULL
	PUSHCONT {
		.loc Elector.Update.tsol, 184
		PUSH2 S1, S1
		ISNULL
		THROWIF 63
		.loc Elector.Update.tsol, 186
		DUP
		FIRST
		PUSH S4
		ADD
		POP S4
		.loc Elector.Update.tsol, 187
		PUXC S5, S-1
		INDEX 3
		NEQ
		NIP
		.loc Elector.Update.tsol, 0
	}
	IFNOT
	.loc Elector.Update.tsol, 189
	PUSHCONT {
		.loc Elector.Update.tsol, 191
		ROLL 7
		PUSHINT 4
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 193
	DROP
	DUP
	GETGLOB 11
	THIRD
	LESS
	PUSHCONT {
		.loc Elector.Update.tsol, 195
		ROLL 6
		PUSHINT 5
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 197
	PUSHINT 17
	CONFIGPARAM
	PUSHCONT {
		CTOS
		LDGRAMS
		LDGRAMS
		LDGRAMS
		LDU 32
		ENDS
		TRUE
	}
	PUSHCONT {
		PUSHINT 0
		BLKPUSH 4, 0
	}
	IFELSE
	BLKDROP 3
	NIP
	.loc Elector.Update.tsol, 198
	PUXC S1, S-1
	GREATER
	PUSHCONT {
		.loc Elector.Update.tsol, 200
		ROLL 6
		PUSHINT 7
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 202
	DUP
	THROWIFNOT 44
	.loc Elector.Update.tsol, 203
	ACCEPT
	.loc Elector.Update.tsol, 205
	UFITS 120
	NOW
	BLKSWAP 3, 3
	SWAP
	TUPLE 5
	GETGLOB 11
	DUP
	INDEX 4
	ROLL 4
	SWAP
	ROLL 3
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		SWAP
		STVARUINT16
		STU 32
		STU 32
		STU 256
		STU 256
	}
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETINDEX 4
	DUP
	SETGLOB 11
	.loc Elector.Update.tsol, 207
	FALSE
	SETINDEX 5
	DUP
	SETGLOB 11
	.loc Elector.Update.tsol, 208
	FALSE
	SETINDEX 6
	SETGLOB 11
	.loc Elector.Update.tsol, 209
	UFITS 120
	GETGLOB 11
	SWAP
	SETINDEX 3
	SETGLOB 11
	.loc Elector.Update.tsol, 211
	DUP
	PUSHCONT {
		.loc Elector.Update.tsol, 212
		PUSHINT 0
		CALLREF {
			CALL $send_confirmation_1aa717cd_internal_macro$
		}
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 0
	DROP
	.loc Elector.Update.tsol, 143
}
CALLX
.loc Elector.Update.tsol, 0

.globl	unfreeze_without_bonuses_a32f4563_internal
.type	unfreeze_without_bonuses_a32f4563_internal, @function
CALL $unfreeze_without_bonuses_a32f4563_internal_macro$

.macro unfreeze_without_bonuses_a32f4563_internal_macro
.loc Elector.Update.tsol, 219
PUSHINT 0
PUSH2 S0, S2
.loc Elector.Update.tsol, 221
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 256
	LDU 64
	LDVARUINT16
	LDI 1
	ENDS
	TUPLE 4
	PAIR
}
.loc Elector.Update.tsol, 222
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 223
	DUP
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 224
	DUP
	INDEX 3
	PUSHCONT {
		.loc Elector.Update.tsol, 225
		DUP
		THIRD
		PUSH S3
		ADD
		POP S3
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 227
		DUP
		FIRST
		OVER
		THIRD
		.loc Elector.Update.tsol, 139
		UFITS 120
		SWAP
		GETGLOB 12
		DUP2
		PUSHPOW2 8
		DICTUGET
		ZEROSWAPIFNOT
		PUSHCONT {
			LDVARUINT16
			DROP
		}
		IF
		ROLL 3
		ADD
		NEWC
		SWAP
		STVARUINT16
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 12
		.loc Elector.Update.tsol, 228
		DUP
		THIRD
		PUSH S4
		ADD
		POP S4
	}
	IFELSE
	.loc Elector.Update.tsol, 230
	DROP
	PUSH S4
	PUSHPOW2 8
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
		PAIR
	}
	.loc Elector.Update.tsol, 0
}
WHILE
.loc Elector.Update.tsol, 232
DROP
XCHG S2
EQUAL
THROWIFNOT 59
.loc Elector.Update.tsol, 233
NIP
.loc Elector.Update.tsol, 0

.globl	unfreeze_with_bonuses_a6255a42_internal
.type	unfreeze_with_bonuses_a6255a42_internal, @function
CALL $unfreeze_with_bonuses_a6255a42_internal_macro$

.macro unfreeze_with_bonuses_a6255a42_internal_macro
.loc Elector.Update.tsol, 239
PUSHINT 0
BLKPUSH 2, 0
.loc Elector.Update.tsol, 242
PUSH S5
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 256
	LDU 64
	LDVARUINT16
	LDI 1
	ENDS
	TUPLE 4
	PAIR
}
.loc Elector.Update.tsol, 243
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 244
	DUP
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 245
	DUP
	INDEX 3
	PUSHCONT {
		.loc Elector.Update.tsol, 246
		DUP
		THIRD
		PUSH S4
		ADD
		POP S4
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 248
		PUSH2 S5, S0
		THIRD
		PUSH S8
		MULDIVMOD
		DROP
		.loc Elector.Update.tsol, 249
		PUSH2 S3, S0
		ADD
		POP S4
		.loc Elector.Update.tsol, 250
		OVER
		FIRST
		PUSH S2
		THIRD
		ROT
		ADD
		.loc Elector.Update.tsol, 139
		UFITS 120
		SWAP
		GETGLOB 12
		DUP2
		PUSHPOW2 8
		DICTUGET
		ZEROSWAPIFNOT
		PUSHCONT {
			LDVARUINT16
			DROP
		}
		IF
		ROLL 3
		ADD
		NEWC
		SWAP
		STVARUINT16
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 12
		.loc Elector.Update.tsol, 251
		DUP
		THIRD
		PUSH S5
		ADD
		POP S5
	}
	IFELSE
	.loc Elector.Update.tsol, 253
	DROP
	PUSH S6
	PUSHPOW2 8
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
		PAIR
	}
	.loc Elector.Update.tsol, 0
}
WHILE
.loc Elector.Update.tsol, 255
DROP
ROT
ROLL 4
EQUAL
PUSH2 S1, S3
LEQ
AND
THROWIFNOT 59
.loc Elector.Update.tsol, 256
XCHG S2
ADD
SUBR
NIP
.loc Elector.Update.tsol, 0

.globl	stakes_sum_8b3419f4_internal
.type	stakes_sum_8b3419f4_internal, @function
CALL $stakes_sum_8b3419f4_internal_macro$

.macro stakes_sum_8b3419f4_internal_macro
.loc Elector.Update.tsol, 260
PUSHINT 0
.loc Elector.Update.tsol, 261
OVER
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 256
	LDU 64
	LDVARUINT16
	LDI 1
	ENDS
	TUPLE 4
	PAIR
}
.loc Elector.Update.tsol, 262
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 263
	DUP
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 264
	THIRD
	PUSH S2
	ADD
	POP S2
	.loc Elector.Update.tsol, 265
	PUSH S2
	PUSHPOW2 8
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
		PAIR
	}
	.loc Elector.Update.tsol, 0
}
WHILE
.loc Elector.Update.tsol, 267
DROP
NIP
.loc Elector.Update.tsol, 0

.globl	unfreeze_all_ca0f9c0b_internal
.type	unfreeze_all_ca0f9c0b_internal, @function
CALL $unfreeze_all_ca0f9c0b_internal_macro$

.macro unfreeze_all_ca0f9c0b_internal_macro
.loc Elector.Update.tsol, 271
DUP
GETGLOB 13
PUSHINT 32
DICTUGET
NULLSWAPIFNOT
IFREF {
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
}
.loc Elector.Update.tsol, 272
DUP
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 273
	DROP2
	PUSHINT 0
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 275
SWAP
GETGLOB 13
PUSHINT 32
DICTUDEL
DROP
SETGLOB 13
.loc Elector.Update.tsol, 276
DUP
ISNULL
THROWIF 63
.loc Elector.Update.tsol, 277
DUP
INDEX 4
.loc Elector.Update.tsol, 279
OVER
INDEX 5
GTINT 0
PUSHCONT {
	.loc Elector.Update.tsol, 280
	OVER
	INDEX 3
	XCHG S2
	INDEX 5
	CALLREF {
		CALL $unfreeze_with_bonuses_a6255a42_internal_macro$
	}
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 282
SWAP
INDEX 3
SWAP
CALLREF {
	CALL $unfreeze_without_bonuses_a32f4563_internal_macro$
}
.loc Elector.Update.tsol, 0

.globl	config_set_confirmed_e5f6419e_internal
.type	config_set_confirmed_e5f6419e_internal, @function
CALL $config_set_confirmed_e5f6419e_internal_macro$

.macro config_set_confirmed_e5f6419e_internal_macro
.loc Elector.Update.tsol, 286
GETGLOB 9
REWRITESTDADDR
.loc Elector.Update.tsol, 287
PUSHINT 0
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.Update.tsol, 288
CTOS
PLDU 256
.loc Elector.Update.tsol, 289
ROT
NEQINT -1
ROTREV
NEQ
GETGLOB 10
NOT
OR
OR
PUSHCONT {
	.loc Elector.Update.tsol, 292
	DROP2
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 294
GETGLOB 11
FIRST
ROT
NEQ
GETGLOB 11
INDEX 6
NOT
OR
PUSHCONT {
	.loc Elector.Update.tsol, 296
	DROP
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 298
ACCEPT
.loc Elector.Update.tsol, 299
PUSHCONT {
	.loc Elector.Update.tsol, 301
	GETGLOB 11
	FIRST
	CALLREF {
		CALL $unfreeze_all_ca0f9c0b_internal_macro$
	}
	UFITS 120
	GETGLOB 14
	ADD
	SETGLOB 14
	.loc Elector.Update.tsol, 302
	FALSE
	SETGLOB 10
	.loc Elector.Update.tsol, 0
}
IFNOT
.loc Elector.Update.tsol, 0

.macro config_set_confirmed_ok
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 307
LDU 64
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $config_set_confirmed_ok_4768af83_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_set_confirmed_ok_4768af83_internal
.type	config_set_confirmed_ok_4768af83_internal, @function
CALL $config_set_confirmed_ok_4768af83_internal_macro$

.macro config_set_confirmed_ok_4768af83_internal_macro
.loc Elector.Update.tsol, 307
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 309
TRUE
CALLREF {
	CALL $config_set_confirmed_e5f6419e_internal_macro$
}
.loc Elector.Update.tsol, 0

.macro config_set_confirmed_err
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 312
LDU 64
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $config_set_confirmed_err_40609b18_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_set_confirmed_err_40609b18_internal
.type	config_set_confirmed_err_40609b18_internal, @function
CALL $config_set_confirmed_err_40609b18_internal_macro$

.macro config_set_confirmed_err_40609b18_internal_macro
.loc Elector.Update.tsol, 312
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 314
FALSE
CALLREF {
	CALL $config_set_confirmed_e5f6419e_internal_macro$
}
.loc Elector.Update.tsol, 0

.macro config_slash_confirmed_ok
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 317
LDU 64
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $config_slash_confirmed_ok_19ef6a25_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_slash_confirmed_ok_19ef6a25_internal
.type	config_slash_confirmed_ok_19ef6a25_internal, @function
CALL $config_slash_confirmed_ok_19ef6a25_internal_macro$

.macro config_slash_confirmed_ok_19ef6a25_internal_macro
.loc Elector.Update.tsol, 317
DROP
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 0

.macro config_slash_confirmed_err
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 321
LDU 64
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $config_slash_confirmed_err_3407cd03_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_slash_confirmed_err_3407cd03_internal
.type	config_slash_confirmed_err_3407cd03_internal, @function
CALL $config_slash_confirmed_err_3407cd03_internal_macro$

.macro config_slash_confirmed_err_3407cd03_internal_macro
.loc Elector.Update.tsol, 321
DROP
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 0

.macro grant
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 325
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $grant_30c3eaa8_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	grant_30c3eaa8_internal
.type	grant_30c3eaa8_internal, @function
CALL $grant_30c3eaa8_internal_macro$

.macro grant_30c3eaa8_internal_macro
.loc Elector.Update.tsol, 325
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 326
DEPTH
ADDCONST -2
PICK
UFITS 120
GETGLOB 14
ADD
SETGLOB 14
.loc Elector.Update.tsol, 0

.macro take_change
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 329
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $take_change_670f0dd2_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	take_change_670f0dd2_internal
.type	take_change_670f0dd2_internal, @function
CALL $take_change_670f0dd2_internal_macro$

.macro take_change_670f0dd2_internal_macro
.loc Elector.Update.tsol, 329
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 0

.globl	process_simple_transfer_c2745595_internal
.type	process_simple_transfer_c2745595_internal, @function
CALL $process_simple_transfer_c2745595_internal_macro$

.macro process_simple_transfer_c2745595_internal_macro
.loc Elector.Update.tsol, 333
GETGLOB 9
REWRITESTDADDR
.loc Elector.Update.tsol, 334
NEQINT 0
SWAP
NEQINT -1
GETGLOB 15
EQINT 0
OR
OR
PUSHCONT {
	.loc Elector.Update.tsol, 337
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 341
GETGLOB 15
GETGLOB 13
PUSHINT 32
DICTUGET
NULLSWAPIFNOT
IFREF {
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
}
.loc Elector.Update.tsol, 342
DUP
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 344
	DEPTH
	ADDCONST -2
	PICK
	UFITS 120
	GETGLOB 14
	ADD
	SETGLOB 14
}
PUSHCONT {
	.loc Elector.Update.tsol, 346
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	.loc Elector.Update.tsol, 348
	DEPTH
	ADDCONST -2
	PICK
	UFITS 120
	XCPU S1, S0
	INDEX 5
	ROT
	ADD
	SETINDEX 5
	.loc Elector.Update.tsol, 349
	GETGLOB 15
	GETGLOB 13
	ROT
	CALLREF {
		UNTUPLE 7
		REVERSE 7, 0
		NEWC
		STU 32
		STU 32
		STU 256
		STDICT
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
	}
	ROTREV
	PUSHINT 32
	DICTUSETB
	SETGLOB 13
}
IFELSE
.loc Elector.Update.tsol, 0
DROP

.macro recover_stake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 353
LDU 64
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $recover_stake_c7b13017_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	recover_stake_c7b13017_internal
.type	recover_stake_c7b13017_internal, @function
CALL $recover_stake_c7b13017_internal_macro$

.macro recover_stake_c7b13017_internal_macro
.loc Elector.Update.tsol, 353
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.Update.tsol, 355
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.Update.tsol, 356
	SWAP
	NEQINT -1
	PUSHCONT {
		.loc Elector.Update.tsol, 358
		GETGLOB 9
		PUSHINT 4294967294
		ROLL 3
		PUSHINT 1197831204
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.Update.tsol, 359
		DROP
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 362
	DUP
	GETGLOB 12
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		LDVARUINT16
		DROP
	}
	IF
	.loc Elector.Update.tsol, 363
	DUP
	ISNULL
	PUSHCONT {
		.loc Elector.Update.tsol, 365
		GETGLOB 9
		PUSHINT 4294967294
		ROLL 4
		PUSHINT 1197831204
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.Update.tsol, 366
		DROP2
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 368
	SWAP
	GETGLOB 12
	PUSHPOW2 8
	DICTUDEL
	DROP
	SETGLOB 12
	.loc Elector.Update.tsol, 370
	DUP
	ISNULL
	THROWIF 63
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 4184830756
	STUR 139
	STU 64
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.Update.tsol, 353
}
CALLX
.loc Elector.Update.tsol, 0

.macro recover_stake_gracefully
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 373
LDU 64
LDU 32
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $recover_stake_gracefully_d474eed0_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	recover_stake_gracefully_d474eed0_internal
.type	recover_stake_gracefully_d474eed0_internal, @function
CALL $recover_stake_gracefully_d474eed0_internal_macro$

.macro recover_stake_gracefully_d474eed0_internal_macro
.loc Elector.Update.tsol, 373
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.Update.tsol, 375
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.Update.tsol, 376
	SWAP
	NEQINT -1
	PUSHCONT {
		.loc Elector.Update.tsol, 378
		GETGLOB 9
		PUSHINT 4294967294
		ROLL 4
		PUSHINT 1197831205
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.Update.tsol, 379
		DROP2
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 381
	DUP
	GETGLOB 12
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		LDVARUINT16
		DROP
	}
	IF
	.loc Elector.Update.tsol, 382
	DUP
	ISNULL
	PUSHCONT {
		.loc Elector.Update.tsol, 383
		ROT
		GETGLOB 13
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 32
			LDU 32
			LDU 256
			LDDICT
			LDVARUINT16
			LDVARUINT16
			LDDICT
			ENDS
			TUPLE 7
		}
		.loc Elector.Update.tsol, 384
		DUP
		ISNULL
		PUSHCONT {
			.loc Elector.Update.tsol, 385
			GETGLOB 9
			PUSHINT 4294967294
			ROLL 5
			PUSHINT 1197831205
			PUSHINT 0
			PUSHINT 64
			CALLREF {
				CALL $send_message_back_30631536_internal_macro$
			}
			.loc Elector.Update.tsol, 386
			BLKDROP 3
			.loc Elector.Update.tsol, 0
		}
		IFJMP
		.loc Elector.Update.tsol, 388
		DUP
		ISNULL
		THROWIF 63
		.loc Elector.Update.tsol, 389
		GETGLOB 9
		PUSHINT 4294967293
		ROLL 5
		ROLL 3
		FIRST
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.Update.tsol, 390
		DROP2
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 392
	SWAP
	GETGLOB 12
	PUSHPOW2 8
	DICTUDEL
	DROP
	SETGLOB 12
	.loc Elector.Update.tsol, 394
	XCHG S1, S2
	DUP
	ISNULL
	THROWIF 63
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 4184830756
	STUR 139
	STU 64
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.Update.tsol, 0
	DROP
	.loc Elector.Update.tsol, 373
}
CALLX
.loc Elector.Update.tsol, 0

.macro get_elect_at
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 397
LDU 64
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $get_elect_at_662e4963_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	get_elect_at_662e4963_internal
.type	get_elect_at_662e4963_internal, @function
CALL $get_elect_at_662e4963_internal_macro$

.macro get_elect_at_662e4963_internal_macro
.loc Elector.Update.tsol, 397
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.Update.tsol, 399
	GETGLOB 9
	REWRITESTDADDR
	DROP
	.loc Elector.Update.tsol, 400
	NEQINT -1
	PUSHCONT {
		.loc Elector.Update.tsol, 402
		GETGLOB 9
		PUSHINT 4294967292
		ROT
		PUSHINT 1197831206
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 405
	GETGLOB 11
	FIRST
	GETGLOB 10
	ROT
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 4163016210
	STUR 143
	STU 64
	STI 1
	STU 32
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.Update.tsol, 397
}
CALLX
.loc Elector.Update.tsol, 0

.globl	conduct_elections_6ec16465_internal
.type	conduct_elections_6ec16465_internal, @function
CALL $conduct_elections_6ec16465_internal_macro$

.macro conduct_elections_6ec16465_internal_macro
.loc Elector.Update.tsol, 593
PUSHINT 0
.loc Elector.Update.tsol, 594
GETGLOB 11
.loc Elector.Update.tsol, 595
NOW
OVER
SECOND
LESS
PUSHCONT {
	.loc Elector.Update.tsol, 597
	DROP2
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 599
PUSHINT 0
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
NIP
.loc Elector.Update.tsol, 600
DUP
PUSHCONT {
	.loc Elector.Update.tsol, 602
	PUSHINT 1
	.loc Elector.Update.tsol, 409
	HEXDUMP
	BLKDROP 4
	.loc Elector.Update.tsol, 410
	FALSE
	.loc Elector.Update.tsol, 0
}
IFNOTJMP
.loc Elector.Update.tsol, 604
PUSHINT 17
CONFIGPARAM
PUSHCONT {
	CTOS
	LDGRAMS
	LDGRAMS
	LDGRAMS
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
DROP
.loc Elector.Update.tsol, 606
PUSH S5
INDEX 3
PUSH S2
LESS
PUSHCONT {
	.loc Elector.Update.tsol, 608
	PUSHINT 2
	.loc Elector.Update.tsol, 409
	HEXDUMP
	BLKDROP 8
	.loc Elector.Update.tsol, 410
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 610
PUSH S5
INDEX 5
PUSHCONT {
	.loc Elector.Update.tsol, 612
	PUSHINT 3
	.loc Elector.Update.tsol, 409
	HEXDUMP
	BLKDROP 8
	.loc Elector.Update.tsol, 410
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 614
PUSH S5
INDEX 6
PUSHCONT {
	.loc Elector.Update.tsol, 616
	BLKDROP 7
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 618
BLKPUSH 4, 3
PUSHCONT {
	NEWDICT
	PUSHINT 0
	NEWDICT
	PUSHINT 0
	DUP
	.loc Elector.Update.tsol, 458
	PUSHINT 16
	CONFIGPARAM
	DUP
	PUSHCONT {
		PUSHREF {
		}
		SWAP
	}
	IFNOT
	DROP
	.loc Elector.Update.tsol, 459
	DUP
	CTOS
	LDU 16
	LDU 16
	PLDU 16
	NIP
	.loc Elector.Update.tsol, 460
	PUSHINT 1
	MAX
	.loc Elector.Update.tsol, 461
	PUSHINT 0
	.loc Elector.Update.tsol, 462
	NEWDICT
	.loc Elector.Update.tsol, 463
	GETGLOB 11
	INDEX 4
	.loc Elector.Update.tsol, 464
	BLKPUSH 2, 0
	PUSHPOW2 8
	DICTUMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		ROT
		LDVARUINT16
		LDU 32
		LDU 32
		LDU 256
		LDU 256
		ENDS
		TUPLE 5
}
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 465
		UNTUPLE 5
		.loc Elector.Update.tsol, 466
		ROT
		PUSH S19
		MIN
		ROTREV
		TRIPLE
		PUSH S7
		SWAP2
		FITS 32
		NEGATE
		ROLL 4
		TRIPLE
		CALLREF {
			UNTRIPLE
			XCHG S2
			NEWC
			STU 128
			STI 32
			STU 256
		}
		ENDC
		CTOS
		XCHG S2
		CALLREF {
			UNTRIPLE
			XCHG S2
			NEWC
			STU 32
			STU 256
			STU 256
		}
		ROTREV
		PUSHINT 416
		DICTSETB
		POP S4
		.loc Elector.Update.tsol, 468
		PUSH S4
		INC
		POP S5
		.loc Elector.Update.tsol, 0
		PUSH2 S0, S1
		PUSHPOW2 8
		DICTUGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			ROT
			LDVARUINT16
			LDU 32
			LDU 32
			LDU 256
			LDU 256
			ENDS
			TUPLE 5
}
		BLKDROP2 1, 3
	}
	WHILE
	BLKDROP 4
	.loc Elector.Update.tsol, 470
	PUSH2 S2, S4
	MIN
	POP S3
	.loc Elector.Update.tsol, 471
	PUSH2 S2, S3
	LESS
	PUSHCONT {
		.loc Elector.Update.tsol, 474
		NEWDICT
		PUSHINT 0
		NEWDICT
		PUSHINT 0
		DUP
		BLKDROP2 15, 5
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 476
	NULL
	.loc Elector.Update.tsol, 477
	PUSH2 S2, S2
	PUSHINT 416
	DICTMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		LDU 128
		LDI 32
		LDU 256
		ENDS
		TRIPLE
		ROT
		LDU 32
		LDU 256
		LDU 256
		ENDS
		TRIPLE
}
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 478
		OVER
		FIRST
		PUSH S19
		MIN
		.loc Elector.Update.tsol, 479
		OVER
		FIRST
		ROLL 3
		THIRD
		ROLL 3
		THIRD
		PUSH S6
		TUPLE 5
		POP S3
		.loc Elector.Update.tsol, 0
		PUSH2 S0, S1
		PUSHINT 416
		DICTGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			LDU 128
			LDI 32
			LDU 256
			ENDS
			TRIPLE
			ROT
			LDU 32
			LDU 256
			LDU 256
			ENDS
			TRIPLE
}
		BLKDROP2 1, 3
	}
	WHILE
	BLKDROP 4
	.loc Elector.Update.tsol, 489
	PUSHINT 0
	BLKPUSH 2, 0
	.loc Elector.Update.tsol, 492
	PUSH S3
	.loc Elector.Update.tsol, 494
	PUSHINT 0
	.loc Elector.Update.tsol, 495
	NEWDICT
	.loc Elector.Update.tsol, 496
	PUSHINT 0
	.loc Elector.Update.tsol, 498
	PUSHINT 1
	PUSHCONT {
		PUSH2 S0, S11
		LEQ
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 499
		PUSH2 S4, S4
		ISNULL
		THROWIF 63
		.loc Elector.Update.tsol, 500
		DUP
		FIRST
		.loc Elector.Update.tsol, 501
		DUP
		PUSH S26
		LESS
		PUSHCONT {
			.loc Elector.Update.tsol, 502
			DROP2
			RETALT
			.loc Elector.Update.tsol, 0
		}
		IFJMP
		.loc Elector.Update.tsol, 504
		OVER
		SECOND
		.loc Elector.Update.tsol, 505
		PUSH S2
		INDEX 4
		POP S8
		.loc Elector.Update.tsol, 507
		PUSH2 S6, S1
		ADD
		POP S7
		.loc Elector.Update.tsol, 508
		OVER
		PUSHPOW2 16
		MUL
		PUSHINT 1000000000000000000
		MUL
		OVER
		DIV
		.loc Elector.Update.tsol, 509
		BLKPUSH 2, 2
		PAIR
		PUSH3 S7, S1, S5
		PAIR
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STU 256
			STU 16
		}
		ENDC
		CTOS
		XCHG S2
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STU 128
			STU 32
		}
		ROTREV
		PUSHINT 272
		DICTSETB
		POP S7
		.loc Elector.Update.tsol, 511
		PUSHCONT {
			PUSH S6
			DICTEMPTY
			NOT
		}
		PUSHCONT {
			.loc Elector.Update.tsol, 512
			PUSH S6
			PUSHINT 272
			DICTMAX
			NULLSWAPIFNOT
			IFREF {
				LDU 256
				LDU 16
				ENDS
				PAIR
				SWAP
				LDU 128
				LDU 32
				ENDS
				PAIR
				PAIR
			}
			DUP
			ISNULL
			THROWIF 63
			UNPAIR
			.loc Elector.Update.tsol, 513
			SWAP
			FIRST
			PUSH S4
			PUSHINT 1000000000000000000
			MUL
			LESS
			PUSHCONT {
				.loc Elector.Update.tsol, 514
				DROP
				RETALT
				.loc Elector.Update.tsol, 0
			}
			IFJMP
			.loc Elector.Update.tsol, 516
			DUP
			FIRST
			PUSH S9
			SUBR
			POP S9
			.loc Elector.Update.tsol, 517
			PUSH S7
			PUSHINT 272
			DICTREMMAX
			NULLSWAPIFNOT
			IFREF {
				LDU 256
				LDU 16
				ENDS
				PAIR
				SWAP
				LDU 128
				LDU 32
				ENDS
				PAIR
				PAIR
			}
			DROP
			POP S8
			.loc Elector.Update.tsol, 518
			SECOND
			PUSH S6
			ADD
			POP S6
			.loc Elector.Update.tsol, 0
		}
		WHILEBRK
		.loc Elector.Update.tsol, 521
		DROP2
		PUSH3 S5, S0, S3
		MUL
		RSHIFT 16
		UFITS 128
		ADD
		.loc Elector.Update.tsol, 522
		PUSH2 S3, S15
		EQUAL
		PUSH2 S1, S10
		GREATER
		OR
		PUSHCONT {
			.loc Elector.Update.tsol, 523
			DUP
			POP S10
			.loc Elector.Update.tsol, 524
			PUSH S3
			POP S9
			.loc Elector.Update.tsol, 525
			OVER
			POP S11
			.loc Elector.Update.tsol, 0
		}
		IF
		.loc Elector.Update.tsol, 0
		BLKDROP 3
		.loc Elector.Update.tsol, 498
		INC
		.loc Elector.Update.tsol, 0
	}
	WHILEBRK
	BLKDROP 4
	.loc Elector.Update.tsol, 529
	OVER
	EQINT 0
	PUSH S3
	PUSHINT 19
	ROLLX
	LESS
	OR
	PUSHCONT {
		.loc Elector.Update.tsol, 532
		NEWDICT
		PUSHINT 0
		NEWDICT
		PUSHINT 0
		DUP
		PUSHINT 19
		PUSHINT 5
		BLKSWX
		PUSHINT 19
		DROPX
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 538
	PUSH S2
	.loc Elector.Update.tsol, 539
	PUSHINT 0
	POP S4
	.loc Elector.Update.tsol, 540
	PUSH S5
	POP S2
	.loc Elector.Update.tsol, 541
	PUSH S2
	PUSHCONT {
		.loc Elector.Update.tsol, 542
		PUSH2 S1, S1
		ISNULL
		THROWIF 63
		.loc Elector.Update.tsol, 543
		DUP
		FIRST
		PUSH2 S6, S1
		SECOND
		MUL
		RSHIFT 16
		MIN
		PUSH S5
		ADD
		POP S5
		.loc Elector.Update.tsol, 544
		INDEX 4
		POP S2
		.loc Elector.Update.tsol, 0
	}
	REPEAT
	.loc Elector.Update.tsol, 546
	PUSH S3
	SUB
	ABS
	PUSHINT 1000000000
	LEQ
	THROWIFNOT 666
	.loc Elector.Update.tsol, 550
	DROP
	PUSHINT 0
	BLKPUSH 2, 0
	.loc Elector.Update.tsol, 553
	NEWDICT
	DUP
	.loc Elector.Update.tsol, 555
	GETGLOB 12
	.loc Elector.Update.tsol, 556
	PUSHCONT {
		.loc Elector.Update.tsol, 557
		PUSH2 S9, S9
		ISNULL
		THROWIF 63
		UNTUPLE 5
		.loc Elector.Update.tsol, 558
		POP S14
		.loc Elector.Update.tsol, 560
		PUSH2 S1, S14
		PUSHPOW2 8
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDVARUINT16
			LDU 32
			LDU 32
			LDU 256
			LDU 256
			ENDS
			TUPLE 5
		}
		.loc Elector.Update.tsol, 561
		DUP
		ISNULL
		THROWIF 61
		.loc Elector.Update.tsol, 562
		DUP
		ISNULL
		THROWIF 63
		INDEX 3
		.loc Elector.Update.tsol, 563
		PUSH2 S10, S11
		LESS
		PUSHCONT {
			.loc Elector.Update.tsol, 565
			BLKPUSH 2, 4
			PUSH S15
			MUL
			RSHIFT 16
			MIN
			.loc Elector.Update.tsol, 566
			PUSH2 S5, S0
			SUB
			POP S6
			.loc Elector.Update.tsol, 567
			DUP
			LSHIFT 60
			PUSH S14
			DIV
			.loc Elector.Update.tsol, 568
			PUSH2 S11, S1
			ADD
			POP S12
			.loc Elector.Update.tsol, 569
			PUSH2 S10, S0
			ADD
			POP S11
			.loc Elector.Update.tsol, 570
			NEWC
			.loc Elector.Update.tsol, 571
			PUSH S4
			GTINT 0
			PUSHCONT {
				.loc Elector.Update.tsol, 572
				PUSHINT 115
				PUSHINT 2390828938
				PUSH2 S7, S3
				UFITS 64
				PUSH S8
				REVERSE 6, 0
				STU 8
				STU 32
				STU 256
				STU 64
				STU 256
			}
			PUSHCONT {
				.loc Elector.Update.tsol, 575
				PUSHINT 83
				PUSHINT 2390828938
				PUSH2 S7, S3
				UFITS 64
				REVERSE 5, 0
				STU 8
				STU 32
				STU 256
				STU 64
			}
			IFELSE
			.loc Elector.Update.tsol, 578
			ENDC
			CTOS
			PUSH2 S13, S10
			PUSHINT 16
			DICTUSET
			POP S10
			.loc Elector.Update.tsol, 579
			PUXC S2, S-1
			UFITS 64
			ROT
			UFITS 120
			FALSE
			TUPLE 4
			PUSH2 S3, S7
			ROT
			CALLREF {
				UNTUPLE 4
				REVERSE 4, 0
				NEWC
				STU 256
				STU 64
				SWAP
				STVARUINT16
				STI 1
			}
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			POP S7
			.loc Elector.Update.tsol, 0
		}
		IF
		.loc Elector.Update.tsol, 581
		PUSH S4
		GTINT 0
		PUSHCONT {
			.loc Elector.Update.tsol, 584
			PUSH S4
			UFITS 120
			PUSH3 S1, S6, S1
			OVER
			PUSHPOW2 8
			DICTUGET
			ZEROSWAPIFNOT
			PUSHCONT {
				LDVARUINT16
				DROP
			}
			IF
			ROLL 3
			ADD
			NEWC
			SWAP
			STVARUINT16
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			POP S6
			.loc Elector.Update.tsol, 0
		}
		IF
		.loc Elector.Update.tsol, 586
		BLKDROP 5
		PUSH S5
		INC
		POP S6
		.loc Elector.Update.tsol, 0
		PUSH S9
		ISNULL
	}
	UNTIL
	.loc Elector.Update.tsol, 588
	SETGLOB 12
	.loc Elector.Update.tsol, 589
	PUSH S3
	ROLL 7
	EQUAL
	THROWIFNOT 49
	.loc Elector.Update.tsol, 590
	XCHG S2
	UFITS 64
	SWAP
	ROLL 4
	REVERSE 6, 0
	PUSHINT 17
	PUSHINT 5
	BLKSWX
	PUSHINT 17
	DROPX
	.loc Elector.Update.tsol, 455
}
CALLX
.loc Elector.Update.tsol, 622
DUP
EQINT 0
PUXC S11, S-1
SETINDEX 5
POP S11
.loc Elector.Update.tsol, 623
PUSH S10
INDEX 5
NOT
PUXC S11, S-1
SETINDEX 6
POP S11
.loc Elector.Update.tsol, 624
PUSH S10
SETGLOB 11
.loc Elector.Update.tsol, 625
DUP
PUSHCONT {
	.loc Elector.Update.tsol, 627
	PUSHINT 4
	.loc Elector.Update.tsol, 409
	HEXDUMP
	BLKDROP 13
	.loc Elector.Update.tsol, 410
	FALSE
	.loc Elector.Update.tsol, 0
}
IFNOTJMP
.loc Elector.Update.tsol, 629
ROLL 10
FIRST
.loc Elector.Update.tsol, 94
PUSHINT 15
CONFIGPARAM
PUSHCONT {
	CTOS
	LDU 32
	LDU 32
	LDU 32
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
DROP
.loc Elector.Update.tsol, 0
BLKDROP2 1, 2
.loc Elector.Update.tsol, 634
NOW
ROT
ADD
ADDCONST -60
PUSH S3
MAX
.loc Elector.Update.tsol, 635
PUSHINT 16
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.Update.tsol, 636
CTOS
LDU 16
PLDU 16
NIP
.loc Elector.Update.tsol, 640
PUSH S9
ROLL 9
PUSH2 S7, S2
MIN
ROLL 8
PUSH2 S5, S7
ADD
PUSH S6
NEWC
STSLICECONST x12
STU 32
STU 32
STU 16
STU 16
STU 64
STDICT
.loc Elector.Update.tsol, 642
ENDC
.loc Elector.Update.tsol, 644
PUSHINT 0
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.Update.tsol, 645
CTOS
PLDU 256
.loc Elector.Update.tsol, 646
PUSH2 S1, S6
.loc Elector.Update.tsol, 134
ROT
PUSHINT -1
NEWC
STSLICECONST x9_
STI 8
STU 256
ENDC
CTOS
.loc Elector.Update.tsol, 135
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 12720910251328179000044872783962527403085238168343380
STUR 175
STU 64
STREF
ENDC
PUSHINT 1
SENDRAWMSG
.loc Elector.Update.tsol, 649
ROT
ROLL 4
ADD
PUSH S3
ADD
PUSHINT 0
BLKPUSH 2, 0
NEWDICT
PUSHINT 0
DUP
NEWDICT
TUPLE 7
SWAP
SETINDEX 0
.loc Elector.Update.tsol, 650
ROLL 3
SETINDEX 1
.loc Elector.Update.tsol, 651
SWAP
HASHCU
SETINDEX 2
.loc Elector.Update.tsol, 652
ROLL 4
SETINDEX 3
.loc Elector.Update.tsol, 653
ROLL 3
UFITS 120
SETINDEX 4
.loc Elector.Update.tsol, 654
GETGLOB 13
SWAP
XCHG S2, S3
CALLREF {
	UNTUPLE 7
	REVERSE 7, 0
	NEWC
	STU 32
	STU 32
	STU 256
	STDICT
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
}
ROTREV
PUSHINT 32
DICTUSETB
SETGLOB 13
.loc Elector.Update.tsol, 656
NEWDICT
.loc Elector.Update.tsol, 657
SETGLOB 19
.loc Elector.Update.tsol, 658
NEWDICT
.loc Elector.Update.tsol, 659
DUP
SETGLOB 20
.loc Elector.Update.tsol, 660
SETGLOB 21
.loc Elector.Update.tsol, 662
OVER
PUSHINT 16
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PAIR
}
IF
.loc Elector.Update.tsol, 663
PUSHINT 0
BLKPUSH 2, 0
.loc Elector.Update.tsol, 666
PUSHCONT {
	PUSH S3
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 667
	PUSH2 S3, S3
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 668
	LDU 8
	LDU 32
	LDU 256
	LDU 64
	PLDU 256
	TUPLE 5
	.loc Elector.Update.tsol, 669
	DUP
	FIRST
	NEQINT 83
	THROWIFNOT 131
	.loc Elector.Update.tsol, 670
	PUSH2 S2, S6
	LESS
	PUSHCONT {
		.loc Elector.Update.tsol, 671
		DUP
		INDEX 3
		PUSH S5
		ADD
		POP S5
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 673
		DUP
		INDEX 3
		PUSH S4
		ADD
		POP S4
	}
	IFELSE
	.loc Elector.Update.tsol, 675
	DROP
	OVER
	INC
	POP S2
	.loc Elector.Update.tsol, 676
	PUSH S6
	PUSHINT 16
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PAIR
	}
	IF
	POP S4
	.loc Elector.Update.tsol, 0
}
WHILE
.loc Elector.Update.tsol, 678
DROP
SWAP
SETGLOB 17
.loc Elector.Update.tsol, 679
SETGLOB 18
.loc Elector.Update.tsol, 681
BLKDROP 9
TRUE
.loc Elector.Update.tsol, 0

.globl	update_active_vset_id_fd8379e1_internal
.type	update_active_vset_id_fd8379e1_internal, @function
CALL $update_active_vset_id_fd8379e1_internal_macro$

.macro update_active_vset_id_fd8379e1_internal_macro
.loc Elector.Update.tsol, 684
PUSHINT 0
.loc Elector.Update.tsol, 685
PUSHINT 34
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.Update.tsol, 686
DUP
HASHCU
.loc Elector.Update.tsol, 687
DUP
GETGLOB 16
EQUAL
PUSHCONT {
	.loc Elector.Update.tsol, 689
	BLKDROP 3
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 691
GETGLOB 15
PUSHCONT {
	.loc Elector.Update.tsol, 693
	GETGLOB 15
	GETGLOB 13
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
	}
	.loc Elector.Update.tsol, 694
	DUP
	ISNULL
	PUSHCONT {
		.loc Elector.Update.tsol, 695
		BLKPUSH 2, 0
		ISNULL
		THROWIF 63
		.loc Elector.Update.tsol, 697
		DUP
		THIRD
		GETGLOB 16
		EQUAL
		THROWIFNOT 57
		.loc Elector.Update.tsol, 698
		NOW
		OVER
		SECOND
		ADD
		SETINDEX 0
		.loc Elector.Update.tsol, 699
		GETGLOB 15
		GETGLOB 13
		ROT
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETGLOB 13
		.loc Elector.Update.tsol, 0
	}
	IFNOT
	.loc Elector.Update.tsol, 0
	DROP
}
IF
.loc Elector.Update.tsol, 703
GETGLOB 13
PUSHINT 32
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
	PAIR
}
.loc Elector.Update.tsol, 704
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 705
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 706
	DUP
	THIRD
	PUSH S4
	EQUAL
	PUSHCONT {
		.loc Elector.Update.tsol, 708
		GETGLOB 14
		RSHIFT 3
		.loc Elector.Update.tsol, 709
		DUP
		UFITS 120
		GETGLOB 14
		SUBR
		SETGLOB 14
		.loc Elector.Update.tsol, 710
		UFITS 120
		XCPU S1, S0
		INDEX 5
		ROT
		ADD
		SETINDEX 5
		.loc Elector.Update.tsol, 711
		GETGLOB 13
		SWAP
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETGLOB 13
		.loc Elector.Update.tsol, 713
		RETALT
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 715
	DROP
	GETGLOB 13
	PUSHINT 32
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
		PAIR
	}
	NIP
	.loc Elector.Update.tsol, 0
}
WHILEBRK
.loc Elector.Update.tsol, 717
DUP
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 721
	PUSHINT 0
}
PUSHCONT {
	.loc Elector.Update.tsol, 718
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	UNPAIR
	DROP
	.loc Elector.Update.tsol, 719
}
IFELSE
SETGLOB 15
.loc Elector.Update.tsol, 723
DROP
SETGLOB 16
.loc Elector.Update.tsol, 724
DROP2
TRUE
.loc Elector.Update.tsol, 0

.globl	validator_set_installed_88ca450d_internal
.type	validator_set_installed_88ca450d_internal, @function
CALL $validator_set_installed_88ca450d_internal_macro$

.macro validator_set_installed_88ca450d_internal_macro
.loc Elector.Update.tsol, 728
GETGLOB 11
INDEX 6
PUSHCONT {
	.loc Elector.Update.tsol, 730
	FALSE
	.loc Elector.Update.tsol, 0
}
IFNOTJMP
.loc Elector.Update.tsol, 732
GETGLOB 11
FIRST
GETGLOB 13
PUSHINT 32
DICTUGET
NULLSWAPIFNOT
IFREF {
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
}
.loc Elector.Update.tsol, 733
DUP
ISNULL
PUSHCONT {
	.loc Elector.Update.tsol, 735
	DROP
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 737
DUP
ISNULL
THROWIF 63
.loc Elector.Update.tsol, 739
PUSHINT 34
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.Update.tsol, 740
PUSHINT 36
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.Update.tsol, 741
SWAP2
SWAP
HASHCU
PUSH S4
THIRD
EQUAL
AND
XCHG S2
HASHCU
ROLL 3
THIRD
EQUAL
AND
OR
PUSHCONT {
	.loc Elector.Update.tsol, 744
	FALSE
	SETGLOB 10
	.loc Elector.Update.tsol, 745
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	DUP
	TUPLE 7
	.loc Elector.Update.tsol, 746
	SETGLOB 11
	.loc Elector.Update.tsol, 747
	CALLREF {
		CALL $update_active_vset_id_fd8379e1_internal_macro$
	}
	DROP
	.loc Elector.Update.tsol, 748
	TRUE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 750
FALSE
.loc Elector.Update.tsol, 0

.globl	check_unfreeze_2f3bfb3c_internal
.type	check_unfreeze_2f3bfb3c_internal, @function
CALL $check_unfreeze_2f3bfb3c_internal_macro$

.macro check_unfreeze_2f3bfb3c_internal_macro
.loc Elector.Update.tsol, 754
GETGLOB 13
PUSHINT 32
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
	PAIR
}
.loc Elector.Update.tsol, 755
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 756
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 757
	FIRST
	NOW
	LEQ
	OVER
	GETGLOB 15
	NEQ
	AND
	PUSHCONT {
		.loc Elector.Update.tsol, 759
		CALLREF {
			CALL $unfreeze_all_ca0f9c0b_internal_macro$
		}
		UFITS 120
		GETGLOB 14
		ADD
		SETGLOB 14
		.loc Elector.Update.tsol, 761
		RETALT
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 763
	GETGLOB 13
	PUSHINT 32
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
		PAIR
	}
	NIP
	.loc Elector.Update.tsol, 0
}
WHILEBRK
DROP
.loc Elector.Update.tsol, 0

.globl	announce_new_elections_90433d78_internal
.type	announce_new_elections_90433d78_internal, @function
CALL $announce_new_elections_90433d78_internal_macro$

.macro announce_new_elections_90433d78_internal_macro
.loc Elector.Update.tsol, 768
PUSHINT 36
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
NIP
.loc Elector.Update.tsol, 769
PUSHCONT {
	.loc Elector.Update.tsol, 771
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 773
PUSHINT 1
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.Update.tsol, 774
CTOS
PLDU 256
.loc Elector.Update.tsol, 775
MYADDR
REWRITESTDADDR
.loc Elector.Update.tsol, 776
SWAP
NEQINT -1
XCHG S2
NEQ
OR
PUSHCONT {
	.loc Elector.Update.tsol, 778
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 780
PUSHINT 34
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.Update.tsol, 781
PUSHCONT {
	.loc Elector.Update.tsol, 782
	DROP
	FALSE
	.loc Elector.Update.tsol, 0
}
IFNOTJMP
.loc Elector.Update.tsol, 94
PUSHINT 15
CONFIGPARAM
PUSHCONT {
	CTOS
	LDU 32
	LDU 32
	LDU 32
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
DROP2
.loc Elector.Update.tsol, 96
BLKDROP2 1, 2
.loc Elector.Update.tsol, 785
ROT
CTOS
LDU 40
PLDU 32
NIP
.loc Elector.Update.tsol, 786
NOW
.loc Elector.Update.tsol, 787
XCPU S1, S3
SUB
.loc Elector.Update.tsol, 788
DUP2
LESS
PUSHCONT {
	.loc Elector.Update.tsol, 790
	BLKDROP 4
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 793
DUP2
SUB
LESSINT 60
PUSHCONT {
	.loc Elector.Update.tsol, 795
	DUP
	POP S2
	.loc Elector.Update.tsol, 0
}
IF
.loc Elector.Update.tsol, 798
DROP
PUSHINT 17
CONFIGPARAM
PUSHCONT {
	CTOS
	LDGRAMS
	LDGRAMS
	LDGRAMS
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
BLKDROP 4
.loc Elector.Update.tsol, 800
SWAP
ROLL 3
ADD
.loc Elector.Update.tsol, 802
DUP
ROLL 3
SUB
.loc Elector.Update.tsol, 803
ROT
UFITS 120
PUSHINT 0
NEWDICT
FALSE
DUP
TUPLE 7
.loc Elector.Update.tsol, 804
SETGLOB 11
.loc Elector.Update.tsol, 805
TRUE
SETGLOB 10
.loc Elector.Update.tsol, 806
TRUE
.loc Elector.Update.tsol, 0

.internal-alias :onTickTock, -2
.internal :onTickTock
PUSHINT -2
PUSH S2
CALLREF {
	CALL $c4_to_c7$
}
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
PUSHCONT {
	.loc Elector.Update.tsol, 811
	DROP
	FALSE ; decl return flag
	GETGLOB 10
	PUSHCONT {
		.loc Elector.Update.tsol, 813
		CALLREF {
			CALL $conduct_elections_6ec16465_internal_macro$
		}
		PUSHCONT {
			.loc Elector.Update.tsol, 815
			DROP
			PUSHINT 4
			.loc Elector.Update.tsol, 0
		}
		IFJMP
		.loc Elector.Update.tsol, 817
		CALLREF {
			CALL $validator_set_installed_88ca450d_internal_macro$
		}
		PUSHCONT {
			.loc Elector.Update.tsol, 819
			DROP
			PUSHINT 4
			.loc Elector.Update.tsol, 0
		}
		IFJMP
		.loc Elector.Update.tsol, 0
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 822
		CALLREF {
			CALL $announce_new_elections_90433d78_internal_macro$
		}
		PUSHCONT {
			.loc Elector.Update.tsol, 824
			DROP
			PUSHINT 4
			.loc Elector.Update.tsol, 0
		}
		IFJMP
		.loc Elector.Update.tsol, 0
	}
	IFELSE
	IFRET
	.loc Elector.Update.tsol, 827
	CALLREF {
		CALL $update_active_vset_id_fd8379e1_internal_macro$
	}
	IFRET
	.loc Elector.Update.tsol, 831
	CALLREF {
		CALL $check_unfreeze_2f3bfb3c_internal_macro$
	}
	.loc Elector.Update.tsol, 809
}
CALLX
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro report
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 874
OVER
PUSHCONT {
	LDU 256
	LDREF
	ENDS
	CTOS
	LDU 256
	LDU 256
}
PUSHCONT {
	LDU 256
	LDU 256
	LDU 256
	LDREF
	ENDS
	CTOS
}
IFELSE
LDU 256
LDU 8
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $report_bd32e8f1_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	report_bd32e8f1_internal
.type	report_bd32e8f1_internal, @function
CALL $report_bd32e8f1_internal_macro$

.macro report_bd32e8f1_internal_macro
.loc Elector.Update.tsol, 874
DEPTH
ADDCONST -5
PICK
EQINT -1
THROWIFNOT 71
.loc Elector.Update.tsol, 876
CALLREF {
	CALL $get_current_vset_cb181528_internal_macro$
}
DROP2
.loc Elector.Update.tsol, 877
DUP
CTOS
LDU 8
LDU 32
LDU 32
LDU 16
LDU 16
LDU 64
PLDDICT
TUPLE 7
.loc Elector.Update.tsol, 878
DUP
FIRST
EQINT 18
THROWIFNOT 131
.loc Elector.Update.tsol, 881
DUP
SECOND
NOW
LESS
NOW
PUSH S2
THIRD
LESS
AND
THROWIFNOT 139
.loc Elector.Update.tsol, 884
PUSH2 S5, S6
NEWC
STU 256
STU 256
.loc Elector.Update.tsol, 886
PUSH3 S3, S4, S5
NEWC
STU 256
STU 256
STU 8
.loc Elector.Update.tsol, 887
DUP
ENDC
CTOS
PUSH S2
ENDC
CTOS
PUSH S8
CHKSIGNS
THROWIFNOT 34
.loc Elector.Update.tsol, 890
ACCEPT
.loc Elector.Update.tsol, 893
PUSH S6
GETGLOB 19
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
NIP
NOT
PUSHINT 137
.loc Elector.Update.tsol, 868
SWAP
PUSHCONT {
	.loc Elector.Update.tsol, 869
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.Update.tsol, 870
	DUP
	PUSHINT 2
	MAX
	THROWANY
	.loc Elector.Update.tsol, 0
}
IFNOT
.loc Elector.Update.tsol, 0
DROP
.loc Elector.Update.tsol, 896
PUSH S5
GETGLOB 19
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
NIP
NOT
PUSHINT 138
.loc Elector.Update.tsol, 868
SWAP
PUSHCONT {
	.loc Elector.Update.tsol, 869
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.Update.tsol, 870
	DUP
	PUSHINT 2
	MAX
	THROWANY
	.loc Elector.Update.tsol, 0
}
IFNOT
.loc Elector.Update.tsol, 0
DROP
.loc Elector.Update.tsol, 899
PUSH S2
INDEX 6
PUSHINT 16
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PAIR
}
IF
.loc Elector.Update.tsol, 900
PUSHINT 0
DUP
.loc Elector.Update.tsol, 902
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 903
	PUSH2 S2, S2
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 904
	LDU 8
	LDU 32
	LDU 256
	LDU 64
	PLDU 256
	TUPLE 5
	.loc Elector.Update.tsol, 905
	DUP
	FIRST
	NEQINT 83
	THROWIFNOT 131
	.loc Elector.Update.tsol, 906
	DUP
	THIRD
	PUSH S12
	EQUAL
	PUSHCONT {
		.loc Elector.Update.tsol, 907
		INDEX 3
		POP S3
		.loc Elector.Update.tsol, 908
		DROP
		RETALT
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 910
	DROP
	OVER
	INC
	POP S2
	.loc Elector.Update.tsol, 911
	PUSH S6
	INDEX 6
	PUSHINT 16
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PAIR
	}
	IF
	POP S3
	.loc Elector.Update.tsol, 0
}
WHILEBRK
.loc Elector.Update.tsol, 913
OVER
GTINT 0
THROWIFNOT 135
.loc Elector.Update.tsol, 916
PUSH S5
INDEX 6
PUSHINT 16
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PAIR
}
IF
POP S3
.loc Elector.Update.tsol, 917
PUSHINT 0
DUP
.loc Elector.Update.tsol, 919
PUSHCONT {
	PUSH S4
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 920
	PUSH2 S4, S4
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.Update.tsol, 921
	LDU 8
	LDU 32
	LDU 256
	LDU 64
	PLDU 256
	TUPLE 5
	.loc Elector.Update.tsol, 922
	DUP
	FIRST
	NEQINT 83
	THROWIFNOT 131
	.loc Elector.Update.tsol, 923
	THIRD
	PUSH S12
	EQUAL
	PUSHCONT {
		.loc Elector.Update.tsol, 924
		DROP2
		TRUE
		.loc Elector.Update.tsol, 925
		RETALT
		.loc Elector.Update.tsol, 0
	}
	IFJMP
	.loc Elector.Update.tsol, 927
	PUSH S2
	INC
	POP S3
	.loc Elector.Update.tsol, 928
	PUSH S8
	INDEX 6
	PUSHINT 16
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PAIR
	}
	IF
	POP S5
	.loc Elector.Update.tsol, 0
}
WHILEBRK
.loc Elector.Update.tsol, 930
DUP
THROWIFNOT 133
.loc Elector.Update.tsol, 932
PUSHINT 16
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.Update.tsol, 933
DUP
CTOS
LDU 16
LDU 16
PLDU 16
BLKDROP2 2, 1
.loc Elector.Update.tsol, 934
PUSH2 S4, S9
INDEX 4
LESS
PUSHCONT {
	.loc Elector.Update.tsol, 935
	PUSH2 S11, S12
	GETGLOB 20
	PUSHPOW2 8
	DICTUGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	PUSHINT 8
	DICTUGET
IFREFELSEREF
{
		LDU 64
		LDDICT
		ENDS
		PAIR
}
{
		PUSHINT 0
		NEWDICT
		PAIR
}
	.loc Elector.Update.tsol, 936
	PUSH2 S14, S0
	SECOND
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	.loc Elector.Update.tsol, 938
	DUP
	ISNULL
	PUSHINT 140
	.loc Elector.Update.tsol, 868
	SWAP
	PUSHCONT {
		.loc Elector.Update.tsol, 869
		CALLREF {
			CALL $c7_to_c4$
		}
		COMMIT
		.loc Elector.Update.tsol, 870
		DUP
		PUSHINT 2
		MAX
		THROWANY
		.loc Elector.Update.tsol, 0
	}
	IFNOT
	.loc Elector.Update.tsol, 0
	DROP
	.loc Elector.Update.tsol, 940
	PUSH3 S7, S1, S1
	FIRST
	ROT
	ADD
	SETINDEX 0
	POP S2
	.loc Elector.Update.tsol, 941
	PUSH3 S7, S1, S1
	SECOND
	PUSH S18
	SWAP
	ROLL 3
	NEWC
	STU 64
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETINDEX 1
	POP S2
	.loc Elector.Update.tsol, 942
	PUSH2 S1, S14
	GETGLOB 20
	DUP2
	PUSHPOW2 8
	DICTUGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	PUSH S17
	SWAP
	ROLL 4
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STU 64
		STDICT
	}
	ROTREV
	PUSHINT 8
	DICTUSETB
	NEWC
	STDICT
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETGLOB 20
	.loc Elector.Update.tsol, 943
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.Update.tsol, 945
	OVER
	FIRST
	GETGLOB 17
	PUSHINT 2
	PUSHINT 3
	MULDIV
	GEQ
	PUSHCONT {
		.loc Elector.Update.tsol, 948
		PUSH S11
		INDEX 4
		PUSH S3
		GREATER
		THROWIFNOT 141
		.loc Elector.Update.tsol, 949
		PUSH S14
		GETGLOB 19
		NEWC
		STONE
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 19
		.loc Elector.Update.tsol, 950
		PUSH2 S14, S5
		.loc Elector.Update.tsol, 994
		CALLREF {
			CALL $get_current_vset_cb181528_internal_macro$
		}
		.loc Elector.Update.tsol, 995
		PUSH S2
		CTOS
		LDU 8
		LDU 32
		LDU 32
		LDU 16
		LDU 16
		LDU 64
		PLDDICT
		TUPLE 7
		.loc Elector.Update.tsol, 997
		PUSHINT 16
		CONFIGPARAM
		DUP
		PUSHCONT {
			PUSHREF {
			}
			SWAP
		}
		IFNOT
		DROP
		.loc Elector.Update.tsol, 998
		DUP
		CTOS
		LDU 16
		LDU 16
		PLDU 16
		BLKDROP2 2, 1
		.loc Elector.Update.tsol, 999
		PUSH S2
		INDEX 3
		OVER
		GREATER
		THROWIFNOT 141
		.loc Elector.Update.tsol, 1001
		FALSE
		DUP
		.loc Elector.Update.tsol, 1003
		PUSHCONT {
			.loc Elector.Update.tsol, 1005
			PUSH2 S8, S2
			LESS
			PUSHCONT {
				.loc Elector.Update.tsol, 1006
				PUSH S2
				DEC
				POP S3
				.loc Elector.Update.tsol, 1007
				PUSH S9
				GETGLOB 20
				CALLREF {
					CALL $update_reports_014af5da_internal_macro$
				}
				SETGLOB 20
			}
			PUSHCONT {
				.loc Elector.Update.tsol, 1009
				PUSH S9
				GETGLOB 21
				CALLREF {
					CALL $update_reports_014af5da_internal_macro$
				}
				SETGLOB 21
			}
			IFELSE
			.loc Elector.Update.tsol, 1012
			NEWDICT
			.loc Elector.Update.tsol, 1013
			PUSHINT 0
			BLKPUSH 2, 0
			.loc Elector.Update.tsol, 1015
			POP S10
			.loc Elector.Update.tsol, 1016
			PUSHINT 0
			POP S4
			.loc Elector.Update.tsol, 1017
			PUSH2 S8, S8
			PUSHINT 16
			DICTUMIN
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			PUSHCONT {
				PUSH S2
				ISNULL
				NOT
			}
			PUSHCONT {
				.loc Elector.Update.tsol, 1018
				DUP
				.loc Elector.Update.tsol, 1019
				LDU 8
				LDU 32
				LDU 256
				LDU 64
				PLDU 256
				TUPLE 5
				.loc Elector.Update.tsol, 1020
				DUP
				FIRST
				NEQINT 83
				THROWIFNOT 131
				.loc Elector.Update.tsol, 1021
				DUP
				THIRD
				GETGLOB 19
				PUSHPOW2 8
				DICTUGET
				NULLSWAPIFNOT
				NIP
				PUSHCONT {
					.loc Elector.Update.tsol, 1022
					PUSH3 S1, S8, S7
					PUSHINT 16
					DICTUSET
					POP S8
					.loc Elector.Update.tsol, 1023
					DUP
					INDEX 3
					PUSH S15
					ADD
					POP S15
					.loc Elector.Update.tsol, 1024
					PUSH2 S8, S12
					INDEX 4
					LESS
					PUSHCONT {
						.loc Elector.Update.tsol, 1025
						DUP
						INDEX 3
						PUSH S7
						ADD
						POP S7
					}
					PUSHCONT {
						.loc Elector.Update.tsol, 1027
						DUP
						INDEX 3
						PUSH S6
						ADD
						POP S6
					}
					IFELSE
					.loc Elector.Update.tsol, 1029
					PUSH S8
					INC
					POP S9
					.loc Elector.Update.tsol, 0
				}
				IFNOT
				.loc Elector.Update.tsol, 0
				DROP
				PUSH2 S2, S3
				PUSHINT 16
				DICTUGETNEXT
				PUSHCONT {
					DUP
					ROT
				}
				PUSHCONT {
					NULL
					BLKPUSH 2, 0
				}
				IFELSE
				BLKDROP2 3, 3
			}
			WHILE
			BLKDROP 4
			.loc Elector.Update.tsol, 1032
			PUSH2 S3, S5
			GEQ
			THROWIFNOT 141
			.loc Elector.Update.tsol, 1033
			OVER
			SETGLOB 17
			.loc Elector.Update.tsol, 1034
			DUP
			SETGLOB 18
			.loc Elector.Update.tsol, 1036
			PUSHINT 0
			POP S4
			.loc Elector.Update.tsol, 1037
			GETGLOB 20
			.loc Elector.Update.tsol, 1038
			GETGLOB 17
			PUSHINT 2
			PUSHINT 3
			MULDIV
			.loc Elector.Update.tsol, 1040
			PUSH2 S4, S4
			PUSHINT 16
			DICTUMIN
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			PUSHCONT {
				PUSH S2
				ISNULL
				NOT
			}
			PUSHCONT {
				PUSHCONT {
					.loc Elector.Update.tsol, 1041
					LDU 8
					LDU 32
					LDU 256
					LDU 64
					LDU 256
					ROLLREV 5
					TUPLE 5
					.loc Elector.Update.tsol, 1042
					DUP
					FIRST
					NEQINT 83
					THROWIFNOT 131
					.loc Elector.Update.tsol, 1043
					PUSH2 S10, S12
					EQUAL
					PUSHCONT {
						.loc Elector.Update.tsol, 1044
						GETGLOB 18
						PUSHINT 1
						PUSHINT 3
						MULDIV
						POP S6
						.loc Elector.Update.tsol, 1046
						GETGLOB 21
						POP S7
						.loc Elector.Update.tsol, 0
					}
					IF
					.loc Elector.Update.tsol, 1048
					DUP
					THIRD
					PUSH S7
					PUSHPOW2 8
					DICTUGET
					PUSHCONT {
						PLDDICT
					}
					PUSHCONT {
						NEWDICT
					}
					IFELSE
					SINGLE
					.loc Elector.Update.tsol, 1049
					DUP
					ISNULL
					PUSHCONT {
						.loc Elector.Update.tsol, 1050
						BLKPUSH 2, 0
						ISNULL
						THROWIF 63
						UNSINGLE
						DUP
						PUSHINT 8
						DICTUMIN
						PUSHCONT {
							NULL
							BLKPUSH 2, 0
						}
IFREFELSE {
							DUP
							ROT
							LDU 64
							LDDICT
							ENDS
							PAIR
}
						PUSHCONT {
							PUSH S2
							ISNULL
							NOT
						}
						PUSHCONT {
							.loc Elector.Update.tsol, 1052
							DUP
							FIRST
							PUSH S11
							GEQ
							PUSHCONT {
								.loc Elector.Update.tsol, 1053
								GETGLOB 19
								PUSH S6
								THIRD
								SWAP
								NEWC
								STONE
								ROTREV
								PUSHPOW2 8
								DICTUSETB
								SETGLOB 19
								.loc Elector.Update.tsol, 1054
								TRUE
								POP S17
								.loc Elector.Update.tsol, 1055
								PUSH S5
								THIRD
								POP S25
								.loc Elector.Update.tsol, 1056
								PUSH S15
								POP S24
								.loc Elector.Update.tsol, 1057
								PUSH S14
								POP S21
								.loc Elector.Update.tsol, 1058
								RETALT
								.loc Elector.Update.tsol, 0
							}
							IFJMP
							.loc Elector.Update.tsol, 0
							PUSH2 S2, S3
							PUSHINT 8
							DICTUGETNEXT
							PUSHCONT {
								NULL
								BLKPUSH 2, 0
							}
IFREFELSE {
								DUP
								ROT
								LDU 64
								LDDICT
								ENDS
								PAIR
}
							BLKDROP2 3, 3
						}
						WHILEBRK
						BLKDROP 4
						.loc Elector.Update.tsol, 0
					}
					IFNOT
					.loc Elector.Update.tsol, 1062
					DROP2
					PUSH S10
					IFRET
					.loc Elector.Update.tsol, 1065
					PUSH S9
					INC
					POP S10
					.loc Elector.Update.tsol, 0
				}
				CALLX
				PUSH2 S2, S3
				PUSHINT 16
				DICTUGETNEXT
				PUSHCONT {
					DUP
					ROT
				}
				PUSHCONT {
					NULL
					BLKPUSH 2, 0
				}
				IFELSE
				BLKDROP2 3, 3
			}
			WHILE
			BLKDROP 8
			.loc Elector.Update.tsol, 1067
			POP S6
			.loc Elector.Update.tsol, 0
			OVER
			NOT
		}
		UNTIL
		.loc Elector.Update.tsol, 1070
		PUSHINT 0
		BLKPUSH 5, 0
		NEWDICT
		TUPLE 7
		.loc Elector.Update.tsol, 1071
		PUSHINT 18
		SETINDEX 0
		.loc Elector.Update.tsol, 1072
		NOW
		ADDCONST 60
		SETINDEX 1
		.loc Elector.Update.tsol, 1073
		PUSH S5
		THIRD
		SETINDEX 2
		.loc Elector.Update.tsol, 1074
		ROLL 7
		SETINDEX 5
		.loc Elector.Update.tsol, 1075
		OVER
		SETINDEX 3
		.loc Elector.Update.tsol, 1076
		SWAP
		ROLL 5
		INDEX 4
		MIN
		SETINDEX 4
		.loc Elector.Update.tsol, 1077
		ROLL 4
		SETINDEX 6
		.loc Elector.Update.tsol, 1080
		NEWC
		SWAP
		UNTUPLE 7
		REVERSE 8, 0
		STU 8
		STU 32
		STU 32
		STU 16
		STU 16
		STU 64
		STDICT
		.loc Elector.Update.tsol, 1081
		ENDC
		.loc Elector.Update.tsol, 1083
		GETGLOB 15
		GETGLOB 13
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 32
			LDU 32
			LDU 256
			LDDICT
			LDVARUINT16
			LDVARUINT16
			LDDICT
			ENDS
			TUPLE 7
		}
		.loc Elector.Update.tsol, 1084
		DUP
		ISNULL
		THROWIF 136
		.loc Elector.Update.tsol, 1085
		DUP
		ISNULL
		THROWIF 63
		.loc Elector.Update.tsol, 1087
		OVER
		HASHCU
		.loc Elector.Update.tsol, 1088
		DUP
		SETGLOB 16
		.loc Elector.Update.tsol, 1089
		SETINDEX 2
		.loc Elector.Update.tsol, 1090
		PUSH2 S7, S0
		INDEX 3
		PUSHPOW2 8
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 256
			LDU 64
			LDVARUINT16
			LDI 1
			ENDS
			TUPLE 4
		}
		.loc Elector.Update.tsol, 1091
		DUP
		ISNULL
		PUSHCONT {
			.loc Elector.Update.tsol, 1092
			BLKPUSH 2, 0
			ISNULL
			THROWIF 63
			.loc Elector.Update.tsol, 1093
			TRUE
			SETINDEX 3
			.loc Elector.Update.tsol, 1094
			PUSH3 S0, S2, S2
			INDEX 3
			PUXC S12, S-1
			ROLL 3
			CALLREF {
				UNTUPLE 4
				REVERSE 4, 0
				NEWC
				STU 256
				STU 64
				SWAP
				STVARUINT16
				STI 1
			}
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			SETINDEX 3
			POP S3
			.loc Elector.Update.tsol, 1095
			DUP
			THIRD
			PUSH2 S3, S3
			INDEX 5
			ROT
			ADD
			SETINDEX 5
			POP S3
			.loc Elector.Update.tsol, 1096
			THIRD
			PUSH2 S2, S2
			INDEX 4
			ROT
			SUB
			SETINDEX 4
			POP S2
			.loc Elector.Update.tsol, 0
		}
		IFNOT
		.loc Elector.Update.tsol, 1098
		DROP
		GETGLOB 15
		GETGLOB 13
		ROT
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETGLOB 13
		.loc Elector.Update.tsol, 1100
		PUSHINT 0
		CONFIGPARAM
		DUP
		PUSHCONT {
			PUSHREF {
			}
			SWAP
		}
		IFNOT
		DROP
		.loc Elector.Update.tsol, 1101
		CTOS
		PLDU 256
		PUSHINT -1
		NEWC
		STSLICECONST x9_
		STI 8
		STU 256
		ENDC
		CTOS
		.loc Elector.Update.tsol, 1102
		GETGLOB 15
		SWAP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 12720910251328179000044872783962527403085238168343381
		STUR 175
		STU 64
		STREF
		ENDC
		PUSHINT 1
		SENDRAWMSG
		.loc Elector.Update.tsol, 0
		BLKDROP 6
	}
	IF
}
PUSHCONT {
	.loc Elector.Update.tsol, 953
	PUSH2 S11, S12
	GETGLOB 21
	PUSHPOW2 8
	DICTUGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	PUSHINT 8
	DICTUGET
IFREFELSEREF
{
		LDU 64
		LDDICT
		ENDS
		PAIR
}
{
		PUSHINT 0
		NEWDICT
		PAIR
}
	.loc Elector.Update.tsol, 954
	PUSH2 S14, S0
	SECOND
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	.loc Elector.Update.tsol, 956
	DUP
	ISNULL
	PUSHINT 140
	.loc Elector.Update.tsol, 868
	SWAP
	PUSHCONT {
		.loc Elector.Update.tsol, 869
		CALLREF {
			CALL $c7_to_c4$
		}
		COMMIT
		.loc Elector.Update.tsol, 870
		DUP
		PUSHINT 2
		MAX
		THROWANY
		.loc Elector.Update.tsol, 0
	}
	IFNOT
	.loc Elector.Update.tsol, 0
	DROP
	.loc Elector.Update.tsol, 958
	PUSH3 S7, S1, S1
	FIRST
	ROT
	ADD
	SETINDEX 0
	POP S2
	.loc Elector.Update.tsol, 959
	PUSH3 S7, S1, S1
	SECOND
	PUSH S18
	SWAP
	ROLL 3
	NEWC
	STU 64
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETINDEX 1
	POP S2
	.loc Elector.Update.tsol, 960
	PUSH2 S1, S14
	GETGLOB 21
	DUP2
	PUSHPOW2 8
	DICTUGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	PUSH S17
	SWAP
	ROLL 4
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STU 64
		STDICT
	}
	ROTREV
	PUSHINT 8
	DICTUSETB
	NEWC
	STDICT
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETGLOB 21
	.loc Elector.Update.tsol, 961
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.Update.tsol, 963
	OVER
	FIRST
	GETGLOB 18
	PUSHINT 1
	PUSHINT 3
	MULDIV
	GEQ
	PUSHCONT {
		.loc Elector.Update.tsol, 966
		PUSH S11
		INDEX 3
		PUSH S3
		GREATER
		THROWIFNOT 141
		.loc Elector.Update.tsol, 967
		PUSH S14
		GETGLOB 19
		NEWC
		STONE
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 19
		.loc Elector.Update.tsol, 968
		PUSH2 S14, S5
		.loc Elector.Update.tsol, 994
		CALLREF {
			CALL $get_current_vset_cb181528_internal_macro$
		}
		.loc Elector.Update.tsol, 995
		PUSH S2
		CTOS
		LDU 8
		LDU 32
		LDU 32
		LDU 16
		LDU 16
		LDU 64
		PLDDICT
		TUPLE 7
		.loc Elector.Update.tsol, 997
		PUSHINT 16
		CONFIGPARAM
		DUP
		PUSHCONT {
			PUSHREF {
			}
			SWAP
		}
		IFNOT
		DROP
		.loc Elector.Update.tsol, 998
		DUP
		CTOS
		LDU 16
		LDU 16
		PLDU 16
		BLKDROP2 2, 1
		.loc Elector.Update.tsol, 999
		PUSH S2
		INDEX 3
		OVER
		GREATER
		THROWIFNOT 141
		.loc Elector.Update.tsol, 1001
		FALSE
		DUP
		.loc Elector.Update.tsol, 1003
		PUSHCONT {
			.loc Elector.Update.tsol, 1005
			PUSH2 S8, S2
			LESS
			PUSHCONT {
				.loc Elector.Update.tsol, 1006
				PUSH S2
				DEC
				POP S3
				.loc Elector.Update.tsol, 1007
				PUSH S9
				GETGLOB 20
				CALLREF {
					CALL $update_reports_014af5da_internal_macro$
				}
				SETGLOB 20
			}
			PUSHCONT {
				.loc Elector.Update.tsol, 1009
				PUSH S9
				GETGLOB 21
				CALLREF {
					CALL $update_reports_014af5da_internal_macro$
				}
				SETGLOB 21
			}
			IFELSE
			.loc Elector.Update.tsol, 1012
			NEWDICT
			.loc Elector.Update.tsol, 1013
			PUSHINT 0
			BLKPUSH 2, 0
			.loc Elector.Update.tsol, 1015
			POP S10
			.loc Elector.Update.tsol, 1016
			PUSHINT 0
			POP S4
			.loc Elector.Update.tsol, 1017
			PUSH2 S8, S8
			PUSHINT 16
			DICTUMIN
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			PUSHCONT {
				PUSH S2
				ISNULL
				NOT
			}
			PUSHCONT {
				.loc Elector.Update.tsol, 1018
				DUP
				.loc Elector.Update.tsol, 1019
				LDU 8
				LDU 32
				LDU 256
				LDU 64
				PLDU 256
				TUPLE 5
				.loc Elector.Update.tsol, 1020
				DUP
				FIRST
				NEQINT 83
				THROWIFNOT 131
				.loc Elector.Update.tsol, 1021
				DUP
				THIRD
				GETGLOB 19
				PUSHPOW2 8
				DICTUGET
				NULLSWAPIFNOT
				NIP
				PUSHCONT {
					.loc Elector.Update.tsol, 1022
					PUSH3 S1, S8, S7
					PUSHINT 16
					DICTUSET
					POP S8
					.loc Elector.Update.tsol, 1023
					DUP
					INDEX 3
					PUSH S15
					ADD
					POP S15
					.loc Elector.Update.tsol, 1024
					PUSH2 S8, S12
					INDEX 4
					LESS
					PUSHCONT {
						.loc Elector.Update.tsol, 1025
						DUP
						INDEX 3
						PUSH S7
						ADD
						POP S7
					}
					PUSHCONT {
						.loc Elector.Update.tsol, 1027
						DUP
						INDEX 3
						PUSH S6
						ADD
						POP S6
					}
					IFELSE
					.loc Elector.Update.tsol, 1029
					PUSH S8
					INC
					POP S9
					.loc Elector.Update.tsol, 0
				}
				IFNOT
				.loc Elector.Update.tsol, 0
				DROP
				PUSH2 S2, S3
				PUSHINT 16
				DICTUGETNEXT
				PUSHCONT {
					DUP
					ROT
				}
				PUSHCONT {
					NULL
					BLKPUSH 2, 0
				}
				IFELSE
				BLKDROP2 3, 3
			}
			WHILE
			BLKDROP 4
			.loc Elector.Update.tsol, 1032
			PUSH2 S3, S5
			GEQ
			THROWIFNOT 141
			.loc Elector.Update.tsol, 1033
			OVER
			SETGLOB 17
			.loc Elector.Update.tsol, 1034
			DUP
			SETGLOB 18
			.loc Elector.Update.tsol, 1036
			PUSHINT 0
			POP S4
			.loc Elector.Update.tsol, 1037
			GETGLOB 20
			.loc Elector.Update.tsol, 1038
			GETGLOB 17
			PUSHINT 2
			PUSHINT 3
			MULDIV
			.loc Elector.Update.tsol, 1040
			PUSH2 S4, S4
			PUSHINT 16
			DICTUMIN
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			PUSHCONT {
				PUSH S2
				ISNULL
				NOT
			}
			PUSHCONT {
				PUSHCONT {
					.loc Elector.Update.tsol, 1041
					LDU 8
					LDU 32
					LDU 256
					LDU 64
					LDU 256
					ROLLREV 5
					TUPLE 5
					.loc Elector.Update.tsol, 1042
					DUP
					FIRST
					NEQINT 83
					THROWIFNOT 131
					.loc Elector.Update.tsol, 1043
					PUSH2 S10, S12
					EQUAL
					PUSHCONT {
						.loc Elector.Update.tsol, 1044
						GETGLOB 18
						PUSHINT 1
						PUSHINT 3
						MULDIV
						POP S6
						.loc Elector.Update.tsol, 1046
						GETGLOB 21
						POP S7
						.loc Elector.Update.tsol, 0
					}
					IF
					.loc Elector.Update.tsol, 1048
					DUP
					THIRD
					PUSH S7
					PUSHPOW2 8
					DICTUGET
					PUSHCONT {
						PLDDICT
					}
					PUSHCONT {
						NEWDICT
					}
					IFELSE
					SINGLE
					.loc Elector.Update.tsol, 1049
					DUP
					ISNULL
					PUSHCONT {
						.loc Elector.Update.tsol, 1050
						BLKPUSH 2, 0
						ISNULL
						THROWIF 63
						UNSINGLE
						DUP
						PUSHINT 8
						DICTUMIN
						PUSHCONT {
							NULL
							BLKPUSH 2, 0
						}
IFREFELSE {
							DUP
							ROT
							LDU 64
							LDDICT
							ENDS
							PAIR
}
						PUSHCONT {
							PUSH S2
							ISNULL
							NOT
						}
						PUSHCONT {
							.loc Elector.Update.tsol, 1052
							DUP
							FIRST
							PUSH S11
							GEQ
							PUSHCONT {
								.loc Elector.Update.tsol, 1053
								GETGLOB 19
								PUSH S6
								THIRD
								SWAP
								NEWC
								STONE
								ROTREV
								PUSHPOW2 8
								DICTUSETB
								SETGLOB 19
								.loc Elector.Update.tsol, 1054
								TRUE
								POP S17
								.loc Elector.Update.tsol, 1055
								PUSH S5
								THIRD
								POP S25
								.loc Elector.Update.tsol, 1056
								PUSH S15
								POP S24
								.loc Elector.Update.tsol, 1057
								PUSH S14
								POP S21
								.loc Elector.Update.tsol, 1058
								RETALT
								.loc Elector.Update.tsol, 0
							}
							IFJMP
							.loc Elector.Update.tsol, 0
							PUSH2 S2, S3
							PUSHINT 8
							DICTUGETNEXT
							PUSHCONT {
								NULL
								BLKPUSH 2, 0
							}
IFREFELSE {
								DUP
								ROT
								LDU 64
								LDDICT
								ENDS
								PAIR
}
							BLKDROP2 3, 3
						}
						WHILEBRK
						BLKDROP 4
						.loc Elector.Update.tsol, 0
					}
					IFNOT
					.loc Elector.Update.tsol, 1062
					DROP2
					PUSH S10
					IFRET
					.loc Elector.Update.tsol, 1065
					PUSH S9
					INC
					POP S10
					.loc Elector.Update.tsol, 0
				}
				CALLX
				PUSH2 S2, S3
				PUSHINT 16
				DICTUGETNEXT
				PUSHCONT {
					DUP
					ROT
				}
				PUSHCONT {
					NULL
					BLKPUSH 2, 0
				}
				IFELSE
				BLKDROP2 3, 3
			}
			WHILE
			BLKDROP 8
			.loc Elector.Update.tsol, 1067
			POP S6
			.loc Elector.Update.tsol, 0
			OVER
			NOT
		}
		UNTIL
		.loc Elector.Update.tsol, 1070
		PUSHINT 0
		BLKPUSH 5, 0
		NEWDICT
		TUPLE 7
		.loc Elector.Update.tsol, 1071
		PUSHINT 18
		SETINDEX 0
		.loc Elector.Update.tsol, 1072
		NOW
		ADDCONST 60
		SETINDEX 1
		.loc Elector.Update.tsol, 1073
		PUSH S5
		THIRD
		SETINDEX 2
		.loc Elector.Update.tsol, 1074
		ROLL 7
		SETINDEX 5
		.loc Elector.Update.tsol, 1075
		OVER
		SETINDEX 3
		.loc Elector.Update.tsol, 1076
		SWAP
		ROLL 5
		INDEX 4
		MIN
		SETINDEX 4
		.loc Elector.Update.tsol, 1077
		ROLL 4
		SETINDEX 6
		.loc Elector.Update.tsol, 1080
		NEWC
		SWAP
		UNTUPLE 7
		REVERSE 8, 0
		STU 8
		STU 32
		STU 32
		STU 16
		STU 16
		STU 64
		STDICT
		.loc Elector.Update.tsol, 1081
		ENDC
		.loc Elector.Update.tsol, 1083
		GETGLOB 15
		GETGLOB 13
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 32
			LDU 32
			LDU 256
			LDDICT
			LDVARUINT16
			LDVARUINT16
			LDDICT
			ENDS
			TUPLE 7
		}
		.loc Elector.Update.tsol, 1084
		DUP
		ISNULL
		THROWIF 136
		.loc Elector.Update.tsol, 1085
		DUP
		ISNULL
		THROWIF 63
		.loc Elector.Update.tsol, 1087
		OVER
		HASHCU
		.loc Elector.Update.tsol, 1088
		DUP
		SETGLOB 16
		.loc Elector.Update.tsol, 1089
		SETINDEX 2
		.loc Elector.Update.tsol, 1090
		PUSH2 S7, S0
		INDEX 3
		PUSHPOW2 8
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 256
			LDU 64
			LDVARUINT16
			LDI 1
			ENDS
			TUPLE 4
		}
		.loc Elector.Update.tsol, 1091
		DUP
		ISNULL
		PUSHCONT {
			.loc Elector.Update.tsol, 1092
			BLKPUSH 2, 0
			ISNULL
			THROWIF 63
			.loc Elector.Update.tsol, 1093
			TRUE
			SETINDEX 3
			.loc Elector.Update.tsol, 1094
			PUSH3 S0, S2, S2
			INDEX 3
			PUXC S12, S-1
			ROLL 3
			CALLREF {
				UNTUPLE 4
				REVERSE 4, 0
				NEWC
				STU 256
				STU 64
				SWAP
				STVARUINT16
				STI 1
			}
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			SETINDEX 3
			POP S3
			.loc Elector.Update.tsol, 1095
			DUP
			THIRD
			PUSH2 S3, S3
			INDEX 5
			ROT
			ADD
			SETINDEX 5
			POP S3
			.loc Elector.Update.tsol, 1096
			THIRD
			PUSH2 S2, S2
			INDEX 4
			ROT
			SUB
			SETINDEX 4
			POP S2
			.loc Elector.Update.tsol, 0
		}
		IFNOT
		.loc Elector.Update.tsol, 1098
		DROP
		GETGLOB 15
		GETGLOB 13
		ROT
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETGLOB 13
		.loc Elector.Update.tsol, 1100
		PUSHINT 0
		CONFIGPARAM
		DUP
		PUSHCONT {
			PUSHREF {
			}
			SWAP
		}
		IFNOT
		DROP
		.loc Elector.Update.tsol, 1101
		CTOS
		PLDU 256
		PUSHINT -1
		NEWC
		STSLICECONST x9_
		STI 8
		STU 256
		ENDC
		CTOS
		.loc Elector.Update.tsol, 1102
		GETGLOB 15
		SWAP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 12720910251328179000044872783962527403085238168343381
		STUR 175
		STU 64
		STREF
		ENDC
		PUSHINT 1
		SENDRAWMSG
		.loc Elector.Update.tsol, 0
		BLKDROP 6
	}
	IF
}
IFELSE
.loc Elector.Update.tsol, 0
PUSHINT 18
DROPX

.globl	update_reports_014af5da_internal
.type	update_reports_014af5da_internal, @function
CALL $update_reports_014af5da_internal_macro$

.macro update_reports_014af5da_internal_macro
.loc Elector.Update.tsol, 975
PUSH3 S0, S0, S0
.loc Elector.Update.tsol, 976
PUSHPOW2 8
DICTUMIN
PUSHCONT {
	DUP
	ROT
	PLDDICT
}
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.Update.tsol, 977
	BLKPUSH 2, 0
	PUSHINT 8
	DICTUMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		ROT
		LDU 64
		LDDICT
		ENDS
		PAIR
}
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.Update.tsol, 978
		DUP
		SECOND
		DUP
		PUSHPOW2 8
		DICTUMIN
		PUSHCONT {
			DUP
			ROT
			PLDU 64
		}
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
		IFELSE
		PUSHCONT {
			PUSH S2
			ISNULL
			NOT
		}
		PUSHCONT {
			.loc Elector.Update.tsol, 979
			PUSH2 S14, S1
			EQUAL
			PUSHCONT {
				.loc Elector.Update.tsol, 980
				PUSH3 S0, S4, S4
				FIRST
				ROT
				SUB
				SETINDEX 0
				POP S5
				.loc Elector.Update.tsol, 981
				PUSH2 S4, S4
				SECOND
				PUSH S16
				SWAP
				PUSHPOW2 8
				DICTUDEL
				DROP
				SETINDEX 1
				POP S5
				.loc Elector.Update.tsol, 982
				PUSH3 S5, S8, S4
				.loc Elector.Update.tsol, 983
				CALLREF {
					UNPAIR
					SWAP
					NEWC
					STU 64
					STDICT
				}
				ROTREV
				PUSHINT 8
				DICTUSETB
				.loc Elector.Update.tsol, 984
				PUSH2 S10, S13
				ROT
				NEWC
				STDICT
				ROTREV
				PUSHPOW2 8
				DICTUSETB
				POP S13
				.loc Elector.Update.tsol, 985
				RETALT
				.loc Elector.Update.tsol, 0
			}
			IFJMP
			.loc Elector.Update.tsol, 0
			PUSH2 S2, S3
			PUSHPOW2 8
			DICTUGETNEXT
			PUSHCONT {
				DUP
				ROT
				PLDU 64
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			BLKDROP2 3, 3
		}
		WHILEBRK
		BLKDROP 4
		.loc Elector.Update.tsol, 0
		PUSH2 S2, S3
		PUSHINT 8
		DICTUGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			ROT
			LDU 64
			LDDICT
			ENDS
			PAIR
}
		BLKDROP2 3, 3
	}
	WHILE
	BLKDROP 4
	.loc Elector.Update.tsol, 0
	PUSH2 S2, S3
	PUSHPOW2 8
	DICTUGETNEXT
	PUSHCONT {
		DUP
		ROT
		PLDDICT
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILE
BLKDROP 4
.loc Elector.Update.tsol, 990
BLKDROP2 2, 1
.loc Elector.Update.tsol, 0

.macro get
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1106
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $get_6d4ce63c_internal_macro$
}
PUSH S7
PUSHCONT {
	PUSH S9
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	REVERSE 8, 0
	NEWC
	STSLICECONST x9510bf28
	STI 1
	SWAP
	UNTUPLE 7
	REVERSE 8, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STDICT
	STDICT
	STU 128
	STU 32
	STU 256
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	BLKDROP 7
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_6d4ce63c_internal
.type	get_6d4ce63c_internal, @function
CALL $get_6d4ce63c_internal_macro$

.macro get_6d4ce63c_internal_macro
.loc Elector.Update.tsol, 1117
GETGLOB 10
.loc Elector.Update.tsol, 1118
GETGLOB 11
.loc Elector.Update.tsol, 1119
GETGLOB 12
.loc Elector.Update.tsol, 1120
GETGLOB 13
.loc Elector.Update.tsol, 1121
GETGLOB 14
.loc Elector.Update.tsol, 1122
GETGLOB 15
.loc Elector.Update.tsol, 1123
GETGLOB 16
.loc Elector.Update.tsol, 0

.macro get_banned
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1126
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $get_banned_46830d60_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2209532425
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_banned_46830d60_internal
.type	get_banned_46830d60_internal, @function
CALL $get_banned_46830d60_internal_macro$

.macro get_banned_46830d60_internal_macro
.loc Elector.Update.tsol, 1127
GETGLOB 19
.loc Elector.Update.tsol, 0

.macro get_buckets
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1130
LDU 256
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $get_buckets_2f917ad4_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3222122547
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_buckets_2f917ad4_internal
.type	get_buckets_2f917ad4_internal, @function
CALL $get_buckets_2f917ad4_internal_macro$

.macro get_buckets_2f917ad4_internal_macro
.loc Elector.Update.tsol, 1131
GETGLOB 20
PUSHPOW2 8
DICTUGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
.loc Elector.Update.tsol, 0

.macro get_buckets_workchain
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1134
LDU 256
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $get_buckets_workchain_88da170e_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3736707536
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_buckets_workchain_88da170e_internal
.type	get_buckets_workchain_88da170e_internal, @function
CALL $get_buckets_workchain_88da170e_internal_macro$

.macro get_buckets_workchain_88da170e_internal_macro
.loc Elector.Update.tsol, 1135
GETGLOB 21
PUSHPOW2 8
DICTUGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
.loc Elector.Update.tsol, 0

.macro active_election_id
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1139
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $active_election_id_4f7a6855_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2637787518
	STUR 130
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	active_election_id_4f7a6855_internal
.type	active_election_id_4f7a6855_internal, @function
CALL $active_election_id_4f7a6855_internal_macro$

.macro active_election_id_4f7a6855_internal_macro
.loc Elector.Update.tsol, 1140
GETGLOB 10
ZEROSWAPIFNOT
PUSHCONT {
	GETGLOB 11
	FIRST
}
IF
.loc Elector.Update.tsol, 0

.macro get_version
DROP
GETGLOB 6
THROWIFNOT 76
.loc Elector.Update.tsol, 1144
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $get_version_90179465_internal_macro$
}
PUSH S2
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 98
	STZEROES
	REVERSE 2, 1
	STSLICECONST xabc534f5
	STU 32
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP2
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_version_90179465_internal
.type	get_version_90179465_internal, @function
CALL $get_version_90179465_internal_macro$

.macro get_version_90179465_internal_macro
.loc Elector.Update.tsol, 1145
PUSHINT 0
PUSHINT 1
.loc Elector.Update.tsol, 0

.macro compute_returned_stake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1149
LDU 256
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $compute_returned_stake_a73d54da_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3757192781
	STUR 130
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	compute_returned_stake_a73d54da_internal
.type	compute_returned_stake_a73d54da_internal, @function
CALL $compute_returned_stake_a73d54da_internal_macro$

.macro compute_returned_stake_a73d54da_internal_macro
.loc Elector.Update.tsol, 1150
GETGLOB 12
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
PUSHCONT {
	LDVARUINT16
	DROP
}
IF
.loc Elector.Update.tsol, 1151
DUP
ISNULL
ZEROSWAPIF
PUSHCONT {
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
}
IFNOT
NIP
.loc Elector.Update.tsol, 0

.macro on_bounce_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1155
PLDU 32
.loc Elector.Update.tsol, 1156
PUSHINT 4184830756
EQUAL
PUSHCONT {
	.loc Elector.Update.tsol, 1157
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.Update.tsol, 1158
	SWAP
	EQINT -1
	THROWIFNOT 223
	.loc Elector.Update.tsol, 1159
	DEPTH
	ADDCONST -2
	PICK
	UFITS 120
	GETGLOB 12
	NEWC
	ROT
	STVARUINT16
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETGLOB 12
	.loc Elector.Update.tsol, 0
}
IF
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro receive_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1166
CALLREF {
	CALL $process_simple_transfer_c2745595_internal_macro$
}
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro fallback_macro
GETGLOB 6
THROWIFNOT 76
.loc Elector.Update.tsol, 1170
DEPTH
ADDCONST -4
PICK
.loc Elector.Update.tsol, 1171
DUP
LDU 32
POP S2
.loc Elector.Update.tsol, 1172
SWAP
PLDU 64
.loc Elector.Update.tsol, 1173
GETGLOB 9
PUSHPOW2DEC 32
SWAP2
SWAP
PUSHINT 0
PUSHINT 64
CALLREF {
	CALL $send_message_back_30631536_internal_macro$
}
.loc Elector.Update.tsol, 0
DUP
IFREF {
	CALL $upd_only_time_in_c4$
}

.internal-alias onCodeUpgrade_e5436b53_internal, 2
.internal onCodeUpgrade_e5436b53_internal
.loc Elector.Update.tsol, 1177
PUSH S2
PUSHINT 3460525924
PUSH S2
PUSHINT 1313042276
PUSHINT 0
PUSHINT 64
CALLREF {
	CALL $send_message_back_30631536_internal_macro$
}
.loc Elector.Update.tsol, 1178
GETGLOB 2
ISNULL
IFNOTREF {
	CALL $c7_to_c4$
}
THROW 0
.loc Elector.Update.tsol, 0

.globl	_upgrade_code_5dac022d_internal
.type	_upgrade_code_5dac022d_internal, @function
CALL $_upgrade_code_5dac022d_internal_macro$

.macro _upgrade_code_5dac022d_internal_macro
.loc Elector.Update.tsol, 1181
PUSHINT 0
DUP
.loc Elector.Update.tsol, 1182
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.Update.tsol, 1183
PUSHCONT {
	.loc Elector.Update.tsol, 1185
	BLKDROP 5
	FALSE
	.loc Elector.Update.tsol, 0
}
IFNOTJMP
.loc Elector.Update.tsol, 1187
GETGLOB 9
.loc Elector.Update.tsol, 1188
SWAP
CTOS
PLDU 256
.loc Elector.Update.tsol, 1189
GETGLOB 9
REWRITESTDADDR
.loc Elector.Update.tsol, 1190
SWAP
NEQINT -1
XCHG S2
NEQ
OR
PUSHCONT {
	.loc Elector.Update.tsol, 1192
	BLKDROP 5
	FALSE
	.loc Elector.Update.tsol, 0
}
IFJMP
.loc Elector.Update.tsol, 1194
ACCEPT
.loc Elector.Update.tsol, 1195
PUSH S3
SETCODE
.loc Elector.Update.tsol, 1196
ROLL 3
CTOS
DUP
PUSHSLICE x8adb35
SDEQ
PUSHCONT {
	PLDREFIDX 1
	CTOS
}
IF
PLDREF
CTOS
BLESS
POP C3
.loc Elector.Update.tsol, 1197
ROT
CTOS
ROLL 3
PUSHINT $onCodeUpgrade_e5436b53_internal$
PUSH C3
EXECUTE
.loc Elector.Update.tsol, 0

.macro upgrade_code
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.Update.tsol, 1200
LDU 64
LDREF
LDREF
ENDS
.loc Elector.Update.tsol, 0
CALLREF {
	CALL $upgrade_code_c518c75b_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	upgrade_code_c518c75b_internal
.type	upgrade_code_c518c75b_internal, @function
CALL $upgrade_code_c518c75b_internal_macro$

.macro upgrade_code_c518c75b_internal_macro
.loc Elector.Update.tsol, 1200
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.Update.tsol, 1202
PUSH S2
ROTREV
CALLREF {
	CALL $_upgrade_code_5dac022d_internal_macro$
}
.loc Elector.Update.tsol, 1203
GETGLOB 9
SWAP
PUSHINT 3460525924
PUSHPOW2DEC 32
CONDSEL
ROT
PUSHINT 1313042276
PUSHINT 0
PUSHINT 64
CALLREF {
	CALL $send_message_back_30631536_internal_macro$
}
.loc Elector.Update.tsol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDI 1
LDU 32
LDU 32
LDVARUINT16
LDVARUINT16
LDDICT
LDI 1
LDI 1
ROLLREV 7
TUPLE 7
SWAP
LDDICT
LDDICT
LDVARUINT16
LDU 32
LDREF
ENDS
CTOS
LDU 256
LDU 64
LDU 64
LDDICT
LDDICT
LDDICT
ENDS
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 0
	DUP
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	DUP
	TUPLE 7
	NEWDICT
	DUP
	PUSHINT 0
	BLKPUSH 4, 0
	NEWDICT
	BLKPUSH 2, 0
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 21
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STI 1
SWAP
UNTUPLE 7
REVERSE 8, 0
STU 32
STU 32
SWAP
STVARUINT16
SWAP
STVARUINT16
STDICT
STI 1
STI 1
STDICT
STDICT
SWAP
STVARUINT16
STU 32
ROLLREV 6
NEWC
STU 256
STU 64
STU 64
STDICT
STDICT
STDICT
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFJMPREF {
	OVER
	LDSLICE 32
	NIP
	CALL $on_bounce_macro$
}
OVER
SEMPTY ; isEmpty
DUP
PUSHCONT {
	DROP
	OVER
	LDUQ 32  ; [funcId] body' ok
	PUSHCONT {
		DROP
		CALLREF {
			CALL $fallback_macro$
		}
		THROW 0
	}
	IFNOT
	OVER
	EQINT 0 ; funcId body' isZero
	DUP
	PUSHCONT {
		BLKDROP2 2, 1
	}
	IF
}
IFNOT
IFJMPREF {
	CALL $receive_macro$
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
DROP2
CALLREF {
	CALL $fallback_macro$
}

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX
	DUP
	MYADDR
	NEWC
	STSLICE
	STSLICE
	ENDC
	HASHCU
	ROT
	GETGLOB 2
	CHKSIGNU
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
DROP2
CALLREF {
	CALL $fallback_macro$
}

.macro public_function_selector
DUP
PUSHINT 1756716863
LEQ
IFJMPREF {
	DUP
	PUSHINT 490303870
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 62048777
		EQUAL
		IFJMPREF {
			CALL $get_banned$
		}
		DUP
		PUSHINT 353419048
		EQUAL
		IFJMPREF {
			CALL $get$
		}
		DUP
		PUSHINT 369714999
		EQUAL
		IFJMPREF {
			CALL $take_change$
		}
		DUP
		PUSHINT 490303870
		EQUAL
		IFJMPREF {
			CALL $active_election_id$
		}
	}
	DUP
	PUSHINT 1197831204
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 644434731
		EQUAL
		IFJMPREF {
			CALL $report$
		}
		DUP
		PUSHINT 734344437
		EQUAL
		IFJMPREF {
			CALL $get_version$
		}
		DUP
		PUSHINT 1074638899
		EQUAL
		IFJMPREF {
			CALL $get_buckets$
		}
		DUP
		PUSHINT 1197831204
		EQUAL
		IFJMPREF {
			CALL $recover_stake$
		}
	}
	DUP
	PUSHINT 1313042276
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1197831205
		EQUAL
		IFJMPREF {
			CALL $recover_stake_gracefully$
		}
		DUP
		PUSHINT 1197831206
		EQUAL
		IFJMPREF {
			CALL $get_elect_at$
		}
		DUP
		PUSHINT 1198678382
		EQUAL
		IFJMPREF {
			CALL $grant$
		}
		DUP
		PUSHINT 1313042276
		EQUAL
		IFJMPREF {
			CALL $upgrade_code$
		}
	}
	DUP
	PUSHINT 1756716863
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1316189259
		EQUAL
		IFJMPREF {
			CALL $process_new_stake$
		}
		DUP
		PUSHINT 1589223888
		EQUAL
		IFJMPREF {
			CALL $get_buckets_workchain$
		}
		DUP
		PUSHINT 1609709133
		EQUAL
		IFJMPREF {
			CALL $compute_returned_stake$
		}
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
	}
}
DUP
PUSHINT 4000730992
LEQ
IFJMPREF {
	DUP
	PUSHINT 4000730955
	EQUAL
	IFJMPREF {
		CALL $config_set_confirmed_ok$
	}
	DUP
	PUSHINT 4000730956
	EQUAL
	IFJMPREF {
		CALL $config_slash_confirmed_ok$
	}
	DUP
	PUSHINT 4000730991
	EQUAL
	IFJMPREF {
		CALL $config_set_confirmed_err$
	}
	DUP
	PUSHINT 4000730992
	EQUAL
	IFJMPREF {
		CALL $config_slash_confirmed_err$
	}
}


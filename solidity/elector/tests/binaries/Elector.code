.version sol 0.66.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc Elector.sol, 88
PUSHINT 0
SETGLOB 2
.loc Elector.sol, 89
FALSE
SETGLOB 10
.loc Elector.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	get_current_vset_cb181528_internal
.type	get_current_vset_cb181528_internal, @function
CALL $get_current_vset_cb181528_internal_macro$

.macro get_current_vset_cb181528_internal_macro
.loc Elector.sol, 101
PUSHINT 35
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.sol, 102
PUSHCONT {
	.loc Elector.sol, 103
	PUSHINT 34
	CONFIGPARAM
	DUP
	PUSHCONT {
		PUSHREF {
		}
		SWAP
	}
	IFNOT
	DROP
	NIP
	.loc Elector.sol, 0
}
IFNOT
.loc Elector.sol, 105
DUP
CTOS
LDU 8
LDU 32
LDU 32
LDU 16
LDU 16
LDU 64
PLDDICT
TUPLE 7
.loc Elector.sol, 106
DUP
FIRST
EQINT 18
THROWIFNOT 40
.loc Elector.sol, 107
TUCK
INDEX 5
ROT
INDEX 6
.loc Elector.sol, 0

.globl	send_message_back_30631536_internal
.type	send_message_back_30631536_internal, @function
CALL $send_message_back_30631536_internal_macro$

.macro send_message_back_30631536_internal_macro
.loc Elector.sol, 112
NEWC
.loc Elector.sol, 113
STSLICECONST x62_
.loc Elector.sol, 114
ROLL 6
STSLICER
.loc Elector.sol, 115
ROT
STGRAMS
.loc Elector.sol, 116
PUSHINT 107
STZEROES
.loc Elector.sol, 117
ROLL 4
STUR 32
.loc Elector.sol, 118
ROLL 3
STUR 64
.loc Elector.sol, 119
ROT
STUR 32
.loc Elector.sol, 120
ENDC
SWAP
SENDRAWMSG
.loc Elector.sol, 0

.globl	return_stake_fe624e47_internal
.type	return_stake_fe624e47_internal, @function
CALL $return_stake_fe624e47_internal_macro$

.macro return_stake_fe624e47_internal_macro
.loc Elector.sol, 124
SWAP
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 4000269644
STUR 143
STU 64
STU 32
ENDC
PUSHINT 64
SENDRAWMSG
.loc Elector.sol, 0

.globl	send_confirmation_1aa717cd_internal
.type	send_confirmation_1aa717cd_internal, @function
CALL $send_confirmation_1aa717cd_internal_macro$

.macro send_confirmation_1aa717cd_internal_macro
.loc Elector.sol, 128
SWAP
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 12669519700468838679097577345632051794083291476543564
STUR 175
STU 64
STU 32
ENDC
PUSHINT 2
SENDRAWMSG
.loc Elector.sol, 0

.macro process_new_stake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 142
OVER
PUSHCONT {
	LDU 64
	LDU 256
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 64
	LDU 256
}
IFELSE
LDU 32
LDU 32
LDU 256
LDREF
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $process_new_stake_eb5fd500_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	process_new_stake_eb5fd500_internal
.type	process_new_stake_eb5fd500_internal, @function
CALL $process_new_stake_eb5fd500_internal_macro$

.macro process_new_stake_eb5fd500_internal_macro
.loc Elector.sol, 142
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.sol, 146
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.sol, 147
	GETGLOB 10
	NOT
	ROT
	NEQINT -1
	OR
	PUSHCONT {
		.loc Elector.sol, 150
		ROLL 6
		PUSHINT 0
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 153
	PUSH3 S2, S0, S3
	PUSH S7
	NEWC
	STSLICECONST x654c5074
	STU 32
	STU 32
	STU 256
	STU 256
	.loc Elector.sol, 154
	ENDC
	CTOS
	ROT
	CTOS
	PUSH S6
	CHKSIGNS
	PUSHCONT {
		.loc Elector.sol, 156
		ROLL 5
		PUSHINT 1
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 5
		.loc Elector.sol, 0
	}
	IFNOTJMP
	.loc Elector.sol, 158
	PUSH S2
	PUSHPOW2 16
	LESS
	PUSHCONT {
		.loc Elector.sol, 160
		ROLL 5
		PUSHINT 6
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 5
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 162
	GETGLOB 11
	INDEX 3
	.loc Elector.sol, 164
	DEPTH
	ADDCONST -2
	PICK
	PUSHINT 1000000000
	SUB
	.loc Elector.sol, 165
	DUP
	LSHIFT 12
	PUSH S2
	LESS
	PUSHCONT {
		.loc Elector.sol, 167
		ROLL 7
		PUSHINT 2
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 170
	DUP
	UFITS 128
	PUSH S2
	ADD
	POP S2
	.loc Elector.sol, 171
	ROLL 5
	GETGLOB 11
	FIRST
	NEQ
	PUSHCONT {
		.loc Elector.sol, 173
		ROLL 6
		PUSHINT 3
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 175
	GETGLOB 11
	INDEX 6
	PUSHCONT {
		.loc Elector.sol, 177
		ROLL 6
		PUSHINT 0
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 179
	PUSH S5
	GETGLOB 11
	INDEX 4
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDVARUINT16
		LDU 32
		LDU 32
		LDU 256
		LDU 256
		ENDS
		TUPLE 5
	}
	.loc Elector.sol, 180
	FALSE
	.loc Elector.sol, 181
	OVER
	ISNULL
	PUSHCONT {
		.loc Elector.sol, 183
		PUSH2 S1, S1
		ISNULL
		THROWIF 63
		.loc Elector.sol, 185
		DUP
		FIRST
		PUSH S4
		ADD
		POP S4
		.loc Elector.sol, 186
		PUXC S5, S-1
		INDEX 3
		NEQ
		NIP
		.loc Elector.sol, 0
	}
	IFNOT
	.loc Elector.sol, 188
	PUSHCONT {
		.loc Elector.sol, 190
		ROLL 7
		PUSHINT 4
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 192
	DROP
	DUP
	GETGLOB 11
	THIRD
	LESS
	PUSHCONT {
		.loc Elector.sol, 194
		ROLL 6
		PUSHINT 5
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 196
	PUSHINT 17
	CONFIGPARAM
	PUSHCONT {
		CTOS
		LDGRAMS
		LDGRAMS
		LDGRAMS
		LDU 32
		ENDS
		TRUE
	}
	PUSHCONT {
		PUSHINT 0
		BLKPUSH 4, 0
	}
	IFELSE
	BLKDROP 3
	NIP
	.loc Elector.sol, 197
	PUXC S1, S-1
	GREATER
	PUSHCONT {
		.loc Elector.sol, 199
		ROLL 6
		PUSHINT 7
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 201
	DUP
	THROWIFNOT 44
	.loc Elector.sol, 202
	ACCEPT
	.loc Elector.sol, 204
	UFITS 120
	NOW
	BLKSWAP 3, 3
	SWAP
	TUPLE 5
	GETGLOB 11
	DUP
	INDEX 4
	ROLL 4
	SWAP
	ROLL 3
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		SWAP
		STVARUINT16
		STU 32
		STU 32
		STU 256
		STU 256
	}
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETINDEX 4
	DUP
	SETGLOB 11
	.loc Elector.sol, 206
	FALSE
	SETINDEX 5
	DUP
	SETGLOB 11
	.loc Elector.sol, 207
	FALSE
	SETINDEX 6
	SETGLOB 11
	.loc Elector.sol, 208
	UFITS 120
	GETGLOB 11
	SWAP
	SETINDEX 3
	SETGLOB 11
	.loc Elector.sol, 210
	DUP
	PUSHCONT {
		.loc Elector.sol, 211
		PUSHINT 0
		CALLREF {
			CALL $send_confirmation_1aa717cd_internal_macro$
		}
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 0
	DROP
	.loc Elector.sol, 142
}
CALLX
.loc Elector.sol, 0

.globl	unfreeze_without_bonuses_a32f4563_internal
.type	unfreeze_without_bonuses_a32f4563_internal, @function
CALL $unfreeze_without_bonuses_a32f4563_internal_macro$

.macro unfreeze_without_bonuses_a32f4563_internal_macro
.loc Elector.sol, 218
PUSHINT 0
PUSH2 S0, S2
.loc Elector.sol, 220
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 256
	LDU 64
	LDVARUINT16
	LDI 1
	ENDS
	TUPLE 4
	PAIR
}
.loc Elector.sol, 221
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.sol, 222
	DUP
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.sol, 223
	DUP
	INDEX 3
	PUSHCONT {
		.loc Elector.sol, 224
		DUP
		THIRD
		PUSH S3
		ADD
		POP S3
	}
	PUSHCONT {
		.loc Elector.sol, 226
		DUP
		FIRST
		OVER
		THIRD
		.loc Elector.sol, 138
		UFITS 120
		SWAP
		GETGLOB 12
		DUP2
		PUSHPOW2 8
		DICTUGET
		ZEROSWAPIFNOT
		PUSHCONT {
			LDVARUINT16
			DROP
		}
		IF
		ROLL 3
		ADD
		NEWC
		SWAP
		STVARUINT16
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 12
		.loc Elector.sol, 227
		DUP
		THIRD
		PUSH S4
		ADD
		POP S4
	}
	IFELSE
	.loc Elector.sol, 229
	DROP
	PUSH S4
	PUSHPOW2 8
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
		PAIR
	}
	.loc Elector.sol, 0
}
WHILE
.loc Elector.sol, 231
DROP
XCHG S2
EQUAL
THROWIFNOT 59
.loc Elector.sol, 232
NIP
.loc Elector.sol, 0

.globl	unfreeze_with_bonuses_a6255a42_internal
.type	unfreeze_with_bonuses_a6255a42_internal, @function
CALL $unfreeze_with_bonuses_a6255a42_internal_macro$

.macro unfreeze_with_bonuses_a6255a42_internal_macro
.loc Elector.sol, 238
PUSHINT 0
BLKPUSH 2, 0
.loc Elector.sol, 241
PUSH S5
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 256
	LDU 64
	LDVARUINT16
	LDI 1
	ENDS
	TUPLE 4
	PAIR
}
.loc Elector.sol, 242
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.sol, 243
	DUP
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.sol, 244
	DUP
	INDEX 3
	PUSHCONT {
		.loc Elector.sol, 245
		DUP
		THIRD
		PUSH S4
		ADD
		POP S4
	}
	PUSHCONT {
		.loc Elector.sol, 247
		PUSH2 S5, S0
		THIRD
		PUSH S8
		MULDIVMOD
		DROP
		.loc Elector.sol, 248
		PUSH2 S3, S0
		ADD
		POP S4
		.loc Elector.sol, 249
		OVER
		FIRST
		PUSH S2
		THIRD
		ROT
		ADD
		.loc Elector.sol, 138
		UFITS 120
		SWAP
		GETGLOB 12
		DUP2
		PUSHPOW2 8
		DICTUGET
		ZEROSWAPIFNOT
		PUSHCONT {
			LDVARUINT16
			DROP
		}
		IF
		ROLL 3
		ADD
		NEWC
		SWAP
		STVARUINT16
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 12
		.loc Elector.sol, 250
		DUP
		THIRD
		PUSH S5
		ADD
		POP S5
	}
	IFELSE
	.loc Elector.sol, 252
	DROP
	PUSH S6
	PUSHPOW2 8
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
		PAIR
	}
	.loc Elector.sol, 0
}
WHILE
.loc Elector.sol, 254
DROP
ROT
ROLL 4
EQUAL
PUSH2 S1, S3
LEQ
AND
THROWIFNOT 59
.loc Elector.sol, 255
XCHG S2
ADD
SUBR
NIP
.loc Elector.sol, 0

.globl	stakes_sum_8b3419f4_internal
.type	stakes_sum_8b3419f4_internal, @function
CALL $stakes_sum_8b3419f4_internal_macro$

.macro stakes_sum_8b3419f4_internal_macro
.loc Elector.sol, 259
PUSHINT 0
.loc Elector.sol, 260
OVER
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 256
	LDU 64
	LDVARUINT16
	LDI 1
	ENDS
	TUPLE 4
	PAIR
}
.loc Elector.sol, 261
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.sol, 262
	DUP
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.sol, 263
	THIRD
	PUSH S2
	ADD
	POP S2
	.loc Elector.sol, 264
	PUSH S2
	PUSHPOW2 8
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
		PAIR
	}
	.loc Elector.sol, 0
}
WHILE
.loc Elector.sol, 266
DROP
NIP
.loc Elector.sol, 0

.globl	unfreeze_all_ca0f9c0b_internal
.type	unfreeze_all_ca0f9c0b_internal, @function
CALL $unfreeze_all_ca0f9c0b_internal_macro$

.macro unfreeze_all_ca0f9c0b_internal_macro
.loc Elector.sol, 270
DUP
GETGLOB 13
PUSHINT 32
DICTUGET
NULLSWAPIFNOT
IFREF {
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
}
.loc Elector.sol, 271
DUP
ISNULL
PUSHCONT {
	.loc Elector.sol, 272
	DROP2
	PUSHINT 0
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 274
SWAP
GETGLOB 13
PUSHINT 32
DICTUDEL
DROP
SETGLOB 13
.loc Elector.sol, 275
DUP
ISNULL
THROWIF 63
.loc Elector.sol, 276
DUP
INDEX 4
.loc Elector.sol, 278
OVER
INDEX 5
GTINT 0
PUSHCONT {
	.loc Elector.sol, 279
	OVER
	INDEX 3
	XCHG S2
	INDEX 5
	CALLREF {
		CALL $unfreeze_with_bonuses_a6255a42_internal_macro$
	}
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 281
SWAP
INDEX 3
SWAP
CALLREF {
	CALL $unfreeze_without_bonuses_a32f4563_internal_macro$
}
.loc Elector.sol, 0

.globl	config_set_confirmed_e5f6419e_internal
.type	config_set_confirmed_e5f6419e_internal, @function
CALL $config_set_confirmed_e5f6419e_internal_macro$

.macro config_set_confirmed_e5f6419e_internal_macro
.loc Elector.sol, 285
GETGLOB 9
REWRITESTDADDR
.loc Elector.sol, 286
PUSHINT 0
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.sol, 287
CTOS
PLDU 256
.loc Elector.sol, 288
ROT
NEQINT -1
ROTREV
NEQ
GETGLOB 10
NOT
OR
OR
PUSHCONT {
	.loc Elector.sol, 291
	DROP2
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 293
GETGLOB 11
FIRST
ROT
NEQ
GETGLOB 11
INDEX 6
NOT
OR
PUSHCONT {
	.loc Elector.sol, 295
	DROP
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 297
ACCEPT
.loc Elector.sol, 298
PUSHCONT {
	.loc Elector.sol, 300
	GETGLOB 11
	FIRST
	CALLREF {
		CALL $unfreeze_all_ca0f9c0b_internal_macro$
	}
	UFITS 120
	GETGLOB 14
	ADD
	SETGLOB 14
	.loc Elector.sol, 301
	FALSE
	SETGLOB 10
	.loc Elector.sol, 0
}
IFNOT
.loc Elector.sol, 0

.macro config_set_confirmed_ok
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 306
LDU 64
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $config_set_confirmed_ok_4768af83_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_set_confirmed_ok_4768af83_internal
.type	config_set_confirmed_ok_4768af83_internal, @function
CALL $config_set_confirmed_ok_4768af83_internal_macro$

.macro config_set_confirmed_ok_4768af83_internal_macro
.loc Elector.sol, 306
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.sol, 308
TRUE
CALLREF {
	CALL $config_set_confirmed_e5f6419e_internal_macro$
}
.loc Elector.sol, 0

.macro config_set_confirmed_err
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 311
LDU 64
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $config_set_confirmed_err_40609b18_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_set_confirmed_err_40609b18_internal
.type	config_set_confirmed_err_40609b18_internal, @function
CALL $config_set_confirmed_err_40609b18_internal_macro$

.macro config_set_confirmed_err_40609b18_internal_macro
.loc Elector.sol, 311
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.sol, 313
FALSE
CALLREF {
	CALL $config_set_confirmed_e5f6419e_internal_macro$
}
.loc Elector.sol, 0

.macro config_slash_confirmed_ok
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 316
LDU 64
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $config_slash_confirmed_ok_19ef6a25_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_slash_confirmed_ok_19ef6a25_internal
.type	config_slash_confirmed_ok_19ef6a25_internal, @function
CALL $config_slash_confirmed_ok_19ef6a25_internal_macro$

.macro config_slash_confirmed_ok_19ef6a25_internal_macro
.loc Elector.sol, 316
DROP
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.sol, 0

.macro config_slash_confirmed_err
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 320
LDU 64
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $config_slash_confirmed_err_3407cd03_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_slash_confirmed_err_3407cd03_internal
.type	config_slash_confirmed_err_3407cd03_internal, @function
CALL $config_slash_confirmed_err_3407cd03_internal_macro$

.macro config_slash_confirmed_err_3407cd03_internal_macro
.loc Elector.sol, 320
DROP
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.sol, 0

.macro grant
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 324
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $grant_30c3eaa8_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	grant_30c3eaa8_internal
.type	grant_30c3eaa8_internal, @function
CALL $grant_30c3eaa8_internal_macro$

.macro grant_30c3eaa8_internal_macro
.loc Elector.sol, 324
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.sol, 325
DEPTH
ADDCONST -2
PICK
UFITS 120
GETGLOB 14
ADD
SETGLOB 14
.loc Elector.sol, 0

.macro take_change
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 328
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $take_change_670f0dd2_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	take_change_670f0dd2_internal
.type	take_change_670f0dd2_internal, @function
CALL $take_change_670f0dd2_internal_macro$

.macro take_change_670f0dd2_internal_macro
.loc Elector.sol, 328
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.sol, 0

.globl	process_simple_transfer_c2745595_internal
.type	process_simple_transfer_c2745595_internal, @function
CALL $process_simple_transfer_c2745595_internal_macro$

.macro process_simple_transfer_c2745595_internal_macro
.loc Elector.sol, 332
GETGLOB 9
REWRITESTDADDR
.loc Elector.sol, 333
NEQINT 0
SWAP
NEQINT -1
GETGLOB 15
EQINT 0
OR
OR
PUSHCONT {
	.loc Elector.sol, 336
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 340
GETGLOB 15
GETGLOB 13
PUSHINT 32
DICTUGET
NULLSWAPIFNOT
IFREF {
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
}
.loc Elector.sol, 341
DUP
ISNULL
PUSHCONT {
	.loc Elector.sol, 343
	DEPTH
	ADDCONST -2
	PICK
	UFITS 120
	GETGLOB 14
	ADD
	SETGLOB 14
}
PUSHCONT {
	.loc Elector.sol, 345
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	.loc Elector.sol, 347
	DEPTH
	ADDCONST -2
	PICK
	UFITS 120
	XCPU S1, S0
	INDEX 5
	ROT
	ADD
	SETINDEX 5
	.loc Elector.sol, 348
	GETGLOB 15
	GETGLOB 13
	ROT
	CALLREF {
		UNTUPLE 7
		REVERSE 7, 0
		NEWC
		STU 32
		STU 32
		STU 256
		STDICT
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
	}
	ROTREV
	PUSHINT 32
	DICTUSETB
	SETGLOB 13
}
IFELSE
.loc Elector.sol, 0
DROP

.macro recover_stake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 352
LDU 64
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $recover_stake_c7b13017_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	recover_stake_c7b13017_internal
.type	recover_stake_c7b13017_internal, @function
CALL $recover_stake_c7b13017_internal_macro$

.macro recover_stake_c7b13017_internal_macro
.loc Elector.sol, 352
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.sol, 354
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.sol, 355
	SWAP
	NEQINT -1
	PUSHCONT {
		.loc Elector.sol, 357
		GETGLOB 9
		PUSHINT 4294967294
		ROLL 3
		PUSHINT 1197831204
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.sol, 358
		DROP
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 361
	DUP
	GETGLOB 12
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		LDVARUINT16
		DROP
	}
	IF
	.loc Elector.sol, 362
	DUP
	ISNULL
	PUSHCONT {
		.loc Elector.sol, 364
		GETGLOB 9
		PUSHINT 4294967294
		ROLL 4
		PUSHINT 1197831204
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.sol, 365
		DROP2
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 367
	SWAP
	GETGLOB 12
	PUSHPOW2 8
	DICTUDEL
	DROP
	SETGLOB 12
	.loc Elector.sol, 369
	DUP
	ISNULL
	THROWIF 63
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 4184830756
	STUR 139
	STU 64
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.sol, 352
}
CALLX
.loc Elector.sol, 0

.macro recover_stake_gracefully
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 372
LDU 64
LDU 32
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $recover_stake_gracefully_d474eed0_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	recover_stake_gracefully_d474eed0_internal
.type	recover_stake_gracefully_d474eed0_internal, @function
CALL $recover_stake_gracefully_d474eed0_internal_macro$

.macro recover_stake_gracefully_d474eed0_internal_macro
.loc Elector.sol, 372
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.sol, 374
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.sol, 375
	SWAP
	NEQINT -1
	PUSHCONT {
		.loc Elector.sol, 377
		GETGLOB 9
		PUSHINT 4294967294
		ROLL 4
		PUSHINT 1197831205
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.sol, 378
		DROP2
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 380
	DUP
	GETGLOB 12
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		LDVARUINT16
		DROP
	}
	IF
	.loc Elector.sol, 381
	DUP
	ISNULL
	PUSHCONT {
		.loc Elector.sol, 382
		ROT
		GETGLOB 13
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 32
			LDU 32
			LDU 256
			LDDICT
			LDVARUINT16
			LDVARUINT16
			LDDICT
			ENDS
			TUPLE 7
		}
		.loc Elector.sol, 383
		DUP
		ISNULL
		PUSHCONT {
			.loc Elector.sol, 384
			GETGLOB 9
			PUSHINT 4294967294
			ROLL 5
			PUSHINT 1197831205
			PUSHINT 0
			PUSHINT 64
			CALLREF {
				CALL $send_message_back_30631536_internal_macro$
			}
			.loc Elector.sol, 385
			BLKDROP 3
			.loc Elector.sol, 0
		}
		IFJMP
		.loc Elector.sol, 387
		DUP
		ISNULL
		THROWIF 63
		.loc Elector.sol, 388
		GETGLOB 9
		PUSHINT 4294967293
		ROLL 5
		ROLL 3
		FIRST
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.sol, 389
		DROP2
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 391
	SWAP
	GETGLOB 12
	PUSHPOW2 8
	DICTUDEL
	DROP
	SETGLOB 12
	.loc Elector.sol, 393
	XCHG S1, S2
	DUP
	ISNULL
	THROWIF 63
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 4184830756
	STUR 139
	STU 64
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.sol, 0
	DROP
	.loc Elector.sol, 372
}
CALLX
.loc Elector.sol, 0

.macro get_elect_at
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 396
LDU 64
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $get_elect_at_662e4963_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	get_elect_at_662e4963_internal
.type	get_elect_at_662e4963_internal, @function
CALL $get_elect_at_662e4963_internal_macro$

.macro get_elect_at_662e4963_internal_macro
.loc Elector.sol, 396
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.sol, 398
	GETGLOB 9
	REWRITESTDADDR
	DROP
	.loc Elector.sol, 399
	NEQINT -1
	PUSHCONT {
		.loc Elector.sol, 401
		GETGLOB 9
		PUSHINT 4294967292
		ROT
		PUSHINT 1197831206
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 404
	GETGLOB 11
	FIRST
	GETGLOB 10
	ROT
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 4163016210
	STUR 143
	STU 64
	STI 1
	STU 32
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.sol, 396
}
CALLX
.loc Elector.sol, 0

.globl	conduct_elections_6ec16465_internal
.type	conduct_elections_6ec16465_internal, @function
CALL $conduct_elections_6ec16465_internal_macro$

.macro conduct_elections_6ec16465_internal_macro
.loc Elector.sol, 592
PUSHINT 0
.loc Elector.sol, 593
GETGLOB 11
.loc Elector.sol, 594
NOW
OVER
SECOND
LESS
PUSHCONT {
	.loc Elector.sol, 596
	DROP2
	FALSE
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 598
PUSHINT 0
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
NIP
.loc Elector.sol, 599
DUP
PUSHCONT {
	.loc Elector.sol, 601
	PUSHINT 1
	.loc Elector.sol, 408
	HEXDUMP
	BLKDROP 4
	.loc Elector.sol, 409
	FALSE
	.loc Elector.sol, 0
}
IFNOTJMP
.loc Elector.sol, 603
PUSHINT 17
CONFIGPARAM
PUSHCONT {
	CTOS
	LDGRAMS
	LDGRAMS
	LDGRAMS
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
DROP
.loc Elector.sol, 605
PUSH S5
INDEX 3
PUSH S2
LESS
PUSHCONT {
	.loc Elector.sol, 607
	PUSHINT 2
	.loc Elector.sol, 408
	HEXDUMP
	BLKDROP 8
	.loc Elector.sol, 409
	FALSE
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 609
PUSH S5
INDEX 5
PUSHCONT {
	.loc Elector.sol, 611
	PUSHINT 3
	.loc Elector.sol, 408
	HEXDUMP
	BLKDROP 8
	.loc Elector.sol, 409
	FALSE
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 613
PUSH S5
INDEX 6
PUSHCONT {
	.loc Elector.sol, 615
	BLKDROP 7
	FALSE
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 617
BLKPUSH 4, 3
PUSHCONT {
	NEWDICT
	PUSHINT 0
	NEWDICT
	PUSHINT 0
	DUP
	.loc Elector.sol, 457
	PUSHINT 16
	CONFIGPARAM
	DUP
	PUSHCONT {
		PUSHREF {
		}
		SWAP
	}
	IFNOT
	DROP
	.loc Elector.sol, 458
	DUP
	CTOS
	LDU 16
	LDU 16
	PLDU 16
	NIP
	.loc Elector.sol, 459
	PUSHINT 1
	MAX
	.loc Elector.sol, 460
	PUSHINT 0
	.loc Elector.sol, 461
	NEWDICT
	.loc Elector.sol, 462
	GETGLOB 11
	INDEX 4
	.loc Elector.sol, 463
	BLKPUSH 2, 0
	PUSHPOW2 8
	DICTUMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		ROT
		LDVARUINT16
		LDU 32
		LDU 32
		LDU 256
		LDU 256
		ENDS
		TUPLE 5
}
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.sol, 464
		UNTUPLE 5
		.loc Elector.sol, 465
		ROT
		PUSH S19
		MIN
		ROTREV
		TRIPLE
		PUSH S7
		SWAP2
		FITS 32
		NEGATE
		ROLL 4
		TRIPLE
		CALLREF {
			UNTRIPLE
			XCHG S2
			NEWC
			STU 128
			STI 32
			STU 256
		}
		ENDC
		CTOS
		XCHG S2
		CALLREF {
			UNTRIPLE
			XCHG S2
			NEWC
			STU 32
			STU 256
			STU 256
		}
		ROTREV
		PUSHINT 416
		DICTSETB
		POP S4
		.loc Elector.sol, 467
		PUSH S4
		INC
		POP S5
		.loc Elector.sol, 0
		PUSH2 S0, S1
		PUSHPOW2 8
		DICTUGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			ROT
			LDVARUINT16
			LDU 32
			LDU 32
			LDU 256
			LDU 256
			ENDS
			TUPLE 5
}
		BLKDROP2 1, 3
	}
	WHILE
	BLKDROP 4
	.loc Elector.sol, 469
	PUSH2 S2, S4
	MIN
	POP S3
	.loc Elector.sol, 470
	PUSH2 S2, S3
	LESS
	PUSHCONT {
		.loc Elector.sol, 473
		NEWDICT
		PUSHINT 0
		NEWDICT
		PUSHINT 0
		DUP
		BLKDROP2 15, 5
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 475
	NULL
	.loc Elector.sol, 476
	PUSH2 S2, S2
	PUSHINT 416
	DICTMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		LDU 128
		LDI 32
		LDU 256
		ENDS
		TRIPLE
		ROT
		LDU 32
		LDU 256
		LDU 256
		ENDS
		TRIPLE
}
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.sol, 477
		OVER
		FIRST
		PUSH S19
		MIN
		.loc Elector.sol, 478
		OVER
		FIRST
		ROLL 3
		THIRD
		ROLL 3
		THIRD
		PUSH S6
		TUPLE 5
		POP S3
		.loc Elector.sol, 0
		PUSH2 S0, S1
		PUSHINT 416
		DICTGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			LDU 128
			LDI 32
			LDU 256
			ENDS
			TRIPLE
			ROT
			LDU 32
			LDU 256
			LDU 256
			ENDS
			TRIPLE
}
		BLKDROP2 1, 3
	}
	WHILE
	BLKDROP 4
	.loc Elector.sol, 488
	PUSHINT 0
	BLKPUSH 2, 0
	.loc Elector.sol, 491
	PUSH S3
	.loc Elector.sol, 493
	PUSHINT 0
	.loc Elector.sol, 494
	NEWDICT
	.loc Elector.sol, 495
	PUSHINT 0
	.loc Elector.sol, 497
	PUSHINT 1
	PUSHCONT {
		PUSH2 S0, S11
		LEQ
	}
	PUSHCONT {
		.loc Elector.sol, 498
		PUSH2 S4, S4
		ISNULL
		THROWIF 63
		.loc Elector.sol, 499
		DUP
		FIRST
		.loc Elector.sol, 500
		DUP
		PUSH S26
		LESS
		PUSHCONT {
			.loc Elector.sol, 501
			DROP2
			RETALT
			.loc Elector.sol, 0
		}
		IFJMP
		.loc Elector.sol, 503
		OVER
		SECOND
		.loc Elector.sol, 504
		PUSH S2
		INDEX 4
		POP S8
		.loc Elector.sol, 506
		PUSH2 S6, S1
		ADD
		POP S7
		.loc Elector.sol, 507
		OVER
		PUSHPOW2 16
		MUL
		PUSHINT 1000000000000000000
		MUL
		OVER
		DIV
		.loc Elector.sol, 508
		BLKPUSH 2, 2
		PAIR
		PUSH3 S7, S1, S5
		PAIR
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STU 256
			STU 16
		}
		ENDC
		CTOS
		XCHG S2
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STU 128
			STU 32
		}
		ROTREV
		PUSHINT 272
		DICTSETB
		POP S7
		.loc Elector.sol, 510
		PUSHCONT {
			PUSH S6
			DICTEMPTY
			NOT
		}
		PUSHCONT {
			.loc Elector.sol, 511
			PUSH S6
			PUSHINT 272
			DICTMAX
			NULLSWAPIFNOT
			IFREF {
				LDU 256
				LDU 16
				ENDS
				PAIR
				SWAP
				LDU 128
				LDU 32
				ENDS
				PAIR
				PAIR
			}
			DUP
			ISNULL
			THROWIF 63
			UNPAIR
			.loc Elector.sol, 512
			SWAP
			FIRST
			PUSH S4
			PUSHINT 1000000000000000000
			MUL
			LESS
			PUSHCONT {
				.loc Elector.sol, 513
				DROP
				RETALT
				.loc Elector.sol, 0
			}
			IFJMP
			.loc Elector.sol, 515
			DUP
			FIRST
			PUSH S9
			SUBR
			POP S9
			.loc Elector.sol, 516
			PUSH S7
			PUSHINT 272
			DICTREMMAX
			NULLSWAPIFNOT
			IFREF {
				LDU 256
				LDU 16
				ENDS
				PAIR
				SWAP
				LDU 128
				LDU 32
				ENDS
				PAIR
				PAIR
			}
			DROP
			POP S8
			.loc Elector.sol, 517
			SECOND
			PUSH S6
			ADD
			POP S6
			.loc Elector.sol, 0
		}
		WHILEBRK
		.loc Elector.sol, 520
		DROP2
		PUSH3 S5, S0, S3
		MUL
		RSHIFT 16
		UFITS 128
		ADD
		.loc Elector.sol, 521
		PUSH2 S3, S15
		EQUAL
		PUSH2 S1, S10
		GREATER
		OR
		PUSHCONT {
			.loc Elector.sol, 522
			DUP
			POP S10
			.loc Elector.sol, 523
			PUSH S3
			POP S9
			.loc Elector.sol, 524
			OVER
			POP S11
			.loc Elector.sol, 0
		}
		IF
		.loc Elector.sol, 0
		BLKDROP 3
		.loc Elector.sol, 497
		INC
		.loc Elector.sol, 0
	}
	WHILEBRK
	BLKDROP 4
	.loc Elector.sol, 528
	OVER
	EQINT 0
	PUSH S3
	PUSHINT 19
	ROLLX
	LESS
	OR
	PUSHCONT {
		.loc Elector.sol, 531
		NEWDICT
		PUSHINT 0
		NEWDICT
		PUSHINT 0
		DUP
		PUSHINT 19
		PUSHINT 5
		BLKSWX
		PUSHINT 19
		DROPX
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 537
	PUSH S2
	.loc Elector.sol, 538
	PUSHINT 0
	POP S4
	.loc Elector.sol, 539
	PUSH S5
	POP S2
	.loc Elector.sol, 540
	PUSH S2
	PUSHCONT {
		.loc Elector.sol, 541
		PUSH2 S1, S1
		ISNULL
		THROWIF 63
		.loc Elector.sol, 542
		DUP
		FIRST
		PUSH2 S6, S1
		SECOND
		MUL
		RSHIFT 16
		MIN
		PUSH S5
		ADD
		POP S5
		.loc Elector.sol, 543
		INDEX 4
		POP S2
		.loc Elector.sol, 0
	}
	REPEAT
	.loc Elector.sol, 545
	PUSH S3
	SUB
	ABS
	PUSHINT 1000000000
	LEQ
	THROWIFNOT 666
	.loc Elector.sol, 549
	DROP
	PUSHINT 0
	BLKPUSH 2, 0
	.loc Elector.sol, 552
	NEWDICT
	DUP
	.loc Elector.sol, 554
	GETGLOB 12
	.loc Elector.sol, 555
	PUSHCONT {
		.loc Elector.sol, 556
		PUSH2 S9, S9
		ISNULL
		THROWIF 63
		UNTUPLE 5
		.loc Elector.sol, 557
		POP S14
		.loc Elector.sol, 559
		PUSH2 S1, S14
		PUSHPOW2 8
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDVARUINT16
			LDU 32
			LDU 32
			LDU 256
			LDU 256
			ENDS
			TUPLE 5
		}
		.loc Elector.sol, 560
		DUP
		ISNULL
		THROWIF 61
		.loc Elector.sol, 561
		DUP
		ISNULL
		THROWIF 63
		INDEX 3
		.loc Elector.sol, 562
		PUSH2 S10, S11
		LESS
		PUSHCONT {
			.loc Elector.sol, 564
			BLKPUSH 2, 4
			PUSH S15
			MUL
			RSHIFT 16
			MIN
			.loc Elector.sol, 565
			PUSH2 S5, S0
			SUB
			POP S6
			.loc Elector.sol, 566
			DUP
			LSHIFT 60
			PUSH S14
			DIV
			.loc Elector.sol, 567
			PUSH2 S11, S1
			ADD
			POP S12
			.loc Elector.sol, 568
			PUSH2 S10, S0
			ADD
			POP S11
			.loc Elector.sol, 569
			NEWC
			.loc Elector.sol, 570
			PUSH S4
			GTINT 0
			PUSHCONT {
				.loc Elector.sol, 571
				PUSHINT 115
				PUSHINT 2390828938
				PUSH2 S7, S3
				UFITS 64
				PUSH S8
				REVERSE 6, 0
				STU 8
				STU 32
				STU 256
				STU 64
				STU 256
			}
			PUSHCONT {
				.loc Elector.sol, 574
				PUSHINT 83
				PUSHINT 2390828938
				PUSH2 S7, S3
				UFITS 64
				REVERSE 5, 0
				STU 8
				STU 32
				STU 256
				STU 64
			}
			IFELSE
			.loc Elector.sol, 577
			ENDC
			CTOS
			PUSH2 S13, S10
			PUSHINT 16
			DICTUSET
			POP S10
			.loc Elector.sol, 578
			PUXC S2, S-1
			UFITS 64
			ROT
			UFITS 120
			FALSE
			TUPLE 4
			PUSH2 S3, S7
			ROT
			CALLREF {
				UNTUPLE 4
				REVERSE 4, 0
				NEWC
				STU 256
				STU 64
				SWAP
				STVARUINT16
				STI 1
			}
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			POP S7
			.loc Elector.sol, 0
		}
		IF
		.loc Elector.sol, 580
		PUSH S4
		GTINT 0
		PUSHCONT {
			.loc Elector.sol, 583
			PUSH S4
			UFITS 120
			PUSH3 S1, S6, S1
			OVER
			PUSHPOW2 8
			DICTUGET
			ZEROSWAPIFNOT
			PUSHCONT {
				LDVARUINT16
				DROP
			}
			IF
			ROLL 3
			ADD
			NEWC
			SWAP
			STVARUINT16
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			POP S6
			.loc Elector.sol, 0
		}
		IF
		.loc Elector.sol, 585
		BLKDROP 5
		PUSH S5
		INC
		POP S6
		.loc Elector.sol, 0
		PUSH S9
		ISNULL
	}
	UNTIL
	.loc Elector.sol, 587
	SETGLOB 12
	.loc Elector.sol, 588
	PUSH S3
	ROLL 7
	EQUAL
	THROWIFNOT 49
	.loc Elector.sol, 589
	XCHG S2
	UFITS 64
	SWAP
	ROLL 4
	REVERSE 6, 0
	PUSHINT 17
	PUSHINT 5
	BLKSWX
	PUSHINT 17
	DROPX
	.loc Elector.sol, 454
}
CALLX
.loc Elector.sol, 621
DUP
EQINT 0
PUXC S11, S-1
SETINDEX 5
POP S11
.loc Elector.sol, 622
PUSH S10
INDEX 5
NOT
PUXC S11, S-1
SETINDEX 6
POP S11
.loc Elector.sol, 623
PUSH S10
SETGLOB 11
.loc Elector.sol, 624
DUP
PUSHCONT {
	.loc Elector.sol, 626
	PUSHINT 4
	.loc Elector.sol, 408
	HEXDUMP
	BLKDROP 13
	.loc Elector.sol, 409
	FALSE
	.loc Elector.sol, 0
}
IFNOTJMP
.loc Elector.sol, 628
ROLL 10
FIRST
.loc Elector.sol, 93
PUSHINT 15
CONFIGPARAM
PUSHCONT {
	CTOS
	LDU 32
	LDU 32
	LDU 32
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
DROP
.loc Elector.sol, 0
BLKDROP2 1, 2
.loc Elector.sol, 633
NOW
ROT
ADD
ADDCONST -60
PUSH S3
MAX
.loc Elector.sol, 634
PUSHINT 16
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.sol, 635
CTOS
LDU 16
PLDU 16
NIP
.loc Elector.sol, 639
PUSH S9
ROLL 9
PUSH2 S7, S2
MIN
ROLL 8
PUSH2 S5, S7
ADD
PUSH S6
NEWC
STSLICECONST x12
STU 32
STU 32
STU 16
STU 16
STU 64
STDICT
.loc Elector.sol, 641
ENDC
.loc Elector.sol, 643
PUSHINT 0
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.sol, 644
CTOS
PLDU 256
.loc Elector.sol, 645
PUSH2 S1, S6
.loc Elector.sol, 133
ROT
PUSHINT -1
NEWC
STSLICECONST x9_
STI 8
STU 256
ENDC
CTOS
.loc Elector.sol, 134
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 12720910251328179000044872783962527403085238168343380
STUR 175
STU 64
STREF
ENDC
PUSHINT 1
SENDRAWMSG
.loc Elector.sol, 648
ROT
ROLL 4
ADD
PUSH S3
ADD
PUSHINT 0
BLKPUSH 2, 0
NEWDICT
PUSHINT 0
DUP
NEWDICT
TUPLE 7
SWAP
SETINDEX 0
.loc Elector.sol, 649
ROLL 3
SETINDEX 1
.loc Elector.sol, 650
SWAP
HASHCU
SETINDEX 2
.loc Elector.sol, 651
ROLL 4
SETINDEX 3
.loc Elector.sol, 652
ROLL 3
UFITS 120
SETINDEX 4
.loc Elector.sol, 653
GETGLOB 13
SWAP
XCHG S2, S3
CALLREF {
	UNTUPLE 7
	REVERSE 7, 0
	NEWC
	STU 32
	STU 32
	STU 256
	STDICT
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
}
ROTREV
PUSHINT 32
DICTUSETB
SETGLOB 13
.loc Elector.sol, 655
NEWDICT
.loc Elector.sol, 656
SETGLOB 19
.loc Elector.sol, 657
NEWDICT
.loc Elector.sol, 658
DUP
SETGLOB 20
.loc Elector.sol, 659
SETGLOB 21
.loc Elector.sol, 661
OVER
PUSHINT 16
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PAIR
}
IF
.loc Elector.sol, 662
PUSHINT 0
BLKPUSH 2, 0
.loc Elector.sol, 665
PUSHCONT {
	PUSH S3
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.sol, 666
	PUSH2 S3, S3
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.sol, 667
	LDU 8
	LDU 32
	LDU 256
	LDU 64
	PLDU 256
	TUPLE 5
	.loc Elector.sol, 668
	DUP
	FIRST
	NEQINT 83
	THROWIFNOT 131
	.loc Elector.sol, 669
	PUSH2 S2, S6
	LESS
	PUSHCONT {
		.loc Elector.sol, 670
		DUP
		INDEX 3
		PUSH S5
		ADD
		POP S5
	}
	PUSHCONT {
		.loc Elector.sol, 672
		DUP
		INDEX 3
		PUSH S4
		ADD
		POP S4
	}
	IFELSE
	.loc Elector.sol, 674
	DROP
	OVER
	INC
	POP S2
	.loc Elector.sol, 675
	PUSH S6
	PUSHINT 16
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PAIR
	}
	IF
	POP S4
	.loc Elector.sol, 0
}
WHILE
.loc Elector.sol, 677
DROP
SWAP
SETGLOB 17
.loc Elector.sol, 678
SETGLOB 18
.loc Elector.sol, 680
BLKDROP 9
TRUE
.loc Elector.sol, 0

.globl	update_active_vset_id_fd8379e1_internal
.type	update_active_vset_id_fd8379e1_internal, @function
CALL $update_active_vset_id_fd8379e1_internal_macro$

.macro update_active_vset_id_fd8379e1_internal_macro
.loc Elector.sol, 683
PUSHINT 0
.loc Elector.sol, 684
PUSHINT 34
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.sol, 685
DUP
HASHCU
.loc Elector.sol, 686
DUP
GETGLOB 16
EQUAL
PUSHCONT {
	.loc Elector.sol, 688
	BLKDROP 3
	FALSE
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 690
GETGLOB 15
PUSHCONT {
	.loc Elector.sol, 692
	GETGLOB 15
	GETGLOB 13
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
	}
	.loc Elector.sol, 693
	DUP
	ISNULL
	PUSHCONT {
		.loc Elector.sol, 694
		BLKPUSH 2, 0
		ISNULL
		THROWIF 63
		.loc Elector.sol, 696
		DUP
		THIRD
		GETGLOB 16
		EQUAL
		THROWIFNOT 57
		.loc Elector.sol, 697
		NOW
		OVER
		SECOND
		ADD
		SETINDEX 0
		.loc Elector.sol, 698
		GETGLOB 15
		GETGLOB 13
		ROT
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETGLOB 13
		.loc Elector.sol, 0
	}
	IFNOT
	.loc Elector.sol, 0
	DROP
}
IF
.loc Elector.sol, 702
GETGLOB 13
PUSHINT 32
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
	PAIR
}
.loc Elector.sol, 703
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.sol, 704
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.sol, 705
	DUP
	THIRD
	PUSH S4
	EQUAL
	PUSHCONT {
		.loc Elector.sol, 707
		GETGLOB 14
		RSHIFT 3
		.loc Elector.sol, 708
		DUP
		UFITS 120
		GETGLOB 14
		SUBR
		SETGLOB 14
		.loc Elector.sol, 709
		UFITS 120
		XCPU S1, S0
		INDEX 5
		ROT
		ADD
		SETINDEX 5
		.loc Elector.sol, 710
		GETGLOB 13
		SWAP
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETGLOB 13
		.loc Elector.sol, 712
		RETALT
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 714
	DROP
	GETGLOB 13
	PUSHINT 32
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
		PAIR
	}
	NIP
	.loc Elector.sol, 0
}
WHILEBRK
.loc Elector.sol, 716
DUP
ISNULL
PUSHCONT {
	.loc Elector.sol, 720
	PUSHINT 0
}
PUSHCONT {
	.loc Elector.sol, 717
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	UNPAIR
	DROP
	.loc Elector.sol, 718
}
IFELSE
SETGLOB 15
.loc Elector.sol, 722
DROP
SETGLOB 16
.loc Elector.sol, 723
DROP2
TRUE
.loc Elector.sol, 0

.globl	validator_set_installed_88ca450d_internal
.type	validator_set_installed_88ca450d_internal, @function
CALL $validator_set_installed_88ca450d_internal_macro$

.macro validator_set_installed_88ca450d_internal_macro
.loc Elector.sol, 727
GETGLOB 11
INDEX 6
PUSHCONT {
	.loc Elector.sol, 729
	FALSE
	.loc Elector.sol, 0
}
IFNOTJMP
.loc Elector.sol, 731
GETGLOB 11
FIRST
GETGLOB 13
PUSHINT 32
DICTUGET
NULLSWAPIFNOT
IFREF {
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
}
.loc Elector.sol, 732
DUP
ISNULL
PUSHCONT {
	.loc Elector.sol, 734
	DROP
	FALSE
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 736
DUP
ISNULL
THROWIF 63
.loc Elector.sol, 738
PUSHINT 34
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.sol, 739
PUSHINT 36
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.sol, 740
SWAP2
SWAP
HASHCU
PUSH S4
THIRD
EQUAL
AND
XCHG S2
HASHCU
ROLL 3
THIRD
EQUAL
AND
OR
PUSHCONT {
	.loc Elector.sol, 743
	FALSE
	SETGLOB 10
	.loc Elector.sol, 744
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	DUP
	TUPLE 7
	.loc Elector.sol, 745
	SETGLOB 11
	.loc Elector.sol, 746
	CALLREF {
		CALL $update_active_vset_id_fd8379e1_internal_macro$
	}
	DROP
	.loc Elector.sol, 747
	TRUE
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 749
FALSE
.loc Elector.sol, 0

.globl	check_unfreeze_2f3bfb3c_internal
.type	check_unfreeze_2f3bfb3c_internal, @function
CALL $check_unfreeze_2f3bfb3c_internal_macro$

.macro check_unfreeze_2f3bfb3c_internal_macro
.loc Elector.sol, 753
GETGLOB 13
PUSHINT 32
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
	PAIR
}
.loc Elector.sol, 754
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.sol, 755
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.sol, 756
	FIRST
	NOW
	LEQ
	OVER
	GETGLOB 15
	NEQ
	AND
	PUSHCONT {
		.loc Elector.sol, 758
		CALLREF {
			CALL $unfreeze_all_ca0f9c0b_internal_macro$
		}
		UFITS 120
		GETGLOB 14
		ADD
		SETGLOB 14
		.loc Elector.sol, 760
		RETALT
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 762
	GETGLOB 13
	PUSHINT 32
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
		PAIR
	}
	NIP
	.loc Elector.sol, 0
}
WHILEBRK
DROP
.loc Elector.sol, 0

.globl	announce_new_elections_90433d78_internal
.type	announce_new_elections_90433d78_internal, @function
CALL $announce_new_elections_90433d78_internal_macro$

.macro announce_new_elections_90433d78_internal_macro
.loc Elector.sol, 767
PUSHINT 36
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
NIP
.loc Elector.sol, 768
PUSHCONT {
	.loc Elector.sol, 770
	FALSE
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 772
PUSHINT 1
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.sol, 773
CTOS
PLDU 256
.loc Elector.sol, 774
MYADDR
REWRITESTDADDR
.loc Elector.sol, 775
SWAP
NEQINT -1
XCHG S2
NEQ
OR
PUSHCONT {
	.loc Elector.sol, 777
	FALSE
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 779
PUSHINT 34
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.sol, 780
PUSHCONT {
	.loc Elector.sol, 781
	DROP
	FALSE
	.loc Elector.sol, 0
}
IFNOTJMP
.loc Elector.sol, 93
PUSHINT 15
CONFIGPARAM
PUSHCONT {
	CTOS
	LDU 32
	LDU 32
	LDU 32
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
DROP2
.loc Elector.sol, 95
BLKDROP2 1, 2
.loc Elector.sol, 784
ROT
CTOS
LDU 40
PLDU 32
NIP
.loc Elector.sol, 785
NOW
.loc Elector.sol, 786
XCPU S1, S3
SUB
.loc Elector.sol, 787
DUP2
LESS
PUSHCONT {
	.loc Elector.sol, 789
	BLKDROP 4
	FALSE
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 792
DUP2
SUB
LESSINT 60
PUSHCONT {
	.loc Elector.sol, 794
	DUP
	POP S2
	.loc Elector.sol, 0
}
IF
.loc Elector.sol, 797
DROP
PUSHINT 17
CONFIGPARAM
PUSHCONT {
	CTOS
	LDGRAMS
	LDGRAMS
	LDGRAMS
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
BLKDROP 4
.loc Elector.sol, 799
SWAP
ROLL 3
ADD
.loc Elector.sol, 801
DUP
ROLL 3
SUB
.loc Elector.sol, 802
ROT
UFITS 120
PUSHINT 0
NEWDICT
FALSE
DUP
TUPLE 7
.loc Elector.sol, 803
SETGLOB 11
.loc Elector.sol, 804
TRUE
SETGLOB 10
.loc Elector.sol, 805
TRUE
.loc Elector.sol, 0

.internal-alias :onTickTock, -2
.internal :onTickTock
PUSHINT -2
PUSH S2
CALLREF {
	CALL $c4_to_c7$
}
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
PUSHCONT {
	.loc Elector.sol, 810
	DROP
	FALSE ; decl return flag
	GETGLOB 10
	PUSHCONT {
		.loc Elector.sol, 812
		CALLREF {
			CALL $conduct_elections_6ec16465_internal_macro$
		}
		PUSHCONT {
			.loc Elector.sol, 814
			DROP
			PUSHINT 4
			.loc Elector.sol, 0
		}
		IFJMP
		.loc Elector.sol, 816
		CALLREF {
			CALL $validator_set_installed_88ca450d_internal_macro$
		}
		PUSHCONT {
			.loc Elector.sol, 818
			DROP
			PUSHINT 4
			.loc Elector.sol, 0
		}
		IFJMP
		.loc Elector.sol, 0
	}
	PUSHCONT {
		.loc Elector.sol, 821
		CALLREF {
			CALL $announce_new_elections_90433d78_internal_macro$
		}
		PUSHCONT {
			.loc Elector.sol, 823
			DROP
			PUSHINT 4
			.loc Elector.sol, 0
		}
		IFJMP
		.loc Elector.sol, 0
	}
	IFELSE
	IFRET
	.loc Elector.sol, 826
	CALLREF {
		CALL $update_active_vset_id_fd8379e1_internal_macro$
	}
	IFRET
	.loc Elector.sol, 830
	CALLREF {
		CALL $check_unfreeze_2f3bfb3c_internal_macro$
	}
	.loc Elector.sol, 808
}
CALLX
.loc Elector.sol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro report
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 873
OVER
PUSHCONT {
	LDU 256
	LDREF
	ENDS
	CTOS
	LDU 256
	LDU 256
}
PUSHCONT {
	LDU 256
	LDU 256
	LDU 256
	LDREF
	ENDS
	CTOS
}
IFELSE
LDU 256
LDU 8
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $report_bd32e8f1_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	report_bd32e8f1_internal
.type	report_bd32e8f1_internal, @function
CALL $report_bd32e8f1_internal_macro$

.macro report_bd32e8f1_internal_macro
.loc Elector.sol, 873
DEPTH
ADDCONST -5
PICK
EQINT -1
THROWIFNOT 71
.loc Elector.sol, 875
CALLREF {
	CALL $get_current_vset_cb181528_internal_macro$
}
DROP2
.loc Elector.sol, 876
DUP
CTOS
LDU 8
LDU 32
LDU 32
LDU 16
LDU 16
LDU 64
PLDDICT
TUPLE 7
.loc Elector.sol, 877
DUP
FIRST
EQINT 18
THROWIFNOT 131
.loc Elector.sol, 880
DUP
SECOND
NOW
LESS
NOW
PUSH S2
THIRD
LESS
AND
THROWIFNOT 139
.loc Elector.sol, 883
PUSH2 S5, S6
NEWC
STU 256
STU 256
.loc Elector.sol, 885
PUSH3 S3, S4, S5
NEWC
STU 256
STU 256
STU 8
.loc Elector.sol, 886
DUP
ENDC
CTOS
PUSH S2
ENDC
CTOS
PUSH S8
CHKSIGNS
THROWIFNOT 34
.loc Elector.sol, 889
ACCEPT
.loc Elector.sol, 892
PUSH S6
GETGLOB 19
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
NIP
NOT
PUSHINT 137
.loc Elector.sol, 867
SWAP
PUSHCONT {
	.loc Elector.sol, 868
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.sol, 869
	DUP
	PUSHINT 2
	MAX
	THROWANY
	.loc Elector.sol, 0
}
IFNOT
.loc Elector.sol, 0
DROP
.loc Elector.sol, 895
PUSH S5
GETGLOB 19
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
NIP
NOT
PUSHINT 138
.loc Elector.sol, 867
SWAP
PUSHCONT {
	.loc Elector.sol, 868
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.sol, 869
	DUP
	PUSHINT 2
	MAX
	THROWANY
	.loc Elector.sol, 0
}
IFNOT
.loc Elector.sol, 0
DROP
.loc Elector.sol, 898
PUSH S2
INDEX 6
PUSHINT 16
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PAIR
}
IF
.loc Elector.sol, 899
PUSHINT 0
DUP
.loc Elector.sol, 901
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.sol, 902
	PUSH2 S2, S2
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.sol, 903
	LDU 8
	LDU 32
	LDU 256
	LDU 64
	PLDU 256
	TUPLE 5
	.loc Elector.sol, 904
	DUP
	FIRST
	NEQINT 83
	THROWIFNOT 131
	.loc Elector.sol, 905
	DUP
	THIRD
	PUSH S12
	EQUAL
	PUSHCONT {
		.loc Elector.sol, 906
		INDEX 3
		POP S3
		.loc Elector.sol, 907
		DROP
		RETALT
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 909
	DROP
	OVER
	INC
	POP S2
	.loc Elector.sol, 910
	PUSH S6
	INDEX 6
	PUSHINT 16
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PAIR
	}
	IF
	POP S3
	.loc Elector.sol, 0
}
WHILEBRK
.loc Elector.sol, 912
OVER
GTINT 0
THROWIFNOT 135
.loc Elector.sol, 915
PUSH S5
INDEX 6
PUSHINT 16
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PAIR
}
IF
POP S3
.loc Elector.sol, 916
PUSHINT 0
DUP
.loc Elector.sol, 918
PUSHCONT {
	PUSH S4
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.sol, 919
	PUSH2 S4, S4
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.sol, 920
	LDU 8
	LDU 32
	LDU 256
	LDU 64
	PLDU 256
	TUPLE 5
	.loc Elector.sol, 921
	DUP
	FIRST
	NEQINT 83
	THROWIFNOT 131
	.loc Elector.sol, 922
	THIRD
	PUSH S12
	EQUAL
	PUSHCONT {
		.loc Elector.sol, 923
		DROP2
		TRUE
		.loc Elector.sol, 924
		RETALT
		.loc Elector.sol, 0
	}
	IFJMP
	.loc Elector.sol, 926
	PUSH S2
	INC
	POP S3
	.loc Elector.sol, 927
	PUSH S8
	INDEX 6
	PUSHINT 16
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PAIR
	}
	IF
	POP S5
	.loc Elector.sol, 0
}
WHILEBRK
.loc Elector.sol, 929
DUP
THROWIFNOT 133
.loc Elector.sol, 931
PUSHINT 16
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.sol, 932
DUP
CTOS
LDU 16
LDU 16
PLDU 16
BLKDROP2 2, 1
.loc Elector.sol, 933
PUSH2 S4, S9
INDEX 4
LESS
PUSHCONT {
	.loc Elector.sol, 934
	PUSH2 S11, S12
	GETGLOB 20
	PUSHPOW2 8
	DICTUGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	PUSHINT 8
	DICTUGET
IFREFELSEREF
{
		LDU 64
		LDDICT
		ENDS
		PAIR
}
{
		PUSHINT 0
		NEWDICT
		PAIR
}
	.loc Elector.sol, 935
	PUSH2 S14, S0
	SECOND
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	.loc Elector.sol, 937
	DUP
	ISNULL
	PUSHINT 140
	.loc Elector.sol, 867
	SWAP
	PUSHCONT {
		.loc Elector.sol, 868
		CALLREF {
			CALL $c7_to_c4$
		}
		COMMIT
		.loc Elector.sol, 869
		DUP
		PUSHINT 2
		MAX
		THROWANY
		.loc Elector.sol, 0
	}
	IFNOT
	.loc Elector.sol, 0
	DROP
	.loc Elector.sol, 939
	PUSH3 S7, S1, S1
	FIRST
	ROT
	ADD
	SETINDEX 0
	POP S2
	.loc Elector.sol, 940
	PUSH3 S7, S1, S1
	SECOND
	PUSH S18
	SWAP
	ROLL 3
	NEWC
	STU 64
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETINDEX 1
	POP S2
	.loc Elector.sol, 941
	PUSH2 S1, S14
	GETGLOB 20
	DUP2
	PUSHPOW2 8
	DICTUGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	PUSH S17
	SWAP
	ROLL 4
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STU 64
		STDICT
	}
	ROTREV
	PUSHINT 8
	DICTUSETB
	NEWC
	STDICT
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETGLOB 20
	.loc Elector.sol, 942
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.sol, 944
	OVER
	FIRST
	GETGLOB 17
	PUSHINT 2
	PUSHINT 3
	MULDIV
	GEQ
	PUSHCONT {
		.loc Elector.sol, 947
		PUSH S11
		INDEX 4
		PUSH S3
		GREATER
		THROWIFNOT 141
		.loc Elector.sol, 948
		PUSH S14
		GETGLOB 19
		NEWC
		STONE
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 19
		.loc Elector.sol, 949
		PUSH2 S14, S5
		.loc Elector.sol, 993
		CALLREF {
			CALL $get_current_vset_cb181528_internal_macro$
		}
		.loc Elector.sol, 994
		PUSH S2
		CTOS
		LDU 8
		LDU 32
		LDU 32
		LDU 16
		LDU 16
		LDU 64
		PLDDICT
		TUPLE 7
		.loc Elector.sol, 996
		PUSHINT 16
		CONFIGPARAM
		DUP
		PUSHCONT {
			PUSHREF {
			}
			SWAP
		}
		IFNOT
		DROP
		.loc Elector.sol, 997
		DUP
		CTOS
		LDU 16
		LDU 16
		PLDU 16
		BLKDROP2 2, 1
		.loc Elector.sol, 998
		PUSH S2
		INDEX 3
		OVER
		GREATER
		THROWIFNOT 141
		.loc Elector.sol, 1000
		FALSE
		DUP
		.loc Elector.sol, 1002
		PUSHCONT {
			.loc Elector.sol, 1004
			PUSH2 S8, S2
			LESS
			PUSHCONT {
				.loc Elector.sol, 1005
				PUSH S2
				DEC
				POP S3
				.loc Elector.sol, 1006
				PUSH S9
				GETGLOB 20
				CALLREF {
					CALL $update_reports_014af5da_internal_macro$
				}
				SETGLOB 20
			}
			PUSHCONT {
				.loc Elector.sol, 1008
				PUSH S9
				GETGLOB 21
				CALLREF {
					CALL $update_reports_014af5da_internal_macro$
				}
				SETGLOB 21
			}
			IFELSE
			.loc Elector.sol, 1011
			NEWDICT
			.loc Elector.sol, 1012
			PUSHINT 0
			BLKPUSH 2, 0
			.loc Elector.sol, 1014
			POP S10
			.loc Elector.sol, 1015
			PUSHINT 0
			POP S4
			.loc Elector.sol, 1016
			PUSH2 S8, S8
			PUSHINT 16
			DICTUMIN
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			PUSHCONT {
				PUSH S2
				ISNULL
				NOT
			}
			PUSHCONT {
				.loc Elector.sol, 1017
				DUP
				.loc Elector.sol, 1018
				LDU 8
				LDU 32
				LDU 256
				LDU 64
				PLDU 256
				TUPLE 5
				.loc Elector.sol, 1019
				DUP
				FIRST
				NEQINT 83
				THROWIFNOT 131
				.loc Elector.sol, 1020
				DUP
				THIRD
				GETGLOB 19
				PUSHPOW2 8
				DICTUGET
				NULLSWAPIFNOT
				NIP
				PUSHCONT {
					.loc Elector.sol, 1021
					PUSH3 S1, S8, S7
					PUSHINT 16
					DICTUSET
					POP S8
					.loc Elector.sol, 1022
					DUP
					INDEX 3
					PUSH S15
					ADD
					POP S15
					.loc Elector.sol, 1023
					PUSH2 S8, S12
					INDEX 4
					LESS
					PUSHCONT {
						.loc Elector.sol, 1024
						DUP
						INDEX 3
						PUSH S7
						ADD
						POP S7
					}
					PUSHCONT {
						.loc Elector.sol, 1026
						DUP
						INDEX 3
						PUSH S6
						ADD
						POP S6
					}
					IFELSE
					.loc Elector.sol, 1028
					PUSH S8
					INC
					POP S9
					.loc Elector.sol, 0
				}
				IFNOT
				.loc Elector.sol, 0
				DROP
				PUSH2 S2, S3
				PUSHINT 16
				DICTUGETNEXT
				PUSHCONT {
					DUP
					ROT
				}
				PUSHCONT {
					NULL
					BLKPUSH 2, 0
				}
				IFELSE
				BLKDROP2 3, 3
			}
			WHILE
			BLKDROP 4
			.loc Elector.sol, 1031
			PUSH2 S3, S5
			GEQ
			THROWIFNOT 141
			.loc Elector.sol, 1032
			OVER
			SETGLOB 17
			.loc Elector.sol, 1033
			DUP
			SETGLOB 18
			.loc Elector.sol, 1035
			PUSHINT 0
			POP S4
			.loc Elector.sol, 1036
			GETGLOB 20
			.loc Elector.sol, 1037
			GETGLOB 17
			PUSHINT 2
			PUSHINT 3
			MULDIV
			.loc Elector.sol, 1039
			PUSH2 S4, S4
			PUSHINT 16
			DICTUMIN
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			PUSHCONT {
				PUSH S2
				ISNULL
				NOT
			}
			PUSHCONT {
				PUSHCONT {
					.loc Elector.sol, 1040
					LDU 8
					LDU 32
					LDU 256
					LDU 64
					LDU 256
					ROLLREV 5
					TUPLE 5
					.loc Elector.sol, 1041
					DUP
					FIRST
					NEQINT 83
					THROWIFNOT 131
					.loc Elector.sol, 1042
					PUSH2 S10, S12
					EQUAL
					PUSHCONT {
						.loc Elector.sol, 1043
						GETGLOB 18
						PUSHINT 1
						PUSHINT 3
						MULDIV
						POP S6
						.loc Elector.sol, 1045
						GETGLOB 21
						POP S7
						.loc Elector.sol, 0
					}
					IF
					.loc Elector.sol, 1047
					DUP
					THIRD
					PUSH S7
					PUSHPOW2 8
					DICTUGET
					PUSHCONT {
						PLDDICT
					}
					PUSHCONT {
						NEWDICT
					}
					IFELSE
					SINGLE
					.loc Elector.sol, 1048
					DUP
					ISNULL
					PUSHCONT {
						.loc Elector.sol, 1049
						BLKPUSH 2, 0
						ISNULL
						THROWIF 63
						UNSINGLE
						DUP
						PUSHINT 8
						DICTUMIN
						PUSHCONT {
							NULL
							BLKPUSH 2, 0
						}
IFREFELSE {
							DUP
							ROT
							LDU 64
							LDDICT
							ENDS
							PAIR
}
						PUSHCONT {
							PUSH S2
							ISNULL
							NOT
						}
						PUSHCONT {
							.loc Elector.sol, 1051
							DUP
							FIRST
							PUSH S11
							GEQ
							PUSHCONT {
								.loc Elector.sol, 1052
								GETGLOB 19
								PUSH S6
								THIRD
								SWAP
								NEWC
								STONE
								ROTREV
								PUSHPOW2 8
								DICTUSETB
								SETGLOB 19
								.loc Elector.sol, 1053
								TRUE
								POP S17
								.loc Elector.sol, 1054
								PUSH S5
								THIRD
								POP S25
								.loc Elector.sol, 1055
								PUSH S15
								POP S24
								.loc Elector.sol, 1056
								PUSH S14
								POP S21
								.loc Elector.sol, 1057
								RETALT
								.loc Elector.sol, 0
							}
							IFJMP
							.loc Elector.sol, 0
							PUSH2 S2, S3
							PUSHINT 8
							DICTUGETNEXT
							PUSHCONT {
								NULL
								BLKPUSH 2, 0
							}
IFREFELSE {
								DUP
								ROT
								LDU 64
								LDDICT
								ENDS
								PAIR
}
							BLKDROP2 3, 3
						}
						WHILEBRK
						BLKDROP 4
						.loc Elector.sol, 0
					}
					IFNOT
					.loc Elector.sol, 1061
					DROP2
					PUSH S10
					IFRET
					.loc Elector.sol, 1064
					PUSH S9
					INC
					POP S10
					.loc Elector.sol, 0
				}
				CALLX
				PUSH2 S2, S3
				PUSHINT 16
				DICTUGETNEXT
				PUSHCONT {
					DUP
					ROT
				}
				PUSHCONT {
					NULL
					BLKPUSH 2, 0
				}
				IFELSE
				BLKDROP2 3, 3
			}
			WHILE
			BLKDROP 8
			.loc Elector.sol, 1066
			POP S6
			.loc Elector.sol, 0
			OVER
			NOT
		}
		UNTIL
		.loc Elector.sol, 1069
		PUSHINT 0
		BLKPUSH 5, 0
		NEWDICT
		TUPLE 7
		.loc Elector.sol, 1070
		PUSHINT 18
		SETINDEX 0
		.loc Elector.sol, 1071
		NOW
		ADDCONST 60
		SETINDEX 1
		.loc Elector.sol, 1072
		PUSH S5
		THIRD
		SETINDEX 2
		.loc Elector.sol, 1073
		ROLL 7
		SETINDEX 5
		.loc Elector.sol, 1074
		OVER
		SETINDEX 3
		.loc Elector.sol, 1075
		SWAP
		ROLL 5
		INDEX 4
		MIN
		SETINDEX 4
		.loc Elector.sol, 1076
		ROLL 4
		SETINDEX 6
		.loc Elector.sol, 1079
		NEWC
		SWAP
		UNTUPLE 7
		REVERSE 8, 0
		STU 8
		STU 32
		STU 32
		STU 16
		STU 16
		STU 64
		STDICT
		.loc Elector.sol, 1080
		ENDC
		.loc Elector.sol, 1082
		GETGLOB 15
		GETGLOB 13
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 32
			LDU 32
			LDU 256
			LDDICT
			LDVARUINT16
			LDVARUINT16
			LDDICT
			ENDS
			TUPLE 7
		}
		.loc Elector.sol, 1083
		DUP
		ISNULL
		THROWIF 136
		.loc Elector.sol, 1084
		DUP
		ISNULL
		THROWIF 63
		.loc Elector.sol, 1086
		OVER
		HASHCU
		.loc Elector.sol, 1087
		DUP
		SETGLOB 16
		.loc Elector.sol, 1088
		SETINDEX 2
		.loc Elector.sol, 1089
		PUSH2 S7, S0
		INDEX 3
		PUSHPOW2 8
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 256
			LDU 64
			LDVARUINT16
			LDI 1
			ENDS
			TUPLE 4
		}
		.loc Elector.sol, 1090
		DUP
		ISNULL
		PUSHCONT {
			.loc Elector.sol, 1091
			BLKPUSH 2, 0
			ISNULL
			THROWIF 63
			.loc Elector.sol, 1092
			TRUE
			SETINDEX 3
			.loc Elector.sol, 1093
			PUSH3 S0, S2, S2
			INDEX 3
			PUXC S12, S-1
			ROLL 3
			CALLREF {
				UNTUPLE 4
				REVERSE 4, 0
				NEWC
				STU 256
				STU 64
				SWAP
				STVARUINT16
				STI 1
			}
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			SETINDEX 3
			POP S3
			.loc Elector.sol, 1094
			DUP
			THIRD
			PUSH2 S3, S3
			INDEX 5
			ROT
			ADD
			SETINDEX 5
			POP S3
			.loc Elector.sol, 1095
			THIRD
			PUSH2 S2, S2
			INDEX 4
			ROT
			SUB
			SETINDEX 4
			POP S2
			.loc Elector.sol, 0
		}
		IFNOT
		.loc Elector.sol, 1097
		DROP
		GETGLOB 15
		GETGLOB 13
		ROT
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETGLOB 13
		.loc Elector.sol, 1099
		PUSHINT 0
		CONFIGPARAM
		DUP
		PUSHCONT {
			PUSHREF {
			}
			SWAP
		}
		IFNOT
		DROP
		.loc Elector.sol, 1100
		CTOS
		PLDU 256
		PUSHINT -1
		NEWC
		STSLICECONST x9_
		STI 8
		STU 256
		ENDC
		CTOS
		.loc Elector.sol, 1101
		GETGLOB 15
		SWAP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 12720910251328179000044872783962527403085238168343381
		STUR 175
		STU 64
		STREF
		ENDC
		PUSHINT 1
		SENDRAWMSG
		.loc Elector.sol, 0
		BLKDROP 6
	}
	IF
}
PUSHCONT {
	.loc Elector.sol, 952
	PUSH2 S11, S12
	GETGLOB 21
	PUSHPOW2 8
	DICTUGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	PUSHINT 8
	DICTUGET
IFREFELSEREF
{
		LDU 64
		LDDICT
		ENDS
		PAIR
}
{
		PUSHINT 0
		NEWDICT
		PAIR
}
	.loc Elector.sol, 953
	PUSH2 S14, S0
	SECOND
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	.loc Elector.sol, 955
	DUP
	ISNULL
	PUSHINT 140
	.loc Elector.sol, 867
	SWAP
	PUSHCONT {
		.loc Elector.sol, 868
		CALLREF {
			CALL $c7_to_c4$
		}
		COMMIT
		.loc Elector.sol, 869
		DUP
		PUSHINT 2
		MAX
		THROWANY
		.loc Elector.sol, 0
	}
	IFNOT
	.loc Elector.sol, 0
	DROP
	.loc Elector.sol, 957
	PUSH3 S7, S1, S1
	FIRST
	ROT
	ADD
	SETINDEX 0
	POP S2
	.loc Elector.sol, 958
	PUSH3 S7, S1, S1
	SECOND
	PUSH S18
	SWAP
	ROLL 3
	NEWC
	STU 64
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETINDEX 1
	POP S2
	.loc Elector.sol, 959
	PUSH2 S1, S14
	GETGLOB 21
	DUP2
	PUSHPOW2 8
	DICTUGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	PUSH S17
	SWAP
	ROLL 4
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STU 64
		STDICT
	}
	ROTREV
	PUSHINT 8
	DICTUSETB
	NEWC
	STDICT
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETGLOB 21
	.loc Elector.sol, 960
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.sol, 962
	OVER
	FIRST
	GETGLOB 18
	PUSHINT 1
	PUSHINT 3
	MULDIV
	GEQ
	PUSHCONT {
		.loc Elector.sol, 965
		PUSH S11
		INDEX 3
		PUSH S3
		GREATER
		THROWIFNOT 141
		.loc Elector.sol, 966
		PUSH S14
		GETGLOB 19
		NEWC
		STONE
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 19
		.loc Elector.sol, 967
		PUSH2 S14, S5
		.loc Elector.sol, 993
		CALLREF {
			CALL $get_current_vset_cb181528_internal_macro$
		}
		.loc Elector.sol, 994
		PUSH S2
		CTOS
		LDU 8
		LDU 32
		LDU 32
		LDU 16
		LDU 16
		LDU 64
		PLDDICT
		TUPLE 7
		.loc Elector.sol, 996
		PUSHINT 16
		CONFIGPARAM
		DUP
		PUSHCONT {
			PUSHREF {
			}
			SWAP
		}
		IFNOT
		DROP
		.loc Elector.sol, 997
		DUP
		CTOS
		LDU 16
		LDU 16
		PLDU 16
		BLKDROP2 2, 1
		.loc Elector.sol, 998
		PUSH S2
		INDEX 3
		OVER
		GREATER
		THROWIFNOT 141
		.loc Elector.sol, 1000
		FALSE
		DUP
		.loc Elector.sol, 1002
		PUSHCONT {
			.loc Elector.sol, 1004
			PUSH2 S8, S2
			LESS
			PUSHCONT {
				.loc Elector.sol, 1005
				PUSH S2
				DEC
				POP S3
				.loc Elector.sol, 1006
				PUSH S9
				GETGLOB 20
				CALLREF {
					CALL $update_reports_014af5da_internal_macro$
				}
				SETGLOB 20
			}
			PUSHCONT {
				.loc Elector.sol, 1008
				PUSH S9
				GETGLOB 21
				CALLREF {
					CALL $update_reports_014af5da_internal_macro$
				}
				SETGLOB 21
			}
			IFELSE
			.loc Elector.sol, 1011
			NEWDICT
			.loc Elector.sol, 1012
			PUSHINT 0
			BLKPUSH 2, 0
			.loc Elector.sol, 1014
			POP S10
			.loc Elector.sol, 1015
			PUSHINT 0
			POP S4
			.loc Elector.sol, 1016
			PUSH2 S8, S8
			PUSHINT 16
			DICTUMIN
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			PUSHCONT {
				PUSH S2
				ISNULL
				NOT
			}
			PUSHCONT {
				.loc Elector.sol, 1017
				DUP
				.loc Elector.sol, 1018
				LDU 8
				LDU 32
				LDU 256
				LDU 64
				PLDU 256
				TUPLE 5
				.loc Elector.sol, 1019
				DUP
				FIRST
				NEQINT 83
				THROWIFNOT 131
				.loc Elector.sol, 1020
				DUP
				THIRD
				GETGLOB 19
				PUSHPOW2 8
				DICTUGET
				NULLSWAPIFNOT
				NIP
				PUSHCONT {
					.loc Elector.sol, 1021
					PUSH3 S1, S8, S7
					PUSHINT 16
					DICTUSET
					POP S8
					.loc Elector.sol, 1022
					DUP
					INDEX 3
					PUSH S15
					ADD
					POP S15
					.loc Elector.sol, 1023
					PUSH2 S8, S12
					INDEX 4
					LESS
					PUSHCONT {
						.loc Elector.sol, 1024
						DUP
						INDEX 3
						PUSH S7
						ADD
						POP S7
					}
					PUSHCONT {
						.loc Elector.sol, 1026
						DUP
						INDEX 3
						PUSH S6
						ADD
						POP S6
					}
					IFELSE
					.loc Elector.sol, 1028
					PUSH S8
					INC
					POP S9
					.loc Elector.sol, 0
				}
				IFNOT
				.loc Elector.sol, 0
				DROP
				PUSH2 S2, S3
				PUSHINT 16
				DICTUGETNEXT
				PUSHCONT {
					DUP
					ROT
				}
				PUSHCONT {
					NULL
					BLKPUSH 2, 0
				}
				IFELSE
				BLKDROP2 3, 3
			}
			WHILE
			BLKDROP 4
			.loc Elector.sol, 1031
			PUSH2 S3, S5
			GEQ
			THROWIFNOT 141
			.loc Elector.sol, 1032
			OVER
			SETGLOB 17
			.loc Elector.sol, 1033
			DUP
			SETGLOB 18
			.loc Elector.sol, 1035
			PUSHINT 0
			POP S4
			.loc Elector.sol, 1036
			GETGLOB 20
			.loc Elector.sol, 1037
			GETGLOB 17
			PUSHINT 2
			PUSHINT 3
			MULDIV
			.loc Elector.sol, 1039
			PUSH2 S4, S4
			PUSHINT 16
			DICTUMIN
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			PUSHCONT {
				PUSH S2
				ISNULL
				NOT
			}
			PUSHCONT {
				PUSHCONT {
					.loc Elector.sol, 1040
					LDU 8
					LDU 32
					LDU 256
					LDU 64
					LDU 256
					ROLLREV 5
					TUPLE 5
					.loc Elector.sol, 1041
					DUP
					FIRST
					NEQINT 83
					THROWIFNOT 131
					.loc Elector.sol, 1042
					PUSH2 S10, S12
					EQUAL
					PUSHCONT {
						.loc Elector.sol, 1043
						GETGLOB 18
						PUSHINT 1
						PUSHINT 3
						MULDIV
						POP S6
						.loc Elector.sol, 1045
						GETGLOB 21
						POP S7
						.loc Elector.sol, 0
					}
					IF
					.loc Elector.sol, 1047
					DUP
					THIRD
					PUSH S7
					PUSHPOW2 8
					DICTUGET
					PUSHCONT {
						PLDDICT
					}
					PUSHCONT {
						NEWDICT
					}
					IFELSE
					SINGLE
					.loc Elector.sol, 1048
					DUP
					ISNULL
					PUSHCONT {
						.loc Elector.sol, 1049
						BLKPUSH 2, 0
						ISNULL
						THROWIF 63
						UNSINGLE
						DUP
						PUSHINT 8
						DICTUMIN
						PUSHCONT {
							NULL
							BLKPUSH 2, 0
						}
IFREFELSE {
							DUP
							ROT
							LDU 64
							LDDICT
							ENDS
							PAIR
}
						PUSHCONT {
							PUSH S2
							ISNULL
							NOT
						}
						PUSHCONT {
							.loc Elector.sol, 1051
							DUP
							FIRST
							PUSH S11
							GEQ
							PUSHCONT {
								.loc Elector.sol, 1052
								GETGLOB 19
								PUSH S6
								THIRD
								SWAP
								NEWC
								STONE
								ROTREV
								PUSHPOW2 8
								DICTUSETB
								SETGLOB 19
								.loc Elector.sol, 1053
								TRUE
								POP S17
								.loc Elector.sol, 1054
								PUSH S5
								THIRD
								POP S25
								.loc Elector.sol, 1055
								PUSH S15
								POP S24
								.loc Elector.sol, 1056
								PUSH S14
								POP S21
								.loc Elector.sol, 1057
								RETALT
								.loc Elector.sol, 0
							}
							IFJMP
							.loc Elector.sol, 0
							PUSH2 S2, S3
							PUSHINT 8
							DICTUGETNEXT
							PUSHCONT {
								NULL
								BLKPUSH 2, 0
							}
IFREFELSE {
								DUP
								ROT
								LDU 64
								LDDICT
								ENDS
								PAIR
}
							BLKDROP2 3, 3
						}
						WHILEBRK
						BLKDROP 4
						.loc Elector.sol, 0
					}
					IFNOT
					.loc Elector.sol, 1061
					DROP2
					PUSH S10
					IFRET
					.loc Elector.sol, 1064
					PUSH S9
					INC
					POP S10
					.loc Elector.sol, 0
				}
				CALLX
				PUSH2 S2, S3
				PUSHINT 16
				DICTUGETNEXT
				PUSHCONT {
					DUP
					ROT
				}
				PUSHCONT {
					NULL
					BLKPUSH 2, 0
				}
				IFELSE
				BLKDROP2 3, 3
			}
			WHILE
			BLKDROP 8
			.loc Elector.sol, 1066
			POP S6
			.loc Elector.sol, 0
			OVER
			NOT
		}
		UNTIL
		.loc Elector.sol, 1069
		PUSHINT 0
		BLKPUSH 5, 0
		NEWDICT
		TUPLE 7
		.loc Elector.sol, 1070
		PUSHINT 18
		SETINDEX 0
		.loc Elector.sol, 1071
		NOW
		ADDCONST 60
		SETINDEX 1
		.loc Elector.sol, 1072
		PUSH S5
		THIRD
		SETINDEX 2
		.loc Elector.sol, 1073
		ROLL 7
		SETINDEX 5
		.loc Elector.sol, 1074
		OVER
		SETINDEX 3
		.loc Elector.sol, 1075
		SWAP
		ROLL 5
		INDEX 4
		MIN
		SETINDEX 4
		.loc Elector.sol, 1076
		ROLL 4
		SETINDEX 6
		.loc Elector.sol, 1079
		NEWC
		SWAP
		UNTUPLE 7
		REVERSE 8, 0
		STU 8
		STU 32
		STU 32
		STU 16
		STU 16
		STU 64
		STDICT
		.loc Elector.sol, 1080
		ENDC
		.loc Elector.sol, 1082
		GETGLOB 15
		GETGLOB 13
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 32
			LDU 32
			LDU 256
			LDDICT
			LDVARUINT16
			LDVARUINT16
			LDDICT
			ENDS
			TUPLE 7
		}
		.loc Elector.sol, 1083
		DUP
		ISNULL
		THROWIF 136
		.loc Elector.sol, 1084
		DUP
		ISNULL
		THROWIF 63
		.loc Elector.sol, 1086
		OVER
		HASHCU
		.loc Elector.sol, 1087
		DUP
		SETGLOB 16
		.loc Elector.sol, 1088
		SETINDEX 2
		.loc Elector.sol, 1089
		PUSH2 S7, S0
		INDEX 3
		PUSHPOW2 8
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 256
			LDU 64
			LDVARUINT16
			LDI 1
			ENDS
			TUPLE 4
		}
		.loc Elector.sol, 1090
		DUP
		ISNULL
		PUSHCONT {
			.loc Elector.sol, 1091
			BLKPUSH 2, 0
			ISNULL
			THROWIF 63
			.loc Elector.sol, 1092
			TRUE
			SETINDEX 3
			.loc Elector.sol, 1093
			PUSH3 S0, S2, S2
			INDEX 3
			PUXC S12, S-1
			ROLL 3
			CALLREF {
				UNTUPLE 4
				REVERSE 4, 0
				NEWC
				STU 256
				STU 64
				SWAP
				STVARUINT16
				STI 1
			}
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			SETINDEX 3
			POP S3
			.loc Elector.sol, 1094
			DUP
			THIRD
			PUSH2 S3, S3
			INDEX 5
			ROT
			ADD
			SETINDEX 5
			POP S3
			.loc Elector.sol, 1095
			THIRD
			PUSH2 S2, S2
			INDEX 4
			ROT
			SUB
			SETINDEX 4
			POP S2
			.loc Elector.sol, 0
		}
		IFNOT
		.loc Elector.sol, 1097
		DROP
		GETGLOB 15
		GETGLOB 13
		ROT
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETGLOB 13
		.loc Elector.sol, 1099
		PUSHINT 0
		CONFIGPARAM
		DUP
		PUSHCONT {
			PUSHREF {
			}
			SWAP
		}
		IFNOT
		DROP
		.loc Elector.sol, 1100
		CTOS
		PLDU 256
		PUSHINT -1
		NEWC
		STSLICECONST x9_
		STI 8
		STU 256
		ENDC
		CTOS
		.loc Elector.sol, 1101
		GETGLOB 15
		SWAP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 12720910251328179000044872783962527403085238168343381
		STUR 175
		STU 64
		STREF
		ENDC
		PUSHINT 1
		SENDRAWMSG
		.loc Elector.sol, 0
		BLKDROP 6
	}
	IF
}
IFELSE
.loc Elector.sol, 0
PUSHINT 18
DROPX

.globl	update_reports_014af5da_internal
.type	update_reports_014af5da_internal, @function
CALL $update_reports_014af5da_internal_macro$

.macro update_reports_014af5da_internal_macro
.loc Elector.sol, 974
PUSH3 S0, S0, S0
.loc Elector.sol, 975
PUSHPOW2 8
DICTUMIN
PUSHCONT {
	DUP
	ROT
	PLDDICT
}
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.sol, 976
	BLKPUSH 2, 0
	PUSHINT 8
	DICTUMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		ROT
		LDU 64
		LDDICT
		ENDS
		PAIR
}
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.sol, 977
		DUP
		SECOND
		DUP
		PUSHPOW2 8
		DICTUMIN
		PUSHCONT {
			DUP
			ROT
			PLDU 64
		}
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
		IFELSE
		PUSHCONT {
			PUSH S2
			ISNULL
			NOT
		}
		PUSHCONT {
			.loc Elector.sol, 978
			PUSH2 S14, S1
			EQUAL
			PUSHCONT {
				.loc Elector.sol, 979
				PUSH3 S0, S4, S4
				FIRST
				ROT
				SUB
				SETINDEX 0
				POP S5
				.loc Elector.sol, 980
				PUSH2 S4, S4
				SECOND
				PUSH S16
				SWAP
				PUSHPOW2 8
				DICTUDEL
				DROP
				SETINDEX 1
				POP S5
				.loc Elector.sol, 981
				PUSH3 S5, S8, S4
				.loc Elector.sol, 982
				CALLREF {
					UNPAIR
					SWAP
					NEWC
					STU 64
					STDICT
				}
				ROTREV
				PUSHINT 8
				DICTUSETB
				.loc Elector.sol, 983
				PUSH2 S10, S13
				ROT
				NEWC
				STDICT
				ROTREV
				PUSHPOW2 8
				DICTUSETB
				POP S13
				.loc Elector.sol, 984
				RETALT
				.loc Elector.sol, 0
			}
			IFJMP
			.loc Elector.sol, 0
			PUSH2 S2, S3
			PUSHPOW2 8
			DICTUGETNEXT
			PUSHCONT {
				DUP
				ROT
				PLDU 64
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			BLKDROP2 3, 3
		}
		WHILEBRK
		BLKDROP 4
		.loc Elector.sol, 0
		PUSH2 S2, S3
		PUSHINT 8
		DICTUGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			ROT
			LDU 64
			LDDICT
			ENDS
			PAIR
}
		BLKDROP2 3, 3
	}
	WHILE
	BLKDROP 4
	.loc Elector.sol, 0
	PUSH2 S2, S3
	PUSHPOW2 8
	DICTUGETNEXT
	PUSHCONT {
		DUP
		ROT
		PLDDICT
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILE
BLKDROP 4
.loc Elector.sol, 989
BLKDROP2 2, 1
.loc Elector.sol, 0

.macro get
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 1105
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $get_6d4ce63c_internal_macro$
}
PUSH S7
PUSHCONT {
	PUSH S9
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	REVERSE 8, 0
	NEWC
	STSLICECONST x9510bf28
	STI 1
	SWAP
	UNTUPLE 7
	REVERSE 8, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STDICT
	STDICT
	STU 128
	STU 32
	STU 256
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	BLKDROP 7
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_6d4ce63c_internal
.type	get_6d4ce63c_internal, @function
CALL $get_6d4ce63c_internal_macro$

.macro get_6d4ce63c_internal_macro
.loc Elector.sol, 1116
GETGLOB 10
.loc Elector.sol, 1117
GETGLOB 11
.loc Elector.sol, 1118
GETGLOB 12
.loc Elector.sol, 1119
GETGLOB 13
.loc Elector.sol, 1120
GETGLOB 14
.loc Elector.sol, 1121
GETGLOB 15
.loc Elector.sol, 1122
GETGLOB 16
.loc Elector.sol, 0

.macro get_banned
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 1125
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $get_banned_46830d60_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2209532425
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_banned_46830d60_internal
.type	get_banned_46830d60_internal, @function
CALL $get_banned_46830d60_internal_macro$

.macro get_banned_46830d60_internal_macro
.loc Elector.sol, 1126
GETGLOB 19
.loc Elector.sol, 0

.macro get_buckets
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 1129
LDU 256
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $get_buckets_2f917ad4_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3222122547
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_buckets_2f917ad4_internal
.type	get_buckets_2f917ad4_internal, @function
CALL $get_buckets_2f917ad4_internal_macro$

.macro get_buckets_2f917ad4_internal_macro
.loc Elector.sol, 1130
GETGLOB 20
PUSHPOW2 8
DICTUGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
.loc Elector.sol, 0

.macro get_buckets_workchain
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 1133
LDU 256
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $get_buckets_workchain_88da170e_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3736707536
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_buckets_workchain_88da170e_internal
.type	get_buckets_workchain_88da170e_internal, @function
CALL $get_buckets_workchain_88da170e_internal_macro$

.macro get_buckets_workchain_88da170e_internal_macro
.loc Elector.sol, 1134
GETGLOB 21
PUSHPOW2 8
DICTUGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
.loc Elector.sol, 0

.macro active_election_id
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 1138
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $active_election_id_4f7a6855_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2637787518
	STUR 130
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	active_election_id_4f7a6855_internal
.type	active_election_id_4f7a6855_internal, @function
CALL $active_election_id_4f7a6855_internal_macro$

.macro active_election_id_4f7a6855_internal_macro
.loc Elector.sol, 1139
GETGLOB 10
ZEROSWAPIFNOT
PUSHCONT {
	GETGLOB 11
	FIRST
}
IF
.loc Elector.sol, 0

.macro get_version
DROP
GETGLOB 6
THROWIFNOT 76
.loc Elector.sol, 1143
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $get_version_90179465_internal_macro$
}
PUSH S2
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 98
	STZEROES
	REVERSE 2, 1
	STSLICECONST xabc534f5
	STU 32
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP2
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_version_90179465_internal
.type	get_version_90179465_internal, @function
CALL $get_version_90179465_internal_macro$

.macro get_version_90179465_internal_macro
.loc Elector.sol, 1144
PUSHINT 0
PUSHINT 1
.loc Elector.sol, 0

.macro compute_returned_stake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 1148
LDU 256
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $compute_returned_stake_a73d54da_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3757192781
	STUR 130
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	compute_returned_stake_a73d54da_internal
.type	compute_returned_stake_a73d54da_internal, @function
CALL $compute_returned_stake_a73d54da_internal_macro$

.macro compute_returned_stake_a73d54da_internal_macro
.loc Elector.sol, 1149
GETGLOB 12
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
PUSHCONT {
	LDVARUINT16
	DROP
}
IF
.loc Elector.sol, 1150
DUP
ISNULL
ZEROSWAPIF
PUSHCONT {
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
}
IFNOT
NIP
.loc Elector.sol, 0

.macro on_bounce_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 1154
PLDU 32
.loc Elector.sol, 1155
PUSHINT 4184830756
EQUAL
PUSHCONT {
	.loc Elector.sol, 1156
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.sol, 1157
	SWAP
	EQINT -1
	THROWIFNOT 223
	.loc Elector.sol, 1158
	DEPTH
	ADDCONST -2
	PICK
	UFITS 120
	GETGLOB 12
	NEWC
	ROT
	STVARUINT16
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETGLOB 12
	.loc Elector.sol, 0
}
IF
.loc Elector.sol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro receive_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 1165
CALLREF {
	CALL $process_simple_transfer_c2745595_internal_macro$
}
.loc Elector.sol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro fallback_macro
GETGLOB 6
THROWIFNOT 76
.loc Elector.sol, 1169
DEPTH
ADDCONST -4
PICK
.loc Elector.sol, 1170
DUP
LDU 32
POP S2
.loc Elector.sol, 1171
SWAP
PLDU 64
.loc Elector.sol, 1172
GETGLOB 9
PUSHPOW2DEC 32
SWAP2
SWAP
PUSHINT 0
PUSHINT 64
CALLREF {
	CALL $send_message_back_30631536_internal_macro$
}
.loc Elector.sol, 0
DUP
IFREF {
	CALL $upd_only_time_in_c4$
}

.internal-alias onCodeUpgrade_e5436b53_internal, 2
.internal onCodeUpgrade_e5436b53_internal
.loc Elector.sol, 1176
PUSH S2
PUSHINT 3460525924
PUSH S2
PUSHINT 1313042276
PUSHINT 0
PUSHINT 64
CALLREF {
	CALL $send_message_back_30631536_internal_macro$
}
.loc Elector.sol, 1177
GETGLOB 2
ISNULL
IFNOTREF {
	CALL $c7_to_c4$
}
THROW 0
.loc Elector.sol, 0

.globl	_upgrade_code_5dac022d_internal
.type	_upgrade_code_5dac022d_internal, @function
CALL $_upgrade_code_5dac022d_internal_macro$

.macro _upgrade_code_5dac022d_internal_macro
.loc Elector.sol, 1180
PUSHINT 0
DUP
.loc Elector.sol, 1181
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.sol, 1182
PUSHCONT {
	.loc Elector.sol, 1184
	BLKDROP 5
	FALSE
	.loc Elector.sol, 0
}
IFNOTJMP
.loc Elector.sol, 1186
GETGLOB 9
.loc Elector.sol, 1187
SWAP
CTOS
PLDU 256
.loc Elector.sol, 1188
GETGLOB 9
REWRITESTDADDR
.loc Elector.sol, 1189
SWAP
NEQINT -1
XCHG S2
NEQ
OR
PUSHCONT {
	.loc Elector.sol, 1191
	BLKDROP 5
	FALSE
	.loc Elector.sol, 0
}
IFJMP
.loc Elector.sol, 1193
ACCEPT
.loc Elector.sol, 1194
PUSH S3
SETCODE
.loc Elector.sol, 1195
ROLL 3
CTOS
DUP
PUSHSLICE x8adb35
SDEQ
PUSHCONT {
	PLDREFIDX 1
	CTOS
}
IF
PLDREF
CTOS
BLESS
POP C3
.loc Elector.sol, 1196
ROT
CTOS
ROLL 3
PUSHINT $onCodeUpgrade_e5436b53_internal$
PUSH C3
EXECUTE
.loc Elector.sol, 0

.macro upgrade_code
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.sol, 1199
LDU 64
LDREF
LDREF
ENDS
.loc Elector.sol, 0
CALLREF {
	CALL $upgrade_code_c518c75b_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	upgrade_code_c518c75b_internal
.type	upgrade_code_c518c75b_internal, @function
CALL $upgrade_code_c518c75b_internal_macro$

.macro upgrade_code_c518c75b_internal_macro
.loc Elector.sol, 1199
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.sol, 1201
PUSH S2
ROTREV
CALLREF {
	CALL $_upgrade_code_5dac022d_internal_macro$
}
.loc Elector.sol, 1202
GETGLOB 9
SWAP
PUSHINT 3460525924
PUSHPOW2DEC 32
CONDSEL
ROT
PUSHINT 1313042276
PUSHINT 0
PUSHINT 64
CALLREF {
	CALL $send_message_back_30631536_internal_macro$
}
.loc Elector.sol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDI 1
LDU 32
LDU 32
LDVARUINT16
LDVARUINT16
LDDICT
LDI 1
LDI 1
ROLLREV 7
TUPLE 7
SWAP
LDDICT
LDDICT
LDVARUINT16
LDU 32
LDREF
ENDS
CTOS
LDU 256
LDU 64
LDU 64
LDDICT
LDDICT
LDDICT
ENDS
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 0
	DUP
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	DUP
	TUPLE 7
	NEWDICT
	DUP
	PUSHINT 0
	BLKPUSH 4, 0
	NEWDICT
	BLKPUSH 2, 0
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 21
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STI 1
SWAP
UNTUPLE 7
REVERSE 8, 0
STU 32
STU 32
SWAP
STVARUINT16
SWAP
STVARUINT16
STDICT
STI 1
STI 1
STDICT
STDICT
SWAP
STVARUINT16
STU 32
ROLLREV 6
NEWC
STU 256
STU 64
STU 64
STDICT
STDICT
STDICT
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFJMPREF {
	OVER
	LDSLICE 32
	NIP
	CALL $on_bounce_macro$
}
OVER
SEMPTY ; isEmpty
DUP
PUSHCONT {
	DROP
	OVER
	LDUQ 32  ; [funcId] body' ok
	PUSHCONT {
		DROP
		CALLREF {
			CALL $fallback_macro$
		}
		THROW 0
	}
	IFNOT
	OVER
	EQINT 0 ; funcId body' isZero
	DUP
	PUSHCONT {
		BLKDROP2 2, 1
	}
	IF
}
IFNOT
IFJMPREF {
	CALL $receive_macro$
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
DROP2
CALLREF {
	CALL $fallback_macro$
}

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX
	DUP
	MYADDR
	NEWC
	STSLICE
	STSLICE
	ENDC
	HASHCU
	ROT
	GETGLOB 2
	CHKSIGNU
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
DROP2
CALLREF {
	CALL $fallback_macro$
}

.macro public_function_selector
DUP
PUSHINT 1756716863
LEQ
IFJMPREF {
	DUP
	PUSHINT 490303870
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 62048777
		EQUAL
		IFJMPREF {
			CALL $get_banned$
		}
		DUP
		PUSHINT 353419048
		EQUAL
		IFJMPREF {
			CALL $get$
		}
		DUP
		PUSHINT 369714999
		EQUAL
		IFJMPREF {
			CALL $take_change$
		}
		DUP
		PUSHINT 490303870
		EQUAL
		IFJMPREF {
			CALL $active_election_id$
		}
	}
	DUP
	PUSHINT 1197831204
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 644434731
		EQUAL
		IFJMPREF {
			CALL $report$
		}
		DUP
		PUSHINT 734344437
		EQUAL
		IFJMPREF {
			CALL $get_version$
		}
		DUP
		PUSHINT 1074638899
		EQUAL
		IFJMPREF {
			CALL $get_buckets$
		}
		DUP
		PUSHINT 1197831204
		EQUAL
		IFJMPREF {
			CALL $recover_stake$
		}
	}
	DUP
	PUSHINT 1313042276
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1197831205
		EQUAL
		IFJMPREF {
			CALL $recover_stake_gracefully$
		}
		DUP
		PUSHINT 1197831206
		EQUAL
		IFJMPREF {
			CALL $get_elect_at$
		}
		DUP
		PUSHINT 1198678382
		EQUAL
		IFJMPREF {
			CALL $grant$
		}
		DUP
		PUSHINT 1313042276
		EQUAL
		IFJMPREF {
			CALL $upgrade_code$
		}
	}
	DUP
	PUSHINT 1756716863
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1316189259
		EQUAL
		IFJMPREF {
			CALL $process_new_stake$
		}
		DUP
		PUSHINT 1589223888
		EQUAL
		IFJMPREF {
			CALL $get_buckets_workchain$
		}
		DUP
		PUSHINT 1609709133
		EQUAL
		IFJMPREF {
			CALL $compute_returned_stake$
		}
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
	}
}
DUP
PUSHINT 4000730992
LEQ
IFJMPREF {
	DUP
	PUSHINT 4000730955
	EQUAL
	IFJMPREF {
		CALL $config_set_confirmed_ok$
	}
	DUP
	PUSHINT 4000730956
	EQUAL
	IFJMPREF {
		CALL $config_slash_confirmed_ok$
	}
	DUP
	PUSHINT 4000730991
	EQUAL
	IFJMPREF {
		CALL $config_set_confirmed_err$
	}
	DUP
	PUSHINT 4000730992
	EQUAL
	IFJMPREF {
		CALL $config_slash_confirmed_err$
	}
}


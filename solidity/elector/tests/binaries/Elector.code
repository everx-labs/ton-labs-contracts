.version sol 0.66.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc Elector.tsol, 94
PUSHINT 0
SETGLOB 2
.loc Elector.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	get_current_vset_cb181528_internal
.type	get_current_vset_cb181528_internal, @function
CALL $get_current_vset_cb181528_internal_macro$

.macro get_current_vset_cb181528_internal_macro
.loc Elector.tsol, 106
PUSHINT 35
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.tsol, 107
PUSHCONT {
	.loc Elector.tsol, 108
	PUSHINT 34
	CONFIGPARAM
	DUP
	PUSHCONT {
		PUSHREF {
		}
		SWAP
	}
	IFNOT
	DROP
	NIP
	.loc Elector.tsol, 0
}
IFNOT
.loc Elector.tsol, 110
DUP
CTOS
LDU 8
LDU 32
LDU 32
LDU 16
LDU 16
LDU 64
PLDDICT
TUPLE 7
.loc Elector.tsol, 111
DUP
FIRST
EQINT 18
THROWIFNOT 40
.loc Elector.tsol, 112
TUCK
INDEX 5
ROT
INDEX 6
.loc Elector.tsol, 0

.globl	send_message_back_30631536_internal
.type	send_message_back_30631536_internal, @function
CALL $send_message_back_30631536_internal_macro$

.macro send_message_back_30631536_internal_macro
.loc Elector.tsol, 117
NEWC
.loc Elector.tsol, 118
STSLICECONST x62_
.loc Elector.tsol, 119
ROLL 6
STSLICER
.loc Elector.tsol, 120
ROT
STGRAMS
.loc Elector.tsol, 121
PUSHINT 107
STZEROES
.loc Elector.tsol, 122
ROLL 4
STUR 32
.loc Elector.tsol, 123
ROLL 3
STUR 64
.loc Elector.tsol, 124
ROT
STUR 32
.loc Elector.tsol, 125
ENDC
SWAP
SENDRAWMSG
.loc Elector.tsol, 0

.globl	return_stake_fe624e47_internal
.type	return_stake_fe624e47_internal, @function
CALL $return_stake_fe624e47_internal_macro$

.macro return_stake_fe624e47_internal_macro
.loc Elector.tsol, 129
SWAP
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 4000269644
STUR 143
STU 64
STU 32
ENDC
PUSHINT 64
SENDRAWMSG
.loc Elector.tsol, 0

.globl	send_confirmation_1aa717cd_internal
.type	send_confirmation_1aa717cd_internal, @function
CALL $send_confirmation_1aa717cd_internal_macro$

.macro send_confirmation_1aa717cd_internal_macro
.loc Elector.tsol, 133
SWAP
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 12669519700468838679097577345632051794083291476543564
STUR 175
STU 64
STU 32
ENDC
PUSHINT 2
SENDRAWMSG
.loc Elector.tsol, 0

.macro process_new_stake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 151
OVER
PUSHCONT {
	LDU 64
	LDU 256
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 64
	LDU 256
}
IFELSE
LDU 32
LDU 32
LDU 256
LDREF
LDI 32
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $process_new_stake_6aecb98a_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	process_new_stake_6aecb98a_internal
.type	process_new_stake_6aecb98a_internal, @function
CALL $process_new_stake_6aecb98a_internal_macro$

.macro process_new_stake_6aecb98a_internal_macro
.loc Elector.tsol, 151
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.tsol, 160
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.tsol, 161
	PUSH S2
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	SECOND
	INDEX 7
	NOT
	ROT
	NEQINT -1
	OR
	PUSHCONT {
		.loc Elector.tsol, 164
		ROLL 7
		PUSHINT 0
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 167
	PUSH3 S3, S0, S4
	PUSH S8
	NEWC
	STSLICECONST x654c5074
	STU 32
	STU 32
	STU 256
	STU 256
	.loc Elector.tsol, 168
	ENDC
	CTOS
	ROLL 3
	CTOS
	PUSH S7
	CHKSIGNS
	PUSHCONT {
		.loc Elector.tsol, 170
		ROLL 6
		PUSHINT 1
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.tsol, 0
	}
	IFNOTJMP
	.loc Elector.tsol, 172
	PUSH S3
	PUSHPOW2 16
	LESS
	PUSHCONT {
		.loc Elector.tsol, 174
		ROLL 6
		PUSHINT 6
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 6
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 176
	OVER
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	INDEX2 1, 3
	.loc Elector.tsol, 178
	DEPTH
	ADDCONST -2
	PICK
	PUSHINT 1000000000
	SUB
	.loc Elector.tsol, 179
	DUP
	LSHIFT 12
	PUSH S2
	LESS
	PUSHCONT {
		.loc Elector.tsol, 181
		ROLL 8
		PUSHINT 2
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 8
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 184
	DUP
	UFITS 128
	PUSH S2
	ADD
	POP S2
	.loc Elector.tsol, 185
	ROLL 6
	PUSH S4
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	INDEX2 1, 0
	NEQ
	PUSHCONT {
		.loc Elector.tsol, 187
		ROLL 7
		PUSHINT 3
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 189
	PUSH S3
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	SECOND
	INDEX 6
	PUSHCONT {
		.loc Elector.tsol, 191
		ROLL 7
		PUSHINT 0
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 193
	PUSH2 S6, S3
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	SECOND
	INDEX 4
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDVARUINT16
		LDU 32
		LDU 32
		LDU 256
		LDU 256
		ENDS
		TUPLE 5
	}
	.loc Elector.tsol, 194
	FALSE
	.loc Elector.tsol, 195
	OVER
	ISNULL
	PUSHCONT {
		.loc Elector.tsol, 197
		PUSH2 S1, S1
		ISNULL
		THROWIF 63
		.loc Elector.tsol, 199
		DUP
		FIRST
		PUSH S4
		ADD
		POP S4
		.loc Elector.tsol, 200
		PUXC S5, S-1
		INDEX 3
		NEQ
		NIP
		.loc Elector.tsol, 0
	}
	IFNOT
	.loc Elector.tsol, 202
	PUSHCONT {
		.loc Elector.tsol, 204
		ROLL 8
		PUSHINT 4
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 8
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 206
	DROP
	PUSH2 S0, S3
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	INDEX2 1, 2
	LESS
	PUSHCONT {
		.loc Elector.tsol, 208
		ROLL 7
		PUSHINT 5
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 210
	PUSHINT 17
	CONFIGPARAM
	PUSHCONT {
		CTOS
		LDGRAMS
		LDGRAMS
		LDGRAMS
		LDU 32
		ENDS
		TRUE
	}
	PUSHCONT {
		PUSHINT 0
		BLKPUSH 4, 0
	}
	IFELSE
	BLKDROP 3
	NIP
	.loc Elector.tsol, 211
	PUXC S1, S-1
	GREATER
	PUSHCONT {
		.loc Elector.tsol, 213
		ROLL 7
		PUSHINT 7
		CALLREF {
			CALL $return_stake_fe624e47_internal_macro$
		}
		BLKDROP 7
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 215
	DUP
	THROWIFNOT 44
	.loc Elector.tsol, 216
	ACCEPT
	.loc Elector.tsol, 218
	UFITS 120
	NOW
	ROLL 6
	ROLL 4
	ROLL 6
	TUPLE 5
	PUSH S2
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	DUP
	SECOND
	DUP
	INDEX 4
	ROLL 8
	SWAP
	ROLL 6
	CALLREF {
		UNTUPLE 5
		REVERSE 5, 0
		NEWC
		SWAP
		STVARUINT16
		STU 32
		STU 32
		STU 256
		STU 256
	}
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETINDEX 4
	SETINDEX 1
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STDICT
		SWAP
		UNTUPLE 10
		REVERSE 11, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 256
		STU 32
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	DUP
	SETGLOB 10
	.loc Elector.tsol, 220
	PUXC S2, S-1
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	DUP
	SECOND
	FALSE
	SETINDEX 5
	SETINDEX 1
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STDICT
		SWAP
		UNTUPLE 10
		REVERSE 11, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 256
		STU 32
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	DUP
	SETGLOB 10
	.loc Elector.tsol, 221
	PUXC S2, S-1
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	DUP
	SECOND
	FALSE
	SETINDEX 6
	SETINDEX 1
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STDICT
		SWAP
		UNTUPLE 10
		REVERSE 11, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 256
		STU 32
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	SETGLOB 10
	.loc Elector.tsol, 222
	UFITS 120
	SWAP
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	DUP
	SECOND
	ROLL 4
	SETINDEX 3
	SETINDEX 1
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STDICT
		SWAP
		UNTUPLE 10
		REVERSE 11, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 256
		STU 32
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	SETGLOB 10
	.loc Elector.tsol, 224
	DUP
	PUSHCONT {
		.loc Elector.tsol, 225
		PUSHINT 0
		CALLREF {
			CALL $send_confirmation_1aa717cd_internal_macro$
		}
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 0
	DROP
	.loc Elector.tsol, 151
}
CALLX
.loc Elector.tsol, 0

.globl	unfreeze_without_bonuses_a32f4563_internal
.type	unfreeze_without_bonuses_a32f4563_internal, @function
CALL $unfreeze_without_bonuses_a32f4563_internal_macro$

.macro unfreeze_without_bonuses_a32f4563_internal_macro
.loc Elector.tsol, 232
PUSHINT 0
PUSH2 S0, S2
.loc Elector.tsol, 234
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 256
	LDU 64
	LDVARUINT16
	LDI 1
	ENDS
	TUPLE 4
	PAIR
}
.loc Elector.tsol, 235
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.tsol, 236
	DUP
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.tsol, 237
	DUP
	INDEX 3
	PUSHCONT {
		.loc Elector.tsol, 238
		DUP
		THIRD
		PUSH S3
		ADD
		POP S3
	}
	PUSHCONT {
		.loc Elector.tsol, 240
		DUP
		FIRST
		OVER
		THIRD
		.loc Elector.tsol, 147
		UFITS 120
		SWAP
		GETGLOB 11
		DUP2
		PUSHPOW2 8
		DICTUGET
		ZEROSWAPIFNOT
		PUSHCONT {
			LDVARUINT16
			DROP
		}
		IF
		ROLL 3
		ADD
		NEWC
		SWAP
		STVARUINT16
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 11
		.loc Elector.tsol, 241
		DUP
		THIRD
		PUSH S4
		ADD
		POP S4
	}
	IFELSE
	.loc Elector.tsol, 243
	DROP
	PUSH S4
	PUSHPOW2 8
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
		PAIR
	}
	.loc Elector.tsol, 0
}
WHILE
.loc Elector.tsol, 245
DROP
XCHG S2
EQUAL
THROWIFNOT 59
.loc Elector.tsol, 246
NIP
.loc Elector.tsol, 0

.globl	unfreeze_with_bonuses_a6255a42_internal
.type	unfreeze_with_bonuses_a6255a42_internal, @function
CALL $unfreeze_with_bonuses_a6255a42_internal_macro$

.macro unfreeze_with_bonuses_a6255a42_internal_macro
.loc Elector.tsol, 252
PUSHINT 0
BLKPUSH 2, 0
.loc Elector.tsol, 255
PUSH S5
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 256
	LDU 64
	LDVARUINT16
	LDI 1
	ENDS
	TUPLE 4
	PAIR
}
.loc Elector.tsol, 256
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.tsol, 257
	DUP
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.tsol, 258
	DUP
	INDEX 3
	PUSHCONT {
		.loc Elector.tsol, 259
		DUP
		THIRD
		PUSH S4
		ADD
		POP S4
	}
	PUSHCONT {
		.loc Elector.tsol, 261
		PUSH2 S5, S0
		THIRD
		PUSH S8
		MULDIVMOD
		DROP
		.loc Elector.tsol, 262
		PUSH2 S3, S0
		ADD
		POP S4
		.loc Elector.tsol, 263
		OVER
		FIRST
		PUSH S2
		THIRD
		ROT
		ADD
		.loc Elector.tsol, 147
		UFITS 120
		SWAP
		GETGLOB 11
		DUP2
		PUSHPOW2 8
		DICTUGET
		ZEROSWAPIFNOT
		PUSHCONT {
			LDVARUINT16
			DROP
		}
		IF
		ROLL 3
		ADD
		NEWC
		SWAP
		STVARUINT16
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 11
		.loc Elector.tsol, 264
		DUP
		THIRD
		PUSH S5
		ADD
		POP S5
	}
	IFELSE
	.loc Elector.tsol, 266
	DROP
	PUSH S6
	PUSHPOW2 8
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
		PAIR
	}
	.loc Elector.tsol, 0
}
WHILE
.loc Elector.tsol, 268
DROP
ROT
ROLL 4
EQUAL
PUSH2 S1, S3
LEQ
AND
THROWIFNOT 59
.loc Elector.tsol, 269
XCHG S2
ADD
SUBR
NIP
.loc Elector.tsol, 0

.globl	stakes_sum_8b3419f4_internal
.type	stakes_sum_8b3419f4_internal, @function
CALL $stakes_sum_8b3419f4_internal_macro$

.macro stakes_sum_8b3419f4_internal_macro
.loc Elector.tsol, 273
PUSHINT 0
.loc Elector.tsol, 274
OVER
PUSHPOW2 8
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 256
	LDU 64
	LDVARUINT16
	LDI 1
	ENDS
	TUPLE 4
	PAIR
}
.loc Elector.tsol, 275
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.tsol, 276
	DUP
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.tsol, 277
	THIRD
	PUSH S2
	ADD
	POP S2
	.loc Elector.tsol, 278
	PUSH S2
	PUSHPOW2 8
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 256
		LDU 64
		LDVARUINT16
		LDI 1
		ENDS
		TUPLE 4
		PAIR
	}
	.loc Elector.tsol, 0
}
WHILE
.loc Elector.tsol, 280
DROP
NIP
.loc Elector.tsol, 0

.globl	unfreeze_all_4c140ed0_internal
.type	unfreeze_all_4c140ed0_internal, @function
CALL $unfreeze_all_4c140ed0_internal_macro$

.macro unfreeze_all_4c140ed0_internal_macro
.loc Elector.tsol, 285
DUP2
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
FIRST
PUSHINT 32
DICTUGET
NULLSWAPIFNOT
IFREF {
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
}
.loc Elector.tsol, 286
DUP
ISNULL
PUSHCONT {
	.loc Elector.tsol, 287
	BLKDROP 3
	PUSHINT 0
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 289
SWAP
GETGLOB 10
DUP2
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
DUP
FIRST
ROLL 5
SWAP
PUSHINT 32
DICTUDEL
DROP
SETINDEX 0
CALLREF {
	UNPAIR
	SWAP
	NEWC
	STDICT
	SWAP
	UNTUPLE 10
	REVERSE 11, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 256
	STU 32
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.tsol, 290
DUP
ISNULL
THROWIF 63
.loc Elector.tsol, 291
DUP
INDEX 4
.loc Elector.tsol, 293
OVER
INDEX 5
GTINT 0
PUSHCONT {
	.loc Elector.tsol, 294
	OVER
	INDEX 3
	XCHG S2
	INDEX 5
	CALLREF {
		CALL $unfreeze_with_bonuses_a6255a42_internal_macro$
	}
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 296
SWAP
INDEX 3
SWAP
CALLREF {
	CALL $unfreeze_without_bonuses_a32f4563_internal_macro$
}
.loc Elector.tsol, 0

.globl	config_set_confirmed_724b1541_internal
.type	config_set_confirmed_724b1541_internal, @function
CALL $config_set_confirmed_724b1541_internal_macro$

.macro config_set_confirmed_724b1541_internal_macro
.loc Elector.tsol, 300
GETGLOB 9
REWRITESTDADDR
.loc Elector.tsol, 301
PUSHINT 0
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.tsol, 302
CTOS
PLDU 256
.loc Elector.tsol, 304
ROT
NEQINT -1
ROTREV
NEQ
OR
DUP
PUSHCONT {
	DROP
	DUP
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	SECOND
	INDEX 7
	NOT
}
IFNOT
PUSHCONT {
	.loc Elector.tsol, 307
	BLKDROP 3
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 309
DUP
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
INDEX2 1, 0
ROLL 3
NEQ
DUP
PUSHCONT {
	DROP
	DUP
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	SECOND
	INDEX 6
	NOT
}
IFNOT
PUSHCONT {
	.loc Elector.tsol, 311
	DROP2
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 313
ACCEPT
.loc Elector.tsol, 314
SWAP
PUSHCONT {
	.loc Elector.tsol, 316
	DUP
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	INDEX2 1, 0
	OVER
	CALLREF {
		CALL $unfreeze_all_4c140ed0_internal_macro$
	}
	UFITS 120
	GETGLOB 12
	ADD
	SETGLOB 12
	.loc Elector.tsol, 317
	DUP
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	DUP
	SECOND
	FALSE
	SETINDEX 7
	SETINDEX 1
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STDICT
		SWAP
		UNTUPLE 10
		REVERSE 11, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 256
		STU 32
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	SETGLOB 10
	.loc Elector.tsol, 0
}
IFNOT
.loc Elector.tsol, 0
DROP

.macro config_set_confirmed_ok
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 322
LDU 64
LDI 32
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $config_set_confirmed_ok_1de27b15_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_set_confirmed_ok_1de27b15_internal
.type	config_set_confirmed_ok_1de27b15_internal, @function
CALL $config_set_confirmed_ok_1de27b15_internal_macro$

.macro config_set_confirmed_ok_1de27b15_internal_macro
.loc Elector.tsol, 322
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.tsol, 324
TRUE
SWAP
CALLREF {
	CALL $config_set_confirmed_724b1541_internal_macro$
}
.loc Elector.tsol, 0

.macro config_set_confirmed_err
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 327
LDU 64
LDI 32
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $config_set_confirmed_err_19f44931_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_set_confirmed_err_19f44931_internal
.type	config_set_confirmed_err_19f44931_internal, @function
CALL $config_set_confirmed_err_19f44931_internal_macro$

.macro config_set_confirmed_err_19f44931_internal_macro
.loc Elector.tsol, 327
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.tsol, 329
FALSE
SWAP
CALLREF {
	CALL $config_set_confirmed_724b1541_internal_macro$
}
.loc Elector.tsol, 0

.macro config_slash_confirmed_ok
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 332
LDU 64
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $config_slash_confirmed_ok_19ef6a25_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_slash_confirmed_ok_19ef6a25_internal
.type	config_slash_confirmed_ok_19ef6a25_internal, @function
CALL $config_slash_confirmed_ok_19ef6a25_internal_macro$

.macro config_slash_confirmed_ok_19ef6a25_internal_macro
.loc Elector.tsol, 332
DROP
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.tsol, 0

.macro config_slash_confirmed_err
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 336
LDU 64
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $config_slash_confirmed_err_3407cd03_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	config_slash_confirmed_err_3407cd03_internal
.type	config_slash_confirmed_err_3407cd03_internal, @function
CALL $config_slash_confirmed_err_3407cd03_internal_macro$

.macro config_slash_confirmed_err_3407cd03_internal_macro
.loc Elector.tsol, 336
DROP
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.tsol, 0

.macro grant
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 340
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $grant_30c3eaa8_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	grant_30c3eaa8_internal
.type	grant_30c3eaa8_internal, @function
CALL $grant_30c3eaa8_internal_macro$

.macro grant_30c3eaa8_internal_macro
.loc Elector.tsol, 340
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.tsol, 341
DEPTH
ADDCONST -2
PICK
UFITS 120
GETGLOB 12
ADD
SETGLOB 12
.loc Elector.tsol, 0

.macro take_change
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 344
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $take_change_670f0dd2_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	take_change_670f0dd2_internal
.type	take_change_670f0dd2_internal, @function
CALL $take_change_670f0dd2_internal_macro$

.macro take_change_670f0dd2_internal_macro
.loc Elector.tsol, 344
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.tsol, 0

.macro recover_stake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 369
LDU 64
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $recover_stake_c7b13017_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	recover_stake_c7b13017_internal
.type	recover_stake_c7b13017_internal, @function
CALL $recover_stake_c7b13017_internal_macro$

.macro recover_stake_c7b13017_internal_macro
.loc Elector.tsol, 369
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.tsol, 371
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.tsol, 372
	SWAP
	NEQINT -1
	PUSHCONT {
		.loc Elector.tsol, 374
		GETGLOB 9
		PUSHINT 4294967294
		ROLL 3
		PUSHINT 1197831204
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.tsol, 375
		DROP
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 378
	DUP
	GETGLOB 11
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		LDVARUINT16
		DROP
	}
	IF
	.loc Elector.tsol, 379
	DUP
	ISNULL
	PUSHCONT {
		.loc Elector.tsol, 381
		GETGLOB 9
		PUSHINT 4294967294
		ROLL 4
		PUSHINT 1197831204
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.tsol, 382
		DROP2
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 384
	SWAP
	GETGLOB 11
	PUSHPOW2 8
	DICTUDEL
	DROP
	SETGLOB 11
	.loc Elector.tsol, 386
	DUP
	ISNULL
	THROWIF 63
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 4184830756
	STUR 139
	STU 64
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.tsol, 369
}
CALLX
.loc Elector.tsol, 0

.macro recover_stake_gracefully
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 389
LDU 64
LDU 32
LDI 32
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $recover_stake_gracefully_fa654196_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	recover_stake_gracefully_fa654196_internal
.type	recover_stake_gracefully_fa654196_internal, @function
CALL $recover_stake_gracefully_fa654196_internal_macro$

.macro recover_stake_gracefully_fa654196_internal_macro
.loc Elector.tsol, 389
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.tsol, 391
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.tsol, 392
	SWAP
	NEQINT -1
	PUSHCONT {
		.loc Elector.tsol, 394
		GETGLOB 9
		PUSHINT 4294967294
		ROLL 5
		PUSHINT 1197831205
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.tsol, 395
		BLKDROP 3
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 397
	DUP
	GETGLOB 11
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		LDVARUINT16
		DROP
	}
	IF
	.loc Elector.tsol, 398
	DUP
	ISNULL
	PUSHCONT {
		.loc Elector.tsol, 400
		SWAP2
		GETGLOB 10
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		FIRST
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 32
			LDU 32
			LDU 256
			LDDICT
			LDVARUINT16
			LDVARUINT16
			LDDICT
			ENDS
			TUPLE 7
		}
		.loc Elector.tsol, 401
		DUP
		ISNULL
		PUSHCONT {
			.loc Elector.tsol, 402
			GETGLOB 9
			PUSHINT 4294967294
			ROLL 5
			PUSHINT 1197831205
			PUSHINT 0
			PUSHINT 64
			CALLREF {
				CALL $send_message_back_30631536_internal_macro$
			}
			.loc Elector.tsol, 403
			BLKDROP 3
			.loc Elector.tsol, 0
		}
		IFJMP
		.loc Elector.tsol, 405
		DUP
		ISNULL
		THROWIF 63
		.loc Elector.tsol, 406
		GETGLOB 9
		PUSHINT 4294967293
		ROLL 5
		ROLL 3
		FIRST
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.tsol, 407
		DROP2
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 409
	SWAP
	GETGLOB 11
	PUSHPOW2 8
	DICTUDEL
	DROP
	SETGLOB 11
	.loc Elector.tsol, 411
	ROLL 3
	XCPU S1, S0
	ISNULL
	THROWIF 63
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	SWAP
	STGRAMS
	PUSHINT 4184830756
	STUR 139
	STU 64
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.tsol, 0
	DROP2
	.loc Elector.tsol, 389
}
CALLX
.loc Elector.tsol, 0

.macro get_elect_at
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 414
LDU 64
LDI 32
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $get_elect_at_dece8bab_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	get_elect_at_dece8bab_internal
.type	get_elect_at_dece8bab_internal, @function
CALL $get_elect_at_dece8bab_internal_macro$

.macro get_elect_at_dece8bab_internal_macro
.loc Elector.tsol, 414
DEPTH
ADDCONST -5
PICK
THROWIF 72
PUSHCONT {
	.loc Elector.tsol, 416
	GETGLOB 9
	REWRITESTDADDR
	DROP
	.loc Elector.tsol, 417
	NEQINT -1
	PUSHCONT {
		.loc Elector.tsol, 419
		GETGLOB 9
		PUSHINT 4294967292
		ROLL 3
		PUSHINT 1197831206
		PUSHINT 0
		PUSHINT 64
		CALLREF {
			CALL $send_message_back_30631536_internal_macro$
		}
		.loc Elector.tsol, 420
		DROP
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 422
	DUP
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	INDEX2 1, 0
	SWAP
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	SECOND
	INDEX 7
	ROT
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 4163016210
	STUR 143
	STU 64
	STI 1
	STU 32
	ENDC
	PUSHINT 64
	SENDRAWMSG
	.loc Elector.tsol, 414
}
CALLX
.loc Elector.tsol, 0

.globl	conduct_elections_ec3c98f3_internal
.type	conduct_elections_ec3c98f3_internal, @function
CALL $conduct_elections_ec3c98f3_internal_macro$

.macro conduct_elections_ec3c98f3_internal_macro
.loc Elector.tsol, 618
PUSHINT 0
.loc Elector.tsol, 619
OVER
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
SECOND
.loc Elector.tsol, 620
NOW
OVER
SECOND
LESS
PUSHCONT {
	.loc Elector.tsol, 622
	BLKDROP 3
	FALSE
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 624
PUSHINT 0
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
NIP
.loc Elector.tsol, 625
DUP
PUSHCONT {
	.loc Elector.tsol, 627
	PUSHINT 1
	.loc Elector.tsol, 429
	HEXDUMP
	BLKDROP 5
	.loc Elector.tsol, 430
	FALSE
	.loc Elector.tsol, 0
}
IFNOTJMP
.loc Elector.tsol, 629
PUSHINT 17
CONFIGPARAM
PUSHCONT {
	CTOS
	LDGRAMS
	LDGRAMS
	LDGRAMS
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
DROP
.loc Elector.tsol, 631
PUSH S5
INDEX 3
PUSH S2
LESS
PUSHCONT {
	.loc Elector.tsol, 633
	PUSHINT 2
	.loc Elector.tsol, 429
	HEXDUMP
	BLKDROP 9
	.loc Elector.tsol, 430
	FALSE
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 635
PUSH S5
INDEX 5
PUSHCONT {
	.loc Elector.tsol, 637
	PUSHINT 3
	.loc Elector.tsol, 429
	HEXDUMP
	BLKDROP 9
	.loc Elector.tsol, 430
	FALSE
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 639
PUSH S5
INDEX 6
PUSHCONT {
	.loc Elector.tsol, 641
	BLKDROP 8
	FALSE
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 643
BLKPUSH 4, 3
PUSH S11
PUSHCONT {
	NEWDICT
	PUSHINT 0
	NEWDICT
	PUSHINT 0
	DUP
	.loc Elector.tsol, 483
	PUSHINT 16
	CONFIGPARAM
	DUP
	PUSHCONT {
		PUSHREF {
		}
		SWAP
	}
	IFNOT
	DROP
	.loc Elector.tsol, 484
	DUP
	CTOS
	LDU 16
	LDU 16
	PLDU 16
	NIP
	.loc Elector.tsol, 485
	PUSHINT 1
	MAX
	.loc Elector.tsol, 486
	PUSHINT 0
	.loc Elector.tsol, 487
	NEWDICT
	.loc Elector.tsol, 488
	PUSH S10
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	SECOND
	INDEX 4
	.loc Elector.tsol, 489
	BLKPUSH 2, 0
	PUSHPOW2 8
	DICTUMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		ROT
		LDVARUINT16
		LDU 32
		LDU 32
		LDU 256
		LDU 256
		ENDS
		TUPLE 5
}
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.tsol, 490
		UNTUPLE 5
		.loc Elector.tsol, 491
		ROT
		PUSH S20
		MIN
		ROTREV
		TRIPLE
		PUSH S7
		SWAP2
		FITS 32
		NEGATE
		ROLL 4
		TRIPLE
		CALLREF {
			UNTRIPLE
			XCHG S2
			NEWC
			STU 128
			STI 32
			STU 256
		}
		ENDC
		CTOS
		XCHG S2
		CALLREF {
			UNTRIPLE
			XCHG S2
			NEWC
			STU 32
			STU 256
			STU 256
		}
		ROTREV
		PUSHINT 416
		DICTSETB
		POP S4
		.loc Elector.tsol, 493
		PUSH S4
		INC
		POP S5
		.loc Elector.tsol, 0
		PUSH2 S0, S1
		PUSHPOW2 8
		DICTUGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			ROT
			LDVARUINT16
			LDU 32
			LDU 32
			LDU 256
			LDU 256
			ENDS
			TUPLE 5
}
		BLKDROP2 1, 3
	}
	WHILE
	BLKDROP 4
	.loc Elector.tsol, 495
	PUSH2 S2, S4
	MIN
	POP S3
	.loc Elector.tsol, 496
	PUSH2 S2, S3
	LESS
	PUSHCONT {
		.loc Elector.tsol, 499
		NEWDICT
		PUSHINT 0
		NEWDICT
		PUSHINT 0
		DUP
		PUSHINT 16
		PUSHINT 5
		BLKSWX
		PUSHINT 16
		DROPX
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 501
	NULL
	.loc Elector.tsol, 502
	PUSH2 S2, S2
	PUSHINT 416
	DICTMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		LDU 128
		LDI 32
		LDU 256
		ENDS
		TRIPLE
		ROT
		LDU 32
		LDU 256
		LDU 256
		ENDS
		TRIPLE
}
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.tsol, 503
		OVER
		FIRST
		PUSH S20
		MIN
		.loc Elector.tsol, 504
		OVER
		FIRST
		ROLL 3
		THIRD
		ROLL 3
		THIRD
		PUSH S6
		TUPLE 5
		POP S3
		.loc Elector.tsol, 0
		PUSH2 S0, S1
		PUSHINT 416
		DICTGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			LDU 128
			LDI 32
			LDU 256
			ENDS
			TRIPLE
			ROT
			LDU 32
			LDU 256
			LDU 256
			ENDS
			TRIPLE
}
		BLKDROP2 1, 3
	}
	WHILE
	BLKDROP 4
	.loc Elector.tsol, 514
	PUSHINT 0
	BLKPUSH 2, 0
	.loc Elector.tsol, 517
	PUSH S3
	.loc Elector.tsol, 519
	PUSHINT 0
	.loc Elector.tsol, 520
	NEWDICT
	.loc Elector.tsol, 521
	PUSHINT 0
	.loc Elector.tsol, 523
	PUSHINT 1
	PUSHCONT {
		PUSH2 S0, S11
		LEQ
	}
	PUSHCONT {
		.loc Elector.tsol, 524
		PUSH2 S4, S4
		ISNULL
		THROWIF 63
		.loc Elector.tsol, 525
		DUP
		FIRST
		.loc Elector.tsol, 526
		DUP
		PUSH S27
		LESS
		PUSHCONT {
			.loc Elector.tsol, 527
			DROP2
			RETALT
			.loc Elector.tsol, 0
		}
		IFJMP
		.loc Elector.tsol, 529
		OVER
		SECOND
		.loc Elector.tsol, 530
		PUSH S2
		INDEX 4
		POP S8
		.loc Elector.tsol, 532
		PUSH2 S6, S1
		ADD
		POP S7
		.loc Elector.tsol, 533
		OVER
		PUSHPOW2 16
		MUL
		PUSHINT 1000000000000000000
		MUL
		OVER
		DIV
		.loc Elector.tsol, 534
		BLKPUSH 2, 2
		PAIR
		PUSH3 S7, S1, S5
		PAIR
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STU 256
			STU 16
		}
		ENDC
		CTOS
		XCHG S2
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STU 128
			STU 32
		}
		ROTREV
		PUSHINT 272
		DICTSETB
		POP S7
		.loc Elector.tsol, 536
		PUSHCONT {
			PUSH S6
			DICTEMPTY
			NOT
		}
		PUSHCONT {
			.loc Elector.tsol, 537
			PUSH S6
			PUSHINT 272
			DICTMAX
			NULLSWAPIFNOT
			IFREF {
				LDU 256
				LDU 16
				ENDS
				PAIR
				SWAP
				LDU 128
				LDU 32
				ENDS
				PAIR
				PAIR
			}
			DUP
			ISNULL
			THROWIF 63
			UNPAIR
			.loc Elector.tsol, 538
			SWAP
			FIRST
			PUSH S4
			PUSHINT 1000000000000000000
			MUL
			LESS
			PUSHCONT {
				.loc Elector.tsol, 539
				DROP
				RETALT
				.loc Elector.tsol, 0
			}
			IFJMP
			.loc Elector.tsol, 541
			DUP
			FIRST
			PUSH S9
			SUBR
			POP S9
			.loc Elector.tsol, 542
			PUSH S7
			PUSHINT 272
			DICTREMMAX
			NULLSWAPIFNOT
			IFREF {
				LDU 256
				LDU 16
				ENDS
				PAIR
				SWAP
				LDU 128
				LDU 32
				ENDS
				PAIR
				PAIR
			}
			DROP
			POP S8
			.loc Elector.tsol, 543
			SECOND
			PUSH S6
			ADD
			POP S6
			.loc Elector.tsol, 0
		}
		WHILEBRK
		.loc Elector.tsol, 546
		DROP2
		PUSH3 S5, S0, S3
		MUL
		RSHIFT 16
		UFITS 128
		ADD
		.loc Elector.tsol, 547
		PUSH2 S3, S15
		EQUAL
		PUSH2 S1, S10
		GREATER
		OR
		PUSHCONT {
			.loc Elector.tsol, 548
			DUP
			POP S10
			.loc Elector.tsol, 549
			PUSH S3
			POP S9
			.loc Elector.tsol, 550
			OVER
			POP S11
			.loc Elector.tsol, 0
		}
		IF
		.loc Elector.tsol, 0
		BLKDROP 3
		.loc Elector.tsol, 523
		INC
		.loc Elector.tsol, 0
	}
	WHILEBRK
	BLKDROP 4
	.loc Elector.tsol, 554
	OVER
	EQINT 0
	PUSH S3
	PUSHINT 20
	ROLLX
	LESS
	OR
	PUSHCONT {
		.loc Elector.tsol, 557
		NEWDICT
		PUSHINT 0
		NEWDICT
		PUSHINT 0
		DUP
		PUSHINT 20
		PUSHINT 5
		BLKSWX
		PUSHINT 20
		DROPX
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 563
	PUSH S2
	.loc Elector.tsol, 564
	PUSHINT 0
	POP S4
	.loc Elector.tsol, 565
	PUSH S5
	POP S2
	.loc Elector.tsol, 566
	PUSH S2
	PUSHCONT {
		.loc Elector.tsol, 567
		PUSH2 S1, S1
		ISNULL
		THROWIF 63
		.loc Elector.tsol, 568
		DUP
		FIRST
		PUSH2 S6, S1
		SECOND
		MUL
		RSHIFT 16
		MIN
		PUSH S5
		ADD
		POP S5
		.loc Elector.tsol, 569
		INDEX 4
		POP S2
		.loc Elector.tsol, 0
	}
	REPEAT
	.loc Elector.tsol, 571
	PUSH S3
	SUB
	ABS
	PUSHINT 1000000000
	LEQ
	THROWIFNOT 666
	.loc Elector.tsol, 575
	DROP
	PUSHINT 0
	BLKPUSH 2, 0
	.loc Elector.tsol, 578
	NEWDICT
	DUP
	.loc Elector.tsol, 580
	GETGLOB 11
	.loc Elector.tsol, 581
	PUSHCONT {
		.loc Elector.tsol, 582
		PUSH2 S9, S9
		ISNULL
		THROWIF 63
		UNTUPLE 5
		.loc Elector.tsol, 583
		POP S14
		.loc Elector.tsol, 585
		PUSH2 S1, S14
		PUSHPOW2 8
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDVARUINT16
			LDU 32
			LDU 32
			LDU 256
			LDU 256
			ENDS
			TUPLE 5
		}
		.loc Elector.tsol, 586
		DUP
		ISNULL
		THROWIF 61
		.loc Elector.tsol, 587
		DUP
		ISNULL
		THROWIF 63
		INDEX 3
		.loc Elector.tsol, 588
		PUSH2 S10, S11
		LESS
		PUSHCONT {
			.loc Elector.tsol, 590
			BLKPUSH 2, 4
			PUSH S15
			MUL
			RSHIFT 16
			MIN
			.loc Elector.tsol, 591
			PUSH2 S5, S0
			SUB
			POP S6
			.loc Elector.tsol, 592
			DUP
			LSHIFT 60
			PUSH S14
			DIV
			.loc Elector.tsol, 593
			PUSH2 S11, S1
			ADD
			POP S12
			.loc Elector.tsol, 594
			PUSH2 S10, S0
			ADD
			POP S11
			.loc Elector.tsol, 595
			NEWC
			.loc Elector.tsol, 596
			PUSH S4
			GTINT 0
			PUSHCONT {
				.loc Elector.tsol, 597
				PUSHINT 115
				PUSHINT 2390828938
				PUSH2 S7, S3
				UFITS 64
				PUSH S8
				REVERSE 6, 0
				STU 8
				STU 32
				STU 256
				STU 64
				STU 256
			}
			PUSHCONT {
				.loc Elector.tsol, 600
				PUSHINT 83
				PUSHINT 2390828938
				PUSH2 S7, S3
				UFITS 64
				REVERSE 5, 0
				STU 8
				STU 32
				STU 256
				STU 64
			}
			IFELSE
			.loc Elector.tsol, 603
			ENDC
			CTOS
			PUSH2 S13, S10
			PUSHINT 16
			DICTUSET
			POP S10
			.loc Elector.tsol, 604
			PUXC S2, S-1
			UFITS 64
			ROT
			UFITS 120
			FALSE
			TUPLE 4
			PUSH2 S3, S7
			ROT
			CALLREF {
				UNTUPLE 4
				REVERSE 4, 0
				NEWC
				STU 256
				STU 64
				SWAP
				STVARUINT16
				STI 1
			}
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			POP S7
			.loc Elector.tsol, 0
		}
		IF
		.loc Elector.tsol, 606
		PUSH S4
		GTINT 0
		PUSHCONT {
			.loc Elector.tsol, 609
			PUSH S4
			UFITS 120
			PUSH3 S1, S6, S1
			OVER
			PUSHPOW2 8
			DICTUGET
			ZEROSWAPIFNOT
			PUSHCONT {
				LDVARUINT16
				DROP
			}
			IF
			ROLL 3
			ADD
			NEWC
			SWAP
			STVARUINT16
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			POP S6
			.loc Elector.tsol, 0
		}
		IF
		.loc Elector.tsol, 611
		BLKDROP 5
		PUSH S5
		INC
		POP S6
		.loc Elector.tsol, 0
		PUSH S9
		ISNULL
	}
	UNTIL
	.loc Elector.tsol, 613
	SETGLOB 11
	.loc Elector.tsol, 614
	PUSH S3
	ROLL 7
	EQUAL
	THROWIFNOT 49
	.loc Elector.tsol, 615
	XCHG S2
	UFITS 64
	SWAP
	ROLL 4
	REVERSE 6, 0
	PUSHINT 18
	PUSHINT 5
	BLKSWX
	PUSHINT 18
	DROPX
	.loc Elector.tsol, 475
}
CALLX
.loc Elector.tsol, 653
DUP
EQINT 0
PUXC S11, S-1
SETINDEX 5
POP S11
.loc Elector.tsol, 654
PUSH S10
INDEX 5
NOT
PUXC S11, S-1
SETINDEX 6
POP S11
.loc Elector.tsol, 655
PUSH2 S10, S12
GETGLOB 10
DUP2
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
ROLL 3
SETINDEX 1
CALLREF {
	UNPAIR
	SWAP
	NEWC
	STDICT
	SWAP
	UNTUPLE 10
	REVERSE 11, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 256
	STU 32
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.tsol, 656
DUP
PUSHCONT {
	.loc Elector.tsol, 658
	PUSHINT 4
	.loc Elector.tsol, 429
	HEXDUMP
	BLKDROP 14
	.loc Elector.tsol, 430
	FALSE
	.loc Elector.tsol, 0
}
IFNOTJMP
.loc Elector.tsol, 660
ROLL 10
FIRST
.loc Elector.tsol, 98
PUSHINT 15
CONFIGPARAM
PUSHCONT {
	CTOS
	LDU 32
	LDU 32
	LDU 32
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
DROP
.loc Elector.tsol, 0
BLKDROP2 1, 2
.loc Elector.tsol, 665
NOW
ROT
ADD
ADDCONST -60
PUSH S3
MAX
.loc Elector.tsol, 666
PUSHINT 16
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.tsol, 667
CTOS
LDU 16
PLDU 16
NIP
.loc Elector.tsol, 671
PUSH S9
ROLL 9
PUSH2 S7, S2
MIN
ROLL 8
PUSH2 S5, S7
ADD
PUSH S6
NEWC
STSLICECONST x12
STU 32
STU 32
STU 16
STU 16
STU 64
STDICT
.loc Elector.tsol, 679
ENDC
.loc Elector.tsol, 681
PUSHINT 0
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.tsol, 682
CTOS
PLDU 256
.loc Elector.tsol, 683
PUSH2 S1, S6
PUSH S18
.loc Elector.tsol, 142
ROLL 3
PUSHINT -1
NEWC
STSLICECONST x9_
STI 8
STU 256
ENDC
CTOS
.loc Elector.tsol, 143
SWAP
ROLLREV 3
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 12720910251328179000044872783962527403085238168343380
STUR 175
STU 64
STREF
STI 32
ENDC
PUSHINT 1
SENDRAWMSG
.loc Elector.tsol, 686
ROT
ROLL 4
ADD
PUSH S3
ADD
PUSHINT 0
BLKPUSH 2, 0
NEWDICT
PUSHINT 0
DUP
NEWDICT
TUPLE 7
SWAP
SETINDEX 0
.loc Elector.tsol, 687
ROLL 3
SETINDEX 1
.loc Elector.tsol, 688
SWAP
HASHCU
SETINDEX 2
.loc Elector.tsol, 689
ROLL 4
SETINDEX 3
.loc Elector.tsol, 690
ROLL 3
UFITS 120
SETINDEX 4
.loc Elector.tsol, 692
GETGLOB 10
ROLL 11
TUCK
OVER
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
DUP
FIRST
ROLL 6
SWAP
ROLL 5
CALLREF {
	UNTUPLE 7
	REVERSE 7, 0
	NEWC
	STU 32
	STU 32
	STU 256
	STDICT
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
}
ROTREV
PUSHINT 32
DICTUSETB
SETINDEX 0
CALLREF {
	UNPAIR
	SWAP
	NEWC
	STDICT
	SWAP
	UNTUPLE 10
	REVERSE 11, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 256
	STU 32
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.tsol, 694
NEWDICT
.loc Elector.tsol, 695
SETGLOB 15
.loc Elector.tsol, 696
NEWDICT
.loc Elector.tsol, 697
DUP
SETGLOB 16
.loc Elector.tsol, 698
SETGLOB 17
.loc Elector.tsol, 700
PUSHINT 0
BLKPUSH 2, 0
.loc Elector.tsol, 703
ROLL 4
DUP
PUSHINT 16
DICTUMIN
PUSHCONT {
	DUP
	ROT
}
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.tsol, 704
	BLKPUSH 2, 0
	.loc Elector.tsol, 949
	LDU 8
	POP S2
	.loc Elector.tsol, 950
	DUP
	EQINT 83
	SWAP
	EQINT 115
	OR
	THROWIFNOT 131
	.loc Elector.tsol, 951
	LDU 32
	LDU 256
	PLDU 64
	.loc Elector.tsol, 952
	ROT
	PUSHINT 2390828938
	EQUAL
	THROWIFNOT 131
	.loc Elector.tsol, 953
	NIP
	.loc Elector.tsol, 705
	PUSH2 S5, S8
	LESS
	PUSHCONT {
		.loc Elector.tsol, 706
		PUSH2 S7, S0
		ADD
		POP S8
	}
	PUSHCONT {
		.loc Elector.tsol, 708
		PUSH2 S6, S0
		ADD
		POP S7
	}
	IFELSE
	.loc Elector.tsol, 710
	DROP
	PUSH S4
	INC
	POP S5
	.loc Elector.tsol, 0
	PUSH2 S2, S3
	PUSHINT 16
	DICTUGETNEXT
	PUSHCONT {
		DUP
		ROT
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILE
BLKDROP 5
.loc Elector.tsol, 712
SWAP
SETGLOB 13
.loc Elector.tsol, 713
SETGLOB 14
.loc Elector.tsol, 715
BLKDROP 7
TRUE
.loc Elector.tsol, 0

.globl	update_active_vset_id_f30acacd_internal
.type	update_active_vset_id_f30acacd_internal, @function
CALL $update_active_vset_id_f30acacd_internal_macro$

.macro update_active_vset_id_f30acacd_internal_macro
.loc Elector.tsol, 718
PUSHINT 0
.loc Elector.tsol, 719
PUSHINT 100
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.tsol, 721
DUP
CTOS
PLDDICT
.loc Elector.tsol, 725
PUSH2 S3, S0
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDU 8
	LDU 32
	LDU 32
	LDU 16
	LDU 16
	LDU 64
	LDDICT
	ENDS
	TUPLE 7
}
{
	PUSHINT 0
	BLKPUSH 5, 0
	NEWDICT
	TUPLE 7
}
NEWC
SWAP
UNTUPLE 7
REVERSE 8, 0
STU 8
STU 32
STU 32
STU 16
STU 16
STU 64
STDICT
.loc Elector.tsol, 727
DUP
ENDC
HASHCU
.loc Elector.tsol, 728
PUSH2 S0, S5
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
SECOND
INDEX 8
EQUAL
PUSHCONT {
	.loc Elector.tsol, 730
	BLKDROP 6
	FALSE
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 733
PUSH S5
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
SECOND
INDEX 9
.loc Elector.tsol, 734
DUP
PUSHCONT {
	.loc Elector.tsol, 737
	PUSH2 S0, S6
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	FIRST
	PUSHINT 32
	DICTUGET
	NULLSWAPIFNOT
	IFREF {
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
	}
	.loc Elector.tsol, 738
	DUP
	ISNULL
	PUSHCONT {
		.loc Elector.tsol, 739
		BLKPUSH 2, 0
		ISNULL
		THROWIF 63
		.loc Elector.tsol, 741
		DUP
		THIRD
		PUSH S9
		GETGLOB 10
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		SECOND
		INDEX 8
		EQUAL
		THROWIFNOT 57
		.loc Elector.tsol, 742
		NOW
		OVER
		SECOND
		ADD
		SETINDEX 0
		.loc Elector.tsol, 745
		PUSH S8
		GETGLOB 10
		DUP2
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		DUP
		FIRST
		PUXC S6, S-1
		ROLL 5
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETINDEX 0
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STDICT
			SWAP
			UNTUPLE 10
			REVERSE 11, 0
			STU 32
			STU 32
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
			STI 1
			STI 1
			STI 1
			STU 256
			STU 32
		}
		ROTREV
		PUSHINT 32
		DICTISETB
		SETGLOB 10
		.loc Elector.tsol, 0
	}
	IFNOT
	.loc Elector.tsol, 0
	DROP
}
IF
.loc Elector.tsol, 751
PUSH S6
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
FIRST
PUSHINT 32
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
	PAIR
}
.loc Elector.tsol, 752
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.tsol, 753
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.tsol, 754
	DUP
	THIRD
	PUSH S5
	EQUAL
	PUSHCONT {
		.loc Elector.tsol, 756
		GETGLOB 12
		RSHIFT 3
		.loc Elector.tsol, 757
		DUP
		UFITS 120
		GETGLOB 12
		SUBR
		SETGLOB 12
		.loc Elector.tsol, 758
		UFITS 120
		XCPU S1, S0
		INDEX 5
		ROT
		ADD
		SETINDEX 5
		.loc Elector.tsol, 761
		PUSH S9
		GETGLOB 10
		DUP2
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		DUP
		FIRST
		BLKSWAP 2, 4
		XCHG S1, S2
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETINDEX 0
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STDICT
			SWAP
			UNTUPLE 10
			REVERSE 11, 0
			STU 32
			STU 32
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
			STI 1
			STI 1
			STI 1
			STU 256
			STU 32
		}
		ROTREV
		PUSHINT 32
		DICTISETB
		SETGLOB 10
		.loc Elector.tsol, 763
		RETALT
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 767
	DROP
	PUSH S8
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	FIRST
	PUSHINT 32
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
		PAIR
	}
	NIP
	.loc Elector.tsol, 0
}
WHILEBRK
.loc Elector.tsol, 769
DUP
ISNULL
PUSHCONT {
	.loc Elector.tsol, 773
	PUSH S7
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	DUP
	SECOND
	PUSHINT 0
}
PUSHCONT {
	.loc Elector.tsol, 770
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	UNPAIR
	DROP
	.loc Elector.tsol, 771
	PUSH S8
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	DUP
	SECOND
	ROLL 4
}
IFELSE
SETINDEX 9
SETINDEX 1
CALLREF {
	UNPAIR
	SWAP
	NEWC
	STDICT
	SWAP
	UNTUPLE 10
	REVERSE 11, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 256
	STU 32
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.tsol, 775
DROP2
GETGLOB 10
ROLL 6
TUCK
OVER
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
DUP
SECOND
ROLL 4
SETINDEX 8
SETINDEX 1
CALLREF {
	UNPAIR
	SWAP
	NEWC
	STDICT
	SWAP
	UNTUPLE 10
	REVERSE 11, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 256
	STU 32
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.tsol, 776
BLKDROP 4
TRUE
.loc Elector.tsol, 0

.globl	validator_set_installed_5127c547_internal
.type	validator_set_installed_5127c547_internal, @function
CALL $validator_set_installed_5127c547_internal_macro$

.macro validator_set_installed_5127c547_internal_macro
.loc Elector.tsol, 780
DUP
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
SECOND
INDEX 6
PUSHCONT {
	.loc Elector.tsol, 782
	DROP
	FALSE
	.loc Elector.tsol, 0
}
IFNOTJMP
.loc Elector.tsol, 786
DUP
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
INDEX2 1, 0
OVER
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
FIRST
PUSHINT 32
DICTUGET
NULLSWAPIFNOT
IFREF {
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
}
.loc Elector.tsol, 787
DUP
ISNULL
PUSHCONT {
	.loc Elector.tsol, 789
	DROP2
	FALSE
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 791
DUP
ISNULL
THROWIF 63
.loc Elector.tsol, 793
PUSHINT 34
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.tsol, 794
PUSHINT 36
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.tsol, 795
SWAP2
SWAP
HASHCU
PUSH S4
THIRD
EQUAL
AND
XCHG S2
HASHCU
ROLL 3
THIRD
EQUAL
AND
OR
PUSHCONT {
	.loc Elector.tsol, 798
	DUP
	GETGLOB 10
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	DUP
	SECOND
	FALSE
	SETINDEX 7
	SETINDEX 1
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STDICT
		SWAP
		UNTUPLE 10
		REVERSE 11, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 256
		STU 32
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	DUP
	SETGLOB 10
	.loc Elector.tsol, 800
	PUXC S1, S-1
	DUP2
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	SETINDEX 1
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STDICT
		SWAP
		UNTUPLE 10
		REVERSE 11, 0
		STU 32
		STU 32
		SWAP
		STVARUINT16
		SWAP
		STVARUINT16
		STDICT
		STI 1
		STI 1
		STI 1
		STU 256
		STU 32
	}
	ROTREV
	PUSHINT 32
	DICTISETB
	SETGLOB 10
	.loc Elector.tsol, 801
	CALLREF {
		CALL $update_active_vset_id_f30acacd_internal_macro$
	}
	DROP
	.loc Elector.tsol, 802
	TRUE
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 804
DROP
FALSE
.loc Elector.tsol, 0

.globl	check_unfreeze_f3540bfa_internal
.type	check_unfreeze_f3540bfa_internal, @function
CALL $check_unfreeze_f3540bfa_internal_macro$

.macro check_unfreeze_f3540bfa_internal_macro
.loc Elector.tsol, 810
DUP
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
FIRST
PUSHINT 32
DICTUMIN
NULLSWAPIFNOT
IFREF {
	SWAP
	LDU 32
	LDU 32
	LDU 256
	LDDICT
	LDVARUINT16
	LDVARUINT16
	LDDICT
	ENDS
	TUPLE 7
	PAIR
}
.loc Elector.tsol, 811
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.tsol, 812
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
	UNPAIR
	.loc Elector.tsol, 813
	FIRST
	NOW
	LEQ
	DUP
	PUSHCONT {
		DROP
		PUSH2 S0, S2
		GETGLOB 10
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		SECOND
		INDEX 9
		NEQ
	}
	IF
	PUSHCONT {
		.loc Elector.tsol, 815
		PUSH S2
		CALLREF {
			CALL $unfreeze_all_4c140ed0_internal_macro$
		}
		UFITS 120
		GETGLOB 12
		ADD
		SETGLOB 12
		.loc Elector.tsol, 817
		RETALT
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 821
	PUSH S2
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	FIRST
	PUSHINT 32
	DICTUGETNEXT
	NULLSWAPIFNOT
	IFREF {
		SWAP
		LDU 32
		LDU 32
		LDU 256
		LDDICT
		LDVARUINT16
		LDVARUINT16
		LDDICT
		ENDS
		TUPLE 7
		PAIR
	}
	NIP
	.loc Elector.tsol, 0
}
WHILEBRK
DROP2
.loc Elector.tsol, 0

.globl	announce_new_elections_78458639_internal
.type	announce_new_elections_78458639_internal, @function
CALL $announce_new_elections_78458639_internal_macro$

.macro announce_new_elections_78458639_internal_macro
.loc Elector.tsol, 826
PUSHINT 36
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
NIP
.loc Elector.tsol, 827
PUSHCONT {
	.loc Elector.tsol, 829
	DROP
	FALSE
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 831
PUSHINT 1
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.tsol, 832
CTOS
PLDU 256
.loc Elector.tsol, 833
MYADDR
REWRITESTDADDR
.loc Elector.tsol, 834
SWAP
NEQINT -1
XCHG S2
NEQ
OR
PUSHCONT {
	.loc Elector.tsol, 836
	DROP
	FALSE
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 838
PUSHINT 34
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.tsol, 839
PUSHCONT {
	.loc Elector.tsol, 840
	DROP2
	FALSE
	.loc Elector.tsol, 0
}
IFNOTJMP
.loc Elector.tsol, 98
PUSHINT 15
CONFIGPARAM
PUSHCONT {
	CTOS
	LDU 32
	LDU 32
	LDU 32
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
DROP2
.loc Elector.tsol, 100
BLKDROP2 1, 2
.loc Elector.tsol, 843
ROT
CTOS
LDU 40
PLDU 32
NIP
.loc Elector.tsol, 844
NOW
.loc Elector.tsol, 845
XCPU S1, S3
SUB
.loc Elector.tsol, 846
DUP2
LESS
PUSHCONT {
	.loc Elector.tsol, 848
	BLKDROP 5
	FALSE
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 851
DUP2
SUB
LESSINT 60
PUSHCONT {
	.loc Elector.tsol, 853
	DUP
	POP S2
	.loc Elector.tsol, 0
}
IF
.loc Elector.tsol, 856
DROP
PUSHINT 17
CONFIGPARAM
PUSHCONT {
	CTOS
	LDGRAMS
	LDGRAMS
	LDGRAMS
	LDU 32
	ENDS
	TRUE
}
PUSHCONT {
	PUSHINT 0
	BLKPUSH 4, 0
}
IFELSE
BLKDROP 4
.loc Elector.tsol, 858
SWAP
ROLL 3
ADD
.loc Elector.tsol, 860
DUP
ROLL 3
SUB
.loc Elector.tsol, 863
ROT
UFITS 120
PUSHINT 0
NEWDICT
FALSE
DUP
TRUE
PUSHREF {
}
HASHCU
PUSHINT 0
TUPLE 10
.loc Elector.tsol, 875
SWAP
GETGLOB 10
DUP2
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
ROLL 3
SETINDEX 1
CALLREF {
	UNPAIR
	SWAP
	NEWC
	STDICT
	SWAP
	UNTUPLE 10
	REVERSE 11, 0
	STU 32
	STU 32
	SWAP
	STVARUINT16
	SWAP
	STVARUINT16
	STDICT
	STI 1
	STI 1
	STI 1
	STU 256
	STU 32
}
ROTREV
PUSHINT 32
DICTISETB
SETGLOB 10
.loc Elector.tsol, 876
TRUE
.loc Elector.tsol, 0

.internal-alias :onTickTock, -2
.internal :onTickTock
PUSHINT -2
PUSH S2
CALLREF {
	CALL $c4_to_c7$
}
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
PUSHCONT {
	.loc Elector.tsol, 880
	DROP
	GETGLOB 10
	DUP
	PUSHINT 32
	DICTIMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		ROT
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
	FALSE ; decl return flag
	PUSHCONT {
		PUSH S3
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.tsol, 882
		OVER
		SECOND
		INDEX 7
		PUSHCONT {
			.loc Elector.tsol, 884
			PUSH S2
			CALLREF {
				CALL $conduct_elections_ec3c98f3_internal_macro$
			}
			PUSHCONT {
				.loc Elector.tsol, 887
				BLKDROP 5
				PUSHINT 4
				RETALT
				.loc Elector.tsol, 0
			}
			IFJMP
			.loc Elector.tsol, 889
			PUSH S2
			CALLREF {
				CALL $validator_set_installed_5127c547_internal_macro$
			}
			PUSHCONT {
				.loc Elector.tsol, 891
				BLKDROP 5
				PUSHINT 4
				RETALT
				.loc Elector.tsol, 0
			}
			IFJMP
			.loc Elector.tsol, 0
		}
		PUSHCONT {
			.loc Elector.tsol, 894
			PUSH S2
			CALLREF {
				CALL $announce_new_elections_78458639_internal_macro$
			}
			PUSHCONT {
				.loc Elector.tsol, 896
				BLKDROP 5
				PUSHINT 4
				RETALT
				.loc Elector.tsol, 0
			}
			IFJMP
			.loc Elector.tsol, 0
		}
		IFELSE
		.loc Elector.tsol, 899
		PUSH S2
		CALLREF {
			CALL $update_active_vset_id_f30acacd_internal_macro$
		}
		PUSHCONT {
			.loc Elector.tsol, 901
			BLKDROP 5
			PUSHINT 4
			RETALT
			.loc Elector.tsol, 0
		}
		IFJMP
		.loc Elector.tsol, 903
		PUSH S2
		CALLREF {
			CALL $check_unfreeze_f3540bfa_internal_macro$
		}
		.loc Elector.tsol, 0
		PUSH2 S3, S4
		PUSHINT 32
		DICTIGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			ROT
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
		POP S4
		POP S4
		POP S4
	}
	WHILEBRK
	IFRET
	BLKDROP 4
	.loc Elector.tsol, 879
}
CALLX
.loc Elector.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro report
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 956
OVER
PUSHCONT {
	LDU 256
	LDREF
	ENDS
	CTOS
	LDU 256
	LDU 256
}
PUSHCONT {
	LDU 256
	LDU 256
	LDU 256
	LDREF
	ENDS
	CTOS
}
IFELSE
LDU 256
LDU 8
LDI 32
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $report_fdf16703_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	report_fdf16703_internal
.type	report_fdf16703_internal, @function
CALL $report_fdf16703_internal_macro$

.macro report_fdf16703_internal_macro
.loc Elector.tsol, 956
DEPTH
ADDCONST -5
PICK
EQINT -1
THROWIFNOT 71
.loc Elector.tsol, 965
CALLREF {
	CALL $get_current_vset_cb181528_internal_macro$
}
DROP2
.loc Elector.tsol, 966
DUP
CTOS
LDU 8
LDU 32
LDU 32
LDU 16
LDU 16
LDU 64
PLDDICT
TUPLE 7
.loc Elector.tsol, 967
DUP
FIRST
EQINT 18
THROWIFNOT 131
.loc Elector.tsol, 970
DUP
SECOND
NOW
LESS
NOW
PUSH S2
THIRD
LESS
AND
THROWIFNOT 139
.loc Elector.tsol, 973
PUSH2 S6, S7
NEWC
STU 256
STU 256
.loc Elector.tsol, 975
PUSH3 S4, S5, S6
NEWC
STU 256
STU 256
STU 8
.loc Elector.tsol, 976
DUP
ENDC
CTOS
PUSH S2
ENDC
CTOS
PUSH S9
CHKSIGNS
THROWIFNOT 34
.loc Elector.tsol, 979
ACCEPT
.loc Elector.tsol, 982
PUSH S7
GETGLOB 15
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
NIP
NOT
PUSHINT 137
.loc Elector.tsol, 942
SWAP
PUSHCONT {
	.loc Elector.tsol, 943
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.tsol, 944
	DUP
	PUSHINT 2
	MAX
	THROWANY
	.loc Elector.tsol, 0
}
IFNOT
.loc Elector.tsol, 0
DROP
.loc Elector.tsol, 985
PUSH S6
GETGLOB 15
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
NIP
NOT
PUSHINT 138
.loc Elector.tsol, 942
SWAP
PUSHCONT {
	.loc Elector.tsol, 943
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.tsol, 944
	DUP
	PUSHINT 2
	MAX
	THROWANY
	.loc Elector.tsol, 0
}
IFNOT
.loc Elector.tsol, 0
DROP
.loc Elector.tsol, 988
PUSHINT 0
PUSH2 S0, S3
.loc Elector.tsol, 990
INDEX 6
DUP
PUSHINT 16
DICTUMIN
PUSHCONT {
	DUP
	ROT
}
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.tsol, 991
	BLKPUSH 2, 0
	.loc Elector.tsol, 949
	LDU 8
	POP S2
	.loc Elector.tsol, 950
	DUP
	EQINT 83
	SWAP
	EQINT 115
	OR
	THROWIFNOT 131
	.loc Elector.tsol, 951
	LDU 32
	LDU 256
	PLDU 64
	.loc Elector.tsol, 952
	ROT
	PUSHINT 2390828938
	EQUAL
	THROWIFNOT 131
	.loc Elector.tsol, 992
	XCPU S1, S15
	EQUAL
	PUSHCONT {
		.loc Elector.tsol, 993
		POP S6
		.loc Elector.tsol, 994
		RETALT
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 996
	DROP
	PUSH S4
	INC
	POP S5
	.loc Elector.tsol, 0
	PUSH2 S2, S3
	PUSHINT 16
	DICTUGETNEXT
	PUSHCONT {
		DUP
		ROT
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILEBRK
BLKDROP 4
.loc Elector.tsol, 998
OVER
GTINT 0
THROWIFNOT 135
.loc Elector.tsol, 1001
PUSHINT 0
PUSH2 S0, S5
.loc Elector.tsol, 1003
INDEX 6
DUP
PUSHINT 16
DICTUMIN
PUSHCONT {
	DUP
	ROT
}
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.tsol, 1004
	BLKPUSH 2, 0
	.loc Elector.tsol, 949
	LDU 8
	POP S2
	.loc Elector.tsol, 950
	DUP
	EQINT 83
	OVER
	EQINT 115
	OR
	THROWIFNOT 131
	.loc Elector.tsol, 951
	SWAP
	LDU 32
	LDU 256
	PLDU 64
	.loc Elector.tsol, 952
	DROP
	SWAP
	PUSHINT 2390828938
	EQUAL
	THROWIFNOT 131
	.loc Elector.tsol, 953
	NIP
	.loc Elector.tsol, 1005
	PUSH S15
	EQUAL
	PUSHCONT {
		.loc Elector.tsol, 1006
		TRUE
		POP S5
		.loc Elector.tsol, 1007
		RETALT
		.loc Elector.tsol, 0
	}
	IFJMP
	.loc Elector.tsol, 1009
	PUSH S5
	INC
	POP S6
	.loc Elector.tsol, 0
	PUSH2 S2, S3
	PUSHINT 16
	DICTUGETNEXT
	PUSHCONT {
		DUP
		ROT
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILEBRK
BLKDROP 4
.loc Elector.tsol, 1011
DUP
THROWIFNOT 133
.loc Elector.tsol, 1013
PUSHINT 16
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
DROP
.loc Elector.tsol, 1014
DUP
CTOS
LDU 16
LDU 16
PLDU 16
BLKDROP2 2, 1
.loc Elector.tsol, 1015
PUSH2 S4, S8
INDEX 4
LESS
PUSHCONT {
	.loc Elector.tsol, 1016
	PUSH2 S11, S12
	GETGLOB 16
	PUSHPOW2 8
	DICTUGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	PUSHINT 8
	DICTUGET
IFREFELSEREF
{
		LDU 64
		LDDICT
		ENDS
		PAIR
}
{
		PUSHINT 0
		NEWDICT
		PAIR
}
	.loc Elector.tsol, 1017
	PUSH2 S14, S0
	SECOND
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	.loc Elector.tsol, 1019
	DUP
	ISNULL
	PUSHINT 140
	.loc Elector.tsol, 942
	SWAP
	PUSHCONT {
		.loc Elector.tsol, 943
		CALLREF {
			CALL $c7_to_c4$
		}
		COMMIT
		.loc Elector.tsol, 944
		DUP
		PUSHINT 2
		MAX
		THROWANY
		.loc Elector.tsol, 0
	}
	IFNOT
	.loc Elector.tsol, 0
	DROP
	.loc Elector.tsol, 1021
	PUSH3 S7, S1, S1
	FIRST
	ROT
	ADD
	SETINDEX 0
	POP S2
	.loc Elector.tsol, 1022
	PUSH3 S7, S1, S1
	SECOND
	PUSH S18
	SWAP
	ROLL 3
	NEWC
	STU 64
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETINDEX 1
	POP S2
	.loc Elector.tsol, 1023
	PUSH2 S1, S14
	GETGLOB 16
	DUP2
	PUSHPOW2 8
	DICTUGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	PUSH S17
	SWAP
	ROLL 4
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STU 64
		STDICT
	}
	ROTREV
	PUSHINT 8
	DICTUSETB
	NEWC
	STDICT
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETGLOB 16
	.loc Elector.tsol, 1024
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.tsol, 1026
	OVER
	FIRST
	GETGLOB 13
	PUSHINT 2
	PUSHINT 3
	MULDIV
	GEQ
	PUSHCONT {
		.loc Elector.tsol, 1029
		PUSH S10
		INDEX 4
		PUSH S3
		GREATER
		THROWIFNOT 141
		.loc Elector.tsol, 1030
		PUSH S14
		GETGLOB 15
		NEWC
		STONE
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 15
		.loc Elector.tsol, 1031
		PUSH3 S14, S5, S12
		.loc Elector.tsol, 1079
		CALLREF {
			CALL $get_current_vset_cb181528_internal_macro$
		}
		.loc Elector.tsol, 1080
		PUSH S2
		CTOS
		LDU 8
		LDU 32
		LDU 32
		LDU 16
		LDU 16
		LDU 64
		PLDDICT
		TUPLE 7
		.loc Elector.tsol, 1082
		PUSHINT 16
		CONFIGPARAM
		DUP
		PUSHCONT {
			PUSHREF {
			}
			SWAP
		}
		IFNOT
		DROP
		.loc Elector.tsol, 1083
		DUP
		CTOS
		LDU 16
		LDU 16
		PLDU 16
		BLKDROP2 2, 1
		.loc Elector.tsol, 1084
		PUSH S2
		INDEX 3
		OVER
		GREATER
		THROWIFNOT 141
		.loc Elector.tsol, 1086
		FALSE
		DUP
		.loc Elector.tsol, 1088
		PUSHCONT {
			.loc Elector.tsol, 1090
			PUSH2 S9, S2
			LESS
			PUSHCONT {
				.loc Elector.tsol, 1091
				PUSH S2
				DEC
				POP S3
				.loc Elector.tsol, 1092
				PUSH S10
				GETGLOB 16
				CALLREF {
					CALL $update_reports_014af5da_internal_macro$
				}
				SETGLOB 16
			}
			PUSHCONT {
				.loc Elector.tsol, 1094
				PUSH S10
				GETGLOB 17
				CALLREF {
					CALL $update_reports_014af5da_internal_macro$
				}
				SETGLOB 17
			}
			IFELSE
			.loc Elector.tsol, 1097
			NEWDICT
			.loc Elector.tsol, 1098
			PUSHINT 0
			BLKPUSH 2, 0
			.loc Elector.tsol, 1100
			POP S10
			.loc Elector.tsol, 1101
			PUSHINT 0
			POP S4
			.loc Elector.tsol, 1102
			PUSH2 S8, S8
			PUSHINT 16
			DICTUMIN
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			PUSHCONT {
				PUSH S2
				ISNULL
				NOT
			}
			PUSHCONT {
				.loc Elector.tsol, 1103
				BLKPUSH 2, 0
				.loc Elector.tsol, 949
				LDU 8
				POP S2
				.loc Elector.tsol, 950
				DUP
				EQINT 83
				SWAP
				EQINT 115
				OR
				THROWIFNOT 131
				.loc Elector.tsol, 951
				LDU 32
				LDU 256
				PLDU 64
				.loc Elector.tsol, 952
				ROT
				PUSHINT 2390828938
				EQUAL
				THROWIFNOT 131
				.loc Elector.tsol, 1105
				SWAP
				GETGLOB 15
				PUSHPOW2 8
				DICTUGET
				NULLSWAPIFNOT
				NIP
				PUSHCONT {
					.loc Elector.tsol, 1106
					PUSH3 S1, S8, S7
					PUSHINT 16
					DICTUSET
					POP S8
					.loc Elector.tsol, 1107
					PUSH2 S14, S0
					ADD
					POP S15
					.loc Elector.tsol, 1108
					PUSH2 S8, S12
					INDEX 4
					LESS
					PUSHCONT {
						.loc Elector.tsol, 1109
						PUSH2 S6, S0
						ADD
						POP S7
					}
					PUSHCONT {
						.loc Elector.tsol, 1111
						PUSH2 S5, S0
						ADD
						POP S6
					}
					IFELSE
					.loc Elector.tsol, 1113
					PUSH S8
					INC
					POP S9
					.loc Elector.tsol, 0
				}
				IFNOT
				.loc Elector.tsol, 0
				DROP
				PUSH2 S2, S3
				PUSHINT 16
				DICTUGETNEXT
				PUSHCONT {
					DUP
					ROT
				}
				PUSHCONT {
					NULL
					BLKPUSH 2, 0
				}
				IFELSE
				BLKDROP2 3, 3
			}
			WHILE
			BLKDROP 4
			.loc Elector.tsol, 1116
			PUSH2 S3, S5
			GEQ
			THROWIFNOT 141
			.loc Elector.tsol, 1117
			OVER
			SETGLOB 13
			.loc Elector.tsol, 1118
			DUP
			SETGLOB 14
			.loc Elector.tsol, 1120
			PUSHINT 0
			POP S4
			.loc Elector.tsol, 1121
			GETGLOB 16
			.loc Elector.tsol, 1122
			GETGLOB 13
			PUSHINT 2
			PUSHINT 3
			MULDIV
			.loc Elector.tsol, 1124
			PUSH2 S4, S4
			PUSHINT 16
			DICTUMIN
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			PUSHCONT {
				PUSH S2
				ISNULL
				NOT
			}
			PUSHCONT {
				PUSHCONT {
					.loc Elector.tsol, 1125
					LDU 8
					LDU 32
					LDU 256
					LDU 64
					LDU 256
					ROLLREV 5
					TUPLE 5
					.loc Elector.tsol, 1126
					DUP
					FIRST
					NEQINT 83
					THROWIFNOT 131
					.loc Elector.tsol, 1127
					PUSH2 S10, S12
					EQUAL
					PUSHCONT {
						.loc Elector.tsol, 1128
						GETGLOB 14
						PUSHINT 1
						PUSHINT 3
						MULDIV
						POP S6
						.loc Elector.tsol, 1130
						GETGLOB 17
						POP S7
						.loc Elector.tsol, 0
					}
					IF
					.loc Elector.tsol, 1132
					DUP
					THIRD
					PUSH S7
					PUSHPOW2 8
					DICTUGET
					PUSHCONT {
						PLDDICT
					}
					PUSHCONT {
						NEWDICT
					}
					IFELSE
					SINGLE
					.loc Elector.tsol, 1133
					DUP
					ISNULL
					PUSHCONT {
						.loc Elector.tsol, 1134
						BLKPUSH 2, 0
						ISNULL
						THROWIF 63
						UNSINGLE
						DUP
						PUSHINT 8
						DICTUMIN
						PUSHCONT {
							NULL
							BLKPUSH 2, 0
						}
IFREFELSE {
							DUP
							ROT
							LDU 64
							LDDICT
							ENDS
							PAIR
}
						PUSHCONT {
							PUSH S2
							ISNULL
							NOT
						}
						PUSHCONT {
							.loc Elector.tsol, 1136
							DUP
							FIRST
							PUSH S11
							GEQ
							PUSHCONT {
								.loc Elector.tsol, 1137
								GETGLOB 15
								PUSH S6
								THIRD
								SWAP
								NEWC
								STONE
								ROTREV
								PUSHPOW2 8
								DICTUSETB
								SETGLOB 15
								.loc Elector.tsol, 1138
								TRUE
								POP S17
								.loc Elector.tsol, 1139
								PUSH S5
								THIRD
								POP S26
								.loc Elector.tsol, 1140
								PUSH S15
								POP S25
								.loc Elector.tsol, 1141
								PUSH S14
								POP S21
								.loc Elector.tsol, 1142
								RETALT
								.loc Elector.tsol, 0
							}
							IFJMP
							.loc Elector.tsol, 0
							PUSH2 S2, S3
							PUSHINT 8
							DICTUGETNEXT
							PUSHCONT {
								NULL
								BLKPUSH 2, 0
							}
IFREFELSE {
								DUP
								ROT
								LDU 64
								LDDICT
								ENDS
								PAIR
}
							BLKDROP2 3, 3
						}
						WHILEBRK
						BLKDROP 4
						.loc Elector.tsol, 0
					}
					IFNOT
					.loc Elector.tsol, 1146
					DROP2
					PUSH S10
					IFRET
					.loc Elector.tsol, 1149
					PUSH S9
					INC
					POP S10
					.loc Elector.tsol, 0
				}
				CALLX
				PUSH2 S2, S3
				PUSHINT 16
				DICTUGETNEXT
				PUSHCONT {
					DUP
					ROT
				}
				PUSHCONT {
					NULL
					BLKPUSH 2, 0
				}
				IFELSE
				BLKDROP2 3, 3
			}
			WHILE
			BLKDROP 8
			.loc Elector.tsol, 1151
			POP S6
			.loc Elector.tsol, 0
			OVER
			NOT
		}
		UNTIL
		.loc Elector.tsol, 1154
		PUSHINT 0
		BLKPUSH 5, 0
		NEWDICT
		TUPLE 7
		.loc Elector.tsol, 1155
		PUSHINT 18
		SETINDEX 0
		.loc Elector.tsol, 1156
		NOW
		ADDCONST 60
		SETINDEX 1
		.loc Elector.tsol, 1157
		PUSH S5
		THIRD
		SETINDEX 2
		.loc Elector.tsol, 1158
		ROLL 7
		SETINDEX 5
		.loc Elector.tsol, 1159
		OVER
		SETINDEX 3
		.loc Elector.tsol, 1160
		SWAP
		ROLL 5
		INDEX 4
		MIN
		SETINDEX 4
		.loc Elector.tsol, 1161
		ROLL 4
		SETINDEX 6
		.loc Elector.tsol, 1164
		NEWC
		SWAP
		UNTUPLE 7
		REVERSE 8, 0
		STU 8
		STU 32
		STU 32
		STU 16
		STU 16
		STU 64
		STDICT
		.loc Elector.tsol, 1165
		ENDC
		.loc Elector.tsol, 1167
		PUSH S5
		GETGLOB 10
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		SECOND
		INDEX 9
		.loc Elector.tsol, 1168
		PUSH2 S0, S6
		GETGLOB 10
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		FIRST
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 32
			LDU 32
			LDU 256
			LDDICT
			LDVARUINT16
			LDVARUINT16
			LDDICT
			ENDS
			TUPLE 7
		}
		.loc Elector.tsol, 1169
		DUP
		ISNULL
		THROWIF 136
		.loc Elector.tsol, 1170
		DUP
		ISNULL
		THROWIF 63
		.loc Elector.tsol, 1172
		PUSH S2
		HASHCU
		.loc Elector.tsol, 1173
		PUSH2 S0, S8
		GETGLOB 10
		DUP2
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		DUP
		SECOND
		ROLL 4
		SETINDEX 8
		SETINDEX 1
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STDICT
			SWAP
			UNTUPLE 10
			REVERSE 11, 0
			STU 32
			STU 32
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
			STI 1
			STI 1
			STI 1
			STU 256
			STU 32
		}
		ROTREV
		PUSHINT 32
		DICTISETB
		SETGLOB 10
		.loc Elector.tsol, 1174
		SETINDEX 2
		.loc Elector.tsol, 1175
		PUSH2 S9, S0
		INDEX 3
		PUSHPOW2 8
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 256
			LDU 64
			LDVARUINT16
			LDI 1
			ENDS
			TUPLE 4
		}
		.loc Elector.tsol, 1176
		DUP
		ISNULL
		PUSHCONT {
			.loc Elector.tsol, 1177
			BLKPUSH 2, 0
			ISNULL
			THROWIF 63
			.loc Elector.tsol, 1178
			TRUE
			SETINDEX 3
			.loc Elector.tsol, 1179
			PUSH3 S0, S2, S2
			INDEX 3
			PUXC S14, S-1
			ROLL 3
			CALLREF {
				UNTUPLE 4
				REVERSE 4, 0
				NEWC
				STU 256
				STU 64
				SWAP
				STVARUINT16
				STI 1
			}
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			SETINDEX 3
			POP S3
			.loc Elector.tsol, 1180
			DUP
			THIRD
			PUSH2 S3, S3
			INDEX 5
			ROT
			ADD
			SETINDEX 5
			POP S3
			.loc Elector.tsol, 1181
			THIRD
			PUSH2 S2, S2
			INDEX 4
			ROT
			SUB
			SETINDEX 4
			POP S2
			.loc Elector.tsol, 0
		}
		IFNOT
		.loc Elector.tsol, 1185
		DROP
		GETGLOB 10
		ROLL 8
		TUCK
		OVER
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		DUP
		FIRST
		PUXC S5, S-1
		ROLL 5
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETINDEX 0
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STDICT
			SWAP
			UNTUPLE 10
			REVERSE 11, 0
			STU 32
			STU 32
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
			STI 1
			STI 1
			STI 1
			STU 256
			STU 32
		}
		ROTREV
		PUSHINT 32
		DICTISETB
		SETGLOB 10
		.loc Elector.tsol, 1187
		PUSHINT 0
		CONFIGPARAM
		DUP
		PUSHCONT {
			PUSHREF {
			}
			SWAP
		}
		IFNOT
		DROP
		.loc Elector.tsol, 1188
		CTOS
		PLDU 256
		PUSHINT -1
		NEWC
		STSLICECONST x9_
		STI 8
		STU 256
		ENDC
		CTOS
		.loc Elector.tsol, 1189
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 12720910251328179000044872783962527403085238168343381
		STUR 175
		STU 64
		STREF
		ENDC
		PUSHINT 1
		SENDRAWMSG
		.loc Elector.tsol, 0
		BLKDROP 6
	}
	IF
}
PUSHCONT {
	.loc Elector.tsol, 1034
	PUSH2 S11, S12
	GETGLOB 17
	PUSHPOW2 8
	DICTUGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	PUSHINT 8
	DICTUGET
IFREFELSEREF
{
		LDU 64
		LDDICT
		ENDS
		PAIR
}
{
		PUSHINT 0
		NEWDICT
		PAIR
}
	.loc Elector.tsol, 1035
	PUSH2 S14, S0
	SECOND
	PUSHPOW2 8
	DICTUGET
	NULLSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	.loc Elector.tsol, 1037
	DUP
	ISNULL
	PUSHINT 140
	.loc Elector.tsol, 942
	SWAP
	PUSHCONT {
		.loc Elector.tsol, 943
		CALLREF {
			CALL $c7_to_c4$
		}
		COMMIT
		.loc Elector.tsol, 944
		DUP
		PUSHINT 2
		MAX
		THROWANY
		.loc Elector.tsol, 0
	}
	IFNOT
	.loc Elector.tsol, 0
	DROP
	.loc Elector.tsol, 1039
	PUSH3 S7, S1, S1
	FIRST
	ROT
	ADD
	SETINDEX 0
	POP S2
	.loc Elector.tsol, 1040
	PUSH3 S7, S1, S1
	SECOND
	PUSH S18
	SWAP
	ROLL 3
	NEWC
	STU 64
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETINDEX 1
	POP S2
	.loc Elector.tsol, 1041
	PUSH2 S1, S14
	GETGLOB 17
	DUP2
	PUSHPOW2 8
	DICTUGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	PUSH S17
	SWAP
	ROLL 4
	CALLREF {
		UNPAIR
		SWAP
		NEWC
		STU 64
		STDICT
	}
	ROTREV
	PUSHINT 8
	DICTUSETB
	NEWC
	STDICT
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETGLOB 17
	.loc Elector.tsol, 1042
	CALLREF {
		CALL $c7_to_c4$
	}
	COMMIT
	.loc Elector.tsol, 1044
	OVER
	FIRST
	GETGLOB 14
	PUSHINT 1
	PUSHINT 3
	MULDIV
	GEQ
	PUSHCONT {
		.loc Elector.tsol, 1047
		PUSH S10
		INDEX 3
		PUSH S3
		GREATER
		THROWIFNOT 141
		.loc Elector.tsol, 1048
		PUSH S14
		GETGLOB 15
		NEWC
		STONE
		ROTREV
		PUSHPOW2 8
		DICTUSETB
		SETGLOB 15
		.loc Elector.tsol, 1049
		PUSH3 S14, S5, S12
		.loc Elector.tsol, 1079
		CALLREF {
			CALL $get_current_vset_cb181528_internal_macro$
		}
		.loc Elector.tsol, 1080
		PUSH S2
		CTOS
		LDU 8
		LDU 32
		LDU 32
		LDU 16
		LDU 16
		LDU 64
		PLDDICT
		TUPLE 7
		.loc Elector.tsol, 1082
		PUSHINT 16
		CONFIGPARAM
		DUP
		PUSHCONT {
			PUSHREF {
			}
			SWAP
		}
		IFNOT
		DROP
		.loc Elector.tsol, 1083
		DUP
		CTOS
		LDU 16
		LDU 16
		PLDU 16
		BLKDROP2 2, 1
		.loc Elector.tsol, 1084
		PUSH S2
		INDEX 3
		OVER
		GREATER
		THROWIFNOT 141
		.loc Elector.tsol, 1086
		FALSE
		DUP
		.loc Elector.tsol, 1088
		PUSHCONT {
			.loc Elector.tsol, 1090
			PUSH2 S9, S2
			LESS
			PUSHCONT {
				.loc Elector.tsol, 1091
				PUSH S2
				DEC
				POP S3
				.loc Elector.tsol, 1092
				PUSH S10
				GETGLOB 16
				CALLREF {
					CALL $update_reports_014af5da_internal_macro$
				}
				SETGLOB 16
			}
			PUSHCONT {
				.loc Elector.tsol, 1094
				PUSH S10
				GETGLOB 17
				CALLREF {
					CALL $update_reports_014af5da_internal_macro$
				}
				SETGLOB 17
			}
			IFELSE
			.loc Elector.tsol, 1097
			NEWDICT
			.loc Elector.tsol, 1098
			PUSHINT 0
			BLKPUSH 2, 0
			.loc Elector.tsol, 1100
			POP S10
			.loc Elector.tsol, 1101
			PUSHINT 0
			POP S4
			.loc Elector.tsol, 1102
			PUSH2 S8, S8
			PUSHINT 16
			DICTUMIN
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			PUSHCONT {
				PUSH S2
				ISNULL
				NOT
			}
			PUSHCONT {
				.loc Elector.tsol, 1103
				BLKPUSH 2, 0
				.loc Elector.tsol, 949
				LDU 8
				POP S2
				.loc Elector.tsol, 950
				DUP
				EQINT 83
				SWAP
				EQINT 115
				OR
				THROWIFNOT 131
				.loc Elector.tsol, 951
				LDU 32
				LDU 256
				PLDU 64
				.loc Elector.tsol, 952
				ROT
				PUSHINT 2390828938
				EQUAL
				THROWIFNOT 131
				.loc Elector.tsol, 1105
				SWAP
				GETGLOB 15
				PUSHPOW2 8
				DICTUGET
				NULLSWAPIFNOT
				NIP
				PUSHCONT {
					.loc Elector.tsol, 1106
					PUSH3 S1, S8, S7
					PUSHINT 16
					DICTUSET
					POP S8
					.loc Elector.tsol, 1107
					PUSH2 S14, S0
					ADD
					POP S15
					.loc Elector.tsol, 1108
					PUSH2 S8, S12
					INDEX 4
					LESS
					PUSHCONT {
						.loc Elector.tsol, 1109
						PUSH2 S6, S0
						ADD
						POP S7
					}
					PUSHCONT {
						.loc Elector.tsol, 1111
						PUSH2 S5, S0
						ADD
						POP S6
					}
					IFELSE
					.loc Elector.tsol, 1113
					PUSH S8
					INC
					POP S9
					.loc Elector.tsol, 0
				}
				IFNOT
				.loc Elector.tsol, 0
				DROP
				PUSH2 S2, S3
				PUSHINT 16
				DICTUGETNEXT
				PUSHCONT {
					DUP
					ROT
				}
				PUSHCONT {
					NULL
					BLKPUSH 2, 0
				}
				IFELSE
				BLKDROP2 3, 3
			}
			WHILE
			BLKDROP 4
			.loc Elector.tsol, 1116
			PUSH2 S3, S5
			GEQ
			THROWIFNOT 141
			.loc Elector.tsol, 1117
			OVER
			SETGLOB 13
			.loc Elector.tsol, 1118
			DUP
			SETGLOB 14
			.loc Elector.tsol, 1120
			PUSHINT 0
			POP S4
			.loc Elector.tsol, 1121
			GETGLOB 16
			.loc Elector.tsol, 1122
			GETGLOB 13
			PUSHINT 2
			PUSHINT 3
			MULDIV
			.loc Elector.tsol, 1124
			PUSH2 S4, S4
			PUSHINT 16
			DICTUMIN
			PUSHCONT {
				DUP
				ROT
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			PUSHCONT {
				PUSH S2
				ISNULL
				NOT
			}
			PUSHCONT {
				PUSHCONT {
					.loc Elector.tsol, 1125
					LDU 8
					LDU 32
					LDU 256
					LDU 64
					LDU 256
					ROLLREV 5
					TUPLE 5
					.loc Elector.tsol, 1126
					DUP
					FIRST
					NEQINT 83
					THROWIFNOT 131
					.loc Elector.tsol, 1127
					PUSH2 S10, S12
					EQUAL
					PUSHCONT {
						.loc Elector.tsol, 1128
						GETGLOB 14
						PUSHINT 1
						PUSHINT 3
						MULDIV
						POP S6
						.loc Elector.tsol, 1130
						GETGLOB 17
						POP S7
						.loc Elector.tsol, 0
					}
					IF
					.loc Elector.tsol, 1132
					DUP
					THIRD
					PUSH S7
					PUSHPOW2 8
					DICTUGET
					PUSHCONT {
						PLDDICT
					}
					PUSHCONT {
						NEWDICT
					}
					IFELSE
					SINGLE
					.loc Elector.tsol, 1133
					DUP
					ISNULL
					PUSHCONT {
						.loc Elector.tsol, 1134
						BLKPUSH 2, 0
						ISNULL
						THROWIF 63
						UNSINGLE
						DUP
						PUSHINT 8
						DICTUMIN
						PUSHCONT {
							NULL
							BLKPUSH 2, 0
						}
IFREFELSE {
							DUP
							ROT
							LDU 64
							LDDICT
							ENDS
							PAIR
}
						PUSHCONT {
							PUSH S2
							ISNULL
							NOT
						}
						PUSHCONT {
							.loc Elector.tsol, 1136
							DUP
							FIRST
							PUSH S11
							GEQ
							PUSHCONT {
								.loc Elector.tsol, 1137
								GETGLOB 15
								PUSH S6
								THIRD
								SWAP
								NEWC
								STONE
								ROTREV
								PUSHPOW2 8
								DICTUSETB
								SETGLOB 15
								.loc Elector.tsol, 1138
								TRUE
								POP S17
								.loc Elector.tsol, 1139
								PUSH S5
								THIRD
								POP S26
								.loc Elector.tsol, 1140
								PUSH S15
								POP S25
								.loc Elector.tsol, 1141
								PUSH S14
								POP S21
								.loc Elector.tsol, 1142
								RETALT
								.loc Elector.tsol, 0
							}
							IFJMP
							.loc Elector.tsol, 0
							PUSH2 S2, S3
							PUSHINT 8
							DICTUGETNEXT
							PUSHCONT {
								NULL
								BLKPUSH 2, 0
							}
IFREFELSE {
								DUP
								ROT
								LDU 64
								LDDICT
								ENDS
								PAIR
}
							BLKDROP2 3, 3
						}
						WHILEBRK
						BLKDROP 4
						.loc Elector.tsol, 0
					}
					IFNOT
					.loc Elector.tsol, 1146
					DROP2
					PUSH S10
					IFRET
					.loc Elector.tsol, 1149
					PUSH S9
					INC
					POP S10
					.loc Elector.tsol, 0
				}
				CALLX
				PUSH2 S2, S3
				PUSHINT 16
				DICTUGETNEXT
				PUSHCONT {
					DUP
					ROT
				}
				PUSHCONT {
					NULL
					BLKPUSH 2, 0
				}
				IFELSE
				BLKDROP2 3, 3
			}
			WHILE
			BLKDROP 8
			.loc Elector.tsol, 1151
			POP S6
			.loc Elector.tsol, 0
			OVER
			NOT
		}
		UNTIL
		.loc Elector.tsol, 1154
		PUSHINT 0
		BLKPUSH 5, 0
		NEWDICT
		TUPLE 7
		.loc Elector.tsol, 1155
		PUSHINT 18
		SETINDEX 0
		.loc Elector.tsol, 1156
		NOW
		ADDCONST 60
		SETINDEX 1
		.loc Elector.tsol, 1157
		PUSH S5
		THIRD
		SETINDEX 2
		.loc Elector.tsol, 1158
		ROLL 7
		SETINDEX 5
		.loc Elector.tsol, 1159
		OVER
		SETINDEX 3
		.loc Elector.tsol, 1160
		SWAP
		ROLL 5
		INDEX 4
		MIN
		SETINDEX 4
		.loc Elector.tsol, 1161
		ROLL 4
		SETINDEX 6
		.loc Elector.tsol, 1164
		NEWC
		SWAP
		UNTUPLE 7
		REVERSE 8, 0
		STU 8
		STU 32
		STU 32
		STU 16
		STU 16
		STU 64
		STDICT
		.loc Elector.tsol, 1165
		ENDC
		.loc Elector.tsol, 1167
		PUSH S5
		GETGLOB 10
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		SECOND
		INDEX 9
		.loc Elector.tsol, 1168
		PUSH2 S0, S6
		GETGLOB 10
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		FIRST
		PUSHINT 32
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 32
			LDU 32
			LDU 256
			LDDICT
			LDVARUINT16
			LDVARUINT16
			LDDICT
			ENDS
			TUPLE 7
		}
		.loc Elector.tsol, 1169
		DUP
		ISNULL
		THROWIF 136
		.loc Elector.tsol, 1170
		DUP
		ISNULL
		THROWIF 63
		.loc Elector.tsol, 1172
		PUSH S2
		HASHCU
		.loc Elector.tsol, 1173
		PUSH2 S0, S8
		GETGLOB 10
		DUP2
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		DUP
		SECOND
		ROLL 4
		SETINDEX 8
		SETINDEX 1
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STDICT
			SWAP
			UNTUPLE 10
			REVERSE 11, 0
			STU 32
			STU 32
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
			STI 1
			STI 1
			STI 1
			STU 256
			STU 32
		}
		ROTREV
		PUSHINT 32
		DICTISETB
		SETGLOB 10
		.loc Elector.tsol, 1174
		SETINDEX 2
		.loc Elector.tsol, 1175
		PUSH2 S9, S0
		INDEX 3
		PUSHPOW2 8
		DICTUGET
		NULLSWAPIFNOT
		IFREF {
			LDU 256
			LDU 64
			LDVARUINT16
			LDI 1
			ENDS
			TUPLE 4
		}
		.loc Elector.tsol, 1176
		DUP
		ISNULL
		PUSHCONT {
			.loc Elector.tsol, 1177
			BLKPUSH 2, 0
			ISNULL
			THROWIF 63
			.loc Elector.tsol, 1178
			TRUE
			SETINDEX 3
			.loc Elector.tsol, 1179
			PUSH3 S0, S2, S2
			INDEX 3
			PUXC S14, S-1
			ROLL 3
			CALLREF {
				UNTUPLE 4
				REVERSE 4, 0
				NEWC
				STU 256
				STU 64
				SWAP
				STVARUINT16
				STI 1
			}
			ROTREV
			PUSHPOW2 8
			DICTUSETB
			SETINDEX 3
			POP S3
			.loc Elector.tsol, 1180
			DUP
			THIRD
			PUSH2 S3, S3
			INDEX 5
			ROT
			ADD
			SETINDEX 5
			POP S3
			.loc Elector.tsol, 1181
			THIRD
			PUSH2 S2, S2
			INDEX 4
			ROT
			SUB
			SETINDEX 4
			POP S2
			.loc Elector.tsol, 0
		}
		IFNOT
		.loc Elector.tsol, 1185
		DROP
		GETGLOB 10
		ROLL 8
		TUCK
		OVER
		PUSHINT 32
		DICTIGET
IFREFELSEREF
{
			LDDICT
			LDU 32
			LDU 32
			LDVARUINT16
			LDVARUINT16
			LDDICT
			LDI 1
			LDI 1
			LDI 1
			LDU 256
			LDU 32
			ROLLREV 10
			TUPLE 10
			SWAP
			ENDS
			PAIR
}
{
			NEWDICT
			PUSHINT 0
			BLKPUSH 3, 0
			NEWDICT
			PUSHINT 0
			BLKPUSH 4, 0
			TUPLE 10
			PAIR
}
		DUP
		FIRST
		PUXC S5, S-1
		ROLL 5
		CALLREF {
			UNTUPLE 7
			REVERSE 7, 0
			NEWC
			STU 32
			STU 32
			STU 256
			STDICT
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
		}
		ROTREV
		PUSHINT 32
		DICTUSETB
		SETINDEX 0
		CALLREF {
			UNPAIR
			SWAP
			NEWC
			STDICT
			SWAP
			UNTUPLE 10
			REVERSE 11, 0
			STU 32
			STU 32
			SWAP
			STVARUINT16
			SWAP
			STVARUINT16
			STDICT
			STI 1
			STI 1
			STI 1
			STU 256
			STU 32
		}
		ROTREV
		PUSHINT 32
		DICTISETB
		SETGLOB 10
		.loc Elector.tsol, 1187
		PUSHINT 0
		CONFIGPARAM
		DUP
		PUSHCONT {
			PUSHREF {
			}
			SWAP
		}
		IFNOT
		DROP
		.loc Elector.tsol, 1188
		CTOS
		PLDU 256
		PUSHINT -1
		NEWC
		STSLICECONST x9_
		STI 8
		STU 256
		ENDC
		CTOS
		.loc Elector.tsol, 1189
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 12720910251328179000044872783962527403085238168343381
		STUR 175
		STU 64
		STREF
		ENDC
		PUSHINT 1
		SENDRAWMSG
		.loc Elector.tsol, 0
		BLKDROP 6
	}
	IF
}
IFELSE
.loc Elector.tsol, 0
PUSHINT 18
DROPX

.globl	update_reports_014af5da_internal
.type	update_reports_014af5da_internal, @function
CALL $update_reports_014af5da_internal_macro$

.macro update_reports_014af5da_internal_macro
.loc Elector.tsol, 1056
PUSH3 S0, S0, S0
.loc Elector.tsol, 1057
PUSHPOW2 8
DICTUMIN
PUSHCONT {
	DUP
	ROT
	PLDDICT
}
PUSHCONT {
	NULL
	BLKPUSH 2, 0
}
IFELSE
PUSHCONT {
	PUSH S2
	ISNULL
	NOT
}
PUSHCONT {
	.loc Elector.tsol, 1058
	BLKPUSH 2, 0
	PUSHINT 8
	DICTUMIN
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
IFREFELSE {
		DUP
		ROT
		LDU 64
		LDDICT
		ENDS
		PAIR
}
	PUSHCONT {
		PUSH S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc Elector.tsol, 1059
		DUP
		SECOND
		DUP
		PUSHPOW2 8
		DICTUMIN
		PUSHCONT {
			DUP
			ROT
			PLDU 64
		}
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
		IFELSE
		PUSHCONT {
			PUSH S2
			ISNULL
			NOT
		}
		PUSHCONT {
			.loc Elector.tsol, 1060
			PUSH2 S14, S1
			EQUAL
			PUSHCONT {
				.loc Elector.tsol, 1061
				PUSH3 S0, S4, S4
				FIRST
				ROT
				SUB
				SETINDEX 0
				POP S5
				.loc Elector.tsol, 1062
				PUSH2 S4, S4
				SECOND
				PUSH S16
				SWAP
				PUSHPOW2 8
				DICTUDEL
				DROP
				SETINDEX 1
				POP S5
				.loc Elector.tsol, 1063
				PUSH3 S5, S8, S4
				.loc Elector.tsol, 1064
				CALLREF {
					UNPAIR
					SWAP
					NEWC
					STU 64
					STDICT
				}
				ROTREV
				PUSHINT 8
				DICTUSETB
				.loc Elector.tsol, 1065
				PUSH2 S10, S13
				ROT
				NEWC
				STDICT
				ROTREV
				PUSHPOW2 8
				DICTUSETB
				POP S13
				.loc Elector.tsol, 1066
				RETALT
				.loc Elector.tsol, 0
			}
			IFJMP
			.loc Elector.tsol, 0
			PUSH2 S2, S3
			PUSHPOW2 8
			DICTUGETNEXT
			PUSHCONT {
				DUP
				ROT
				PLDU 64
			}
			PUSHCONT {
				NULL
				BLKPUSH 2, 0
			}
			IFELSE
			BLKDROP2 3, 3
		}
		WHILEBRK
		BLKDROP 4
		.loc Elector.tsol, 0
		PUSH2 S2, S3
		PUSHINT 8
		DICTUGETNEXT
		PUSHCONT {
			NULL
			BLKPUSH 2, 0
		}
IFREFELSE {
			DUP
			ROT
			LDU 64
			LDDICT
			ENDS
			PAIR
}
		BLKDROP2 3, 3
	}
	WHILE
	BLKDROP 4
	.loc Elector.tsol, 0
	PUSH2 S2, S3
	PUSHPOW2 8
	DICTUGETNEXT
	PUSHCONT {
		DUP
		ROT
		PLDDICT
	}
	PUSHCONT {
		NULL
		BLKPUSH 2, 0
	}
	IFELSE
	BLKDROP2 3, 3
}
WHILE
BLKDROP 4
.loc Elector.tsol, 1071
BLKDROP2 2, 1
.loc Elector.tsol, 0

.macro get
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 1194
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $get_6d4ce63c_internal_macro$
}
PUSH S2
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 98
	STZEROES
	REVERSE 2, 1
	STSLICECONST xda9fe0a0
	STDICT
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP2
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_6d4ce63c_internal
.type	get_6d4ce63c_internal, @function
CALL $get_6d4ce63c_internal_macro$

.macro get_6d4ce63c_internal_macro
.loc Elector.tsol, 1200
GETGLOB 10
.loc Elector.tsol, 1201
GETGLOB 12
.loc Elector.tsol, 0

.macro get_banned
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 1204
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $get_banned_46830d60_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2209532425
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_banned_46830d60_internal
.type	get_banned_46830d60_internal, @function
CALL $get_banned_46830d60_internal_macro$

.macro get_banned_46830d60_internal_macro
.loc Elector.tsol, 1205
GETGLOB 15
.loc Elector.tsol, 0

.macro get_buckets
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 1208
LDU 256
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $get_buckets_2f917ad4_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3222122547
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_buckets_2f917ad4_internal
.type	get_buckets_2f917ad4_internal, @function
CALL $get_buckets_2f917ad4_internal_macro$

.macro get_buckets_2f917ad4_internal_macro
.loc Elector.tsol, 1209
GETGLOB 16
PUSHPOW2 8
DICTUGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
.loc Elector.tsol, 0

.macro get_buckets_workchain
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 1212
LDU 256
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $get_buckets_workchain_88da170e_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3736707536
	STUR 130
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_buckets_workchain_88da170e_internal
.type	get_buckets_workchain_88da170e_internal, @function
CALL $get_buckets_workchain_88da170e_internal_macro$

.macro get_buckets_workchain_88da170e_internal_macro
.loc Elector.tsol, 1213
GETGLOB 17
PUSHPOW2 8
DICTUGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
.loc Elector.tsol, 0

.macro active_election_id
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 1217
LDI 32
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $active_election_id_d1003ae7_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2444844155
	STUR 130
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	active_election_id_d1003ae7_internal
.type	active_election_id_d1003ae7_internal, @function
CALL $active_election_id_d1003ae7_internal_macro$

.macro active_election_id_d1003ae7_internal_macro
.loc Elector.tsol, 1218
DUP
GETGLOB 10
PUSHINT 32
DICTIGET
IFREFELSEREF
{
	LDDICT
	LDU 32
	LDU 32
	LDVARUINT16
	LDVARUINT16
	LDDICT
	LDI 1
	LDI 1
	LDI 1
	LDU 256
	LDU 32
	ROLLREV 10
	TUPLE 10
	SWAP
	ENDS
	PAIR
}
{
	NEWDICT
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PUSHINT 0
	BLKPUSH 4, 0
	TUPLE 10
	PAIR
}
SECOND
INDEX 7
ZEROSWAPIFNOT
PUSHCONT {
	DUP
	GETGLOB 10
	PUSHINT 32
	DICTIGET
IFREFELSEREF
{
		LDDICT
		LDU 32
		LDU 32
		LDVARUINT16
		LDVARUINT16
		LDDICT
		LDI 1
		LDI 1
		LDI 1
		LDU 256
		LDU 32
		ROLLREV 10
		TUPLE 10
		SWAP
		ENDS
		PAIR
}
{
		NEWDICT
		PUSHINT 0
		BLKPUSH 3, 0
		NEWDICT
		PUSHINT 0
		BLKPUSH 4, 0
		TUPLE 10
		PAIR
}
	INDEX2 1, 0
}
IF
NIP
.loc Elector.tsol, 0

.macro get_version
DROP
GETGLOB 6
THROWIFNOT 76
.loc Elector.tsol, 1222
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $get_version_90179465_internal_macro$
}
PUSH S2
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 98
	STZEROES
	REVERSE 2, 1
	STSLICECONST xabc534f5
	STU 32
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP2
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	get_version_90179465_internal
.type	get_version_90179465_internal, @function
CALL $get_version_90179465_internal_macro$

.macro get_version_90179465_internal_macro
.loc Elector.tsol, 1223
PUSHINT 0
PUSHINT 1
.loc Elector.tsol, 0

.macro compute_returned_stake
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 1227
LDU 256
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $compute_returned_stake_a73d54da_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3757192781
	STUR 130
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	compute_returned_stake_a73d54da_internal
.type	compute_returned_stake_a73d54da_internal, @function
CALL $compute_returned_stake_a73d54da_internal_macro$

.macro compute_returned_stake_a73d54da_internal_macro
.loc Elector.tsol, 1228
GETGLOB 11
PUSHPOW2 8
DICTUGET
NULLSWAPIFNOT
PUSHCONT {
	LDVARUINT16
	DROP
}
IF
.loc Elector.tsol, 1229
DUP
ISNULL
ZEROSWAPIF
PUSHCONT {
	BLKPUSH 2, 0
	ISNULL
	THROWIF 63
}
IFNOT
NIP
.loc Elector.tsol, 0

.macro on_bounce_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 1233
PLDU 32
.loc Elector.tsol, 1234
PUSHINT 4184830756
EQUAL
PUSHCONT {
	.loc Elector.tsol, 1235
	GETGLOB 9
	REWRITESTDADDR
	.loc Elector.tsol, 1236
	SWAP
	EQINT -1
	THROWIFNOT 223
	.loc Elector.tsol, 1237
	DEPTH
	ADDCONST -2
	PICK
	UFITS 120
	GETGLOB 11
	NEWC
	ROT
	STVARUINT16
	ROTREV
	PUSHPOW2 8
	DICTUSETB
	SETGLOB 11
	.loc Elector.tsol, 0
}
IF
.loc Elector.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro receive_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}

.macro fallback_macro
GETGLOB 6
THROWIFNOT 76
.loc Elector.tsol, 1248
DEPTH
ADDCONST -4
PICK
.loc Elector.tsol, 1249
DUP
LDU 32
POP S2
.loc Elector.tsol, 1250
SWAP
PLDU 64
.loc Elector.tsol, 1251
GETGLOB 9
PUSHPOW2DEC 32
SWAP2
SWAP
PUSHINT 0
PUSHINT 64
CALLREF {
	CALL $send_message_back_30631536_internal_macro$
}
.loc Elector.tsol, 0
DUP
IFREF {
	CALL $upd_only_time_in_c4$
}

.internal-alias onCodeUpgrade_e5436b53_internal, 2
.internal onCodeUpgrade_e5436b53_internal
.loc Elector.tsol, 1255
PUSH S2
PUSHINT 3460525924
PUSH S2
PUSHINT 1313042276
PUSHINT 0
PUSHINT 64
CALLREF {
	CALL $send_message_back_30631536_internal_macro$
}
.loc Elector.tsol, 1256
GETGLOB 2
ISNULL
IFNOTREF {
	CALL $c7_to_c4$
}
THROW 0
.loc Elector.tsol, 0

.globl	_upgrade_code_5dac022d_internal
.type	_upgrade_code_5dac022d_internal, @function
CALL $_upgrade_code_5dac022d_internal_macro$

.macro _upgrade_code_5dac022d_internal_macro
.loc Elector.tsol, 1259
PUSHINT 0
DUP
.loc Elector.tsol, 1260
CONFIGPARAM
DUP
PUSHCONT {
	PUSHREF {
	}
	SWAP
}
IFNOT
.loc Elector.tsol, 1261
PUSHCONT {
	.loc Elector.tsol, 1263
	BLKDROP 5
	FALSE
	.loc Elector.tsol, 0
}
IFNOTJMP
.loc Elector.tsol, 1265
GETGLOB 9
.loc Elector.tsol, 1266
SWAP
CTOS
PLDU 256
.loc Elector.tsol, 1267
GETGLOB 9
REWRITESTDADDR
.loc Elector.tsol, 1268
SWAP
NEQINT -1
XCHG S2
NEQ
OR
PUSHCONT {
	.loc Elector.tsol, 1270
	BLKDROP 5
	FALSE
	.loc Elector.tsol, 0
}
IFJMP
.loc Elector.tsol, 1272
ACCEPT
.loc Elector.tsol, 1273
PUSH S3
SETCODE
.loc Elector.tsol, 1274
ROLL 3
CTOS
DUP
PUSHSLICE x8adb35
SDEQ
PUSHCONT {
	PLDREFIDX 1
	CTOS
}
IF
PLDREF
CTOS
BLESS
POP C3
.loc Elector.tsol, 1275
ROT
CTOS
ROLL 3
PUSHINT $onCodeUpgrade_e5436b53_internal$
PUSH C3
EXECUTE
.loc Elector.tsol, 0

.macro upgrade_code
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Elector.tsol, 1278
LDU 64
LDREF
LDREF
ENDS
.loc Elector.tsol, 0
CALLREF {
	CALL $upgrade_code_c518c75b_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.globl	upgrade_code_c518c75b_internal
.type	upgrade_code_c518c75b_internal, @function
CALL $upgrade_code_c518c75b_internal_macro$

.macro upgrade_code_c518c75b_internal_macro
.loc Elector.tsol, 1278
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Elector.tsol, 1280
PUSH S2
ROTREV
CALLREF {
	CALL $_upgrade_code_5dac022d_internal_macro$
}
.loc Elector.tsol, 1281
GETGLOB 9
SWAP
PUSHINT 3460525924
PUSHPOW2DEC 32
CONDSEL
ROT
PUSHINT 1313042276
PUSHINT 0
PUSHINT 64
CALLREF {
	CALL $send_message_back_30631536_internal_macro$
}
.loc Elector.tsol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDDICT
LDDICT
LDVARUINT16
LDU 64
LDU 64
LDDICT
LDREF
ENDS
CTOS
LDDICT
LDDICT
ENDS
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	NEWDICT
	DUP
	PUSHINT 0
	BLKPUSH 2, 0
	NEWDICT
	BLKPUSH 2, 0
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STDICT
STDICT
SWAP
STVARUINT16
STU 64
STU 64
STDICT
ROTREV
NEWC
STDICT
STDICT
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFJMPREF {
	OVER
	LDSLICE 32
	NIP
	CALL $on_bounce_macro$
}
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
PUSHCONT {
	DROP
	CALLREF {
		CALL $fallback_macro$
	}
	THROW 0
}
IFNOT
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
DROP2
CALLREF {
	CALL $fallback_macro$
}

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX
	DUP
	MYADDR
	NEWC
	STSLICE
	STSLICE
	ENDC
	HASHCU
	ROT
	GETGLOB 2
	CHKSIGNU
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
DROP2
CALLREF {
	CALL $fallback_macro$
}

.macro public_function_selector
DUP
PUSHINT 2046001087
LEQ
IFJMPREF {
	DUP
	PUSHINT 734344437
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 62048777
		EQUAL
		IFJMPREF {
			CALL $get_banned$
		}
		DUP
		PUSHINT 297360507
		EQUAL
		IFJMPREF {
			CALL $active_election_id$
		}
		DUP
		PUSHINT 369714999
		EQUAL
		IFJMPREF {
			CALL $take_change$
		}
		DUP
		PUSHINT 734344437
		EQUAL
		IFJMPREF {
			CALL $get_version$
		}
	}
	DUP
	PUSHINT 1197831206
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1074638899
		EQUAL
		IFJMPREF {
			CALL $get_buckets$
		}
		DUP
		PUSHINT 1197831204
		EQUAL
		IFJMPREF {
			CALL $recover_stake$
		}
		DUP
		PUSHINT 1197831205
		EQUAL
		IFJMPREF {
			CALL $recover_stake_gracefully$
		}
		DUP
		PUSHINT 1197831206
		EQUAL
		IFJMPREF {
			CALL $get_elect_at$
		}
	}
	DUP
	PUSHINT 1520427168
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1198678382
		EQUAL
		IFJMPREF {
			CALL $grant$
		}
		DUP
		PUSHINT 1313042276
		EQUAL
		IFJMPREF {
			CALL $upgrade_code$
		}
		DUP
		PUSHINT 1316189259
		EQUAL
		IFJMPREF {
			CALL $process_new_stake$
		}
		DUP
		PUSHINT 1520427168
		EQUAL
		IFJMPREF {
			CALL $get$
		}
	}
	DUP
	PUSHINT 2046001087
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1589223888
		EQUAL
		IFJMPREF {
			CALL $get_buckets_workchain$
		}
		DUP
		PUSHINT 1609709133
		EQUAL
		IFJMPREF {
			CALL $compute_returned_stake$
		}
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
		DUP
		PUSHINT 2046001087
		EQUAL
		IFJMPREF {
			CALL $report$
		}
	}
}
DUP
PUSHINT 4000730992
LEQ
IFJMPREF {
	DUP
	PUSHINT 4000730955
	EQUAL
	IFJMPREF {
		CALL $config_set_confirmed_ok$
	}
	DUP
	PUSHINT 4000730956
	EQUAL
	IFJMPREF {
		CALL $config_slash_confirmed_ok$
	}
	DUP
	PUSHINT 4000730991
	EQUAL
	IFJMPREF {
		CALL $config_set_confirmed_err$
	}
	DUP
	PUSHINT 4000730992
	EQUAL
	IFJMPREF {
		CALL $config_slash_confirmed_err$
	}
}

